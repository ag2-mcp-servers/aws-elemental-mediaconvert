# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T12:37:06+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, conint, constr


class AacAudioDescriptionBroadcasterMix(Enum):
    BROADCASTER_MIXED_AD = 'BROADCASTER_MIXED_AD'
    NORMAL = 'NORMAL'


class AacCodecProfile(Enum):
    LC = 'LC'
    HEV1 = 'HEV1'
    HEV2 = 'HEV2'


class AacCodingMode(Enum):
    AD_RECEIVER_MIX = 'AD_RECEIVER_MIX'
    CODING_MODE_1_0 = 'CODING_MODE_1_0'
    CODING_MODE_1_1 = 'CODING_MODE_1_1'
    CODING_MODE_2_0 = 'CODING_MODE_2_0'
    CODING_MODE_5_1 = 'CODING_MODE_5_1'


class AacRateControlMode(Enum):
    CBR = 'CBR'
    VBR = 'VBR'


class AacRawFormat(Enum):
    LATM_LOAS = 'LATM_LOAS'
    NONE = 'NONE'


class AacSpecification(Enum):
    MPEG2 = 'MPEG2'
    MPEG4 = 'MPEG4'


class AacVbrQuality(Enum):
    LOW = 'LOW'
    MEDIUM_LOW = 'MEDIUM_LOW'
    MEDIUM_HIGH = 'MEDIUM_HIGH'
    HIGH = 'HIGH'


class Ac3BitstreamMode(Enum):
    COMPLETE_MAIN = 'COMPLETE_MAIN'
    COMMENTARY = 'COMMENTARY'
    DIALOGUE = 'DIALOGUE'
    EMERGENCY = 'EMERGENCY'
    HEARING_IMPAIRED = 'HEARING_IMPAIRED'
    MUSIC_AND_EFFECTS = 'MUSIC_AND_EFFECTS'
    VISUALLY_IMPAIRED = 'VISUALLY_IMPAIRED'
    VOICE_OVER = 'VOICE_OVER'


class Ac3CodingMode(Enum):
    CODING_MODE_1_0 = 'CODING_MODE_1_0'
    CODING_MODE_1_1 = 'CODING_MODE_1_1'
    CODING_MODE_2_0 = 'CODING_MODE_2_0'
    CODING_MODE_3_2_LFE = 'CODING_MODE_3_2_LFE'


class Ac3DynamicRangeCompressionLine(Enum):
    FILM_STANDARD = 'FILM_STANDARD'
    FILM_LIGHT = 'FILM_LIGHT'
    MUSIC_STANDARD = 'MUSIC_STANDARD'
    MUSIC_LIGHT = 'MUSIC_LIGHT'
    SPEECH = 'SPEECH'
    NONE = 'NONE'


class Ac3DynamicRangeCompressionProfile(Enum):
    FILM_STANDARD = 'FILM_STANDARD'
    NONE = 'NONE'


class Ac3DynamicRangeCompressionRf(Enum):
    FILM_STANDARD = 'FILM_STANDARD'
    FILM_LIGHT = 'FILM_LIGHT'
    MUSIC_STANDARD = 'MUSIC_STANDARD'
    MUSIC_LIGHT = 'MUSIC_LIGHT'
    SPEECH = 'SPEECH'
    NONE = 'NONE'


class Ac3LfeFilter(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Ac3MetadataControl(Enum):
    FOLLOW_INPUT = 'FOLLOW_INPUT'
    USE_CONFIGURED = 'USE_CONFIGURED'


class AccelerationMode(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'
    PREFERRED = 'PREFERRED'


class AccelerationSettings(BaseModel):
    Mode: AccelerationMode


class AccelerationStatus(Enum):
    NOT_APPLICABLE = 'NOT_APPLICABLE'
    IN_PROGRESS = 'IN_PROGRESS'
    ACCELERATED = 'ACCELERATED'
    NOT_ACCELERATED = 'NOT_ACCELERATED'


class AfdSignaling(Enum):
    NONE = 'NONE'
    AUTO = 'AUTO'
    FIXED = 'FIXED'


class AlphaBehavior(Enum):
    DISCARD = 'DISCARD'
    REMAP_TO_LUMA = 'REMAP_TO_LUMA'


class AncillaryConvert608To708(Enum):
    UPCONVERT = 'UPCONVERT'
    DISABLED = 'DISABLED'


class AncillaryTerminateCaptions(Enum):
    END_OF_INPUT = 'END_OF_INPUT'
    DISABLED = 'DISABLED'


class AntiAlias(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class AssociateCertificateResponse(BaseModel):
    pass


class AudioChannelTag(Enum):
    L = 'L'
    R = 'R'
    C = 'C'
    LFE = 'LFE'
    LS = 'LS'
    RS = 'RS'
    LC = 'LC'
    RC = 'RC'
    CS = 'CS'
    LSD = 'LSD'
    RSD = 'RSD'
    TCS = 'TCS'
    VHL = 'VHL'
    VHC = 'VHC'
    VHR = 'VHR'


class AudioChannelTaggingSettings(BaseModel):
    ChannelTag: Optional[AudioChannelTag] = None


class AudioCodec(Enum):
    AAC = 'AAC'
    MP2 = 'MP2'
    MP3 = 'MP3'
    WAV = 'WAV'
    AIFF = 'AIFF'
    AC3 = 'AC3'
    EAC3 = 'EAC3'
    EAC3_ATMOS = 'EAC3_ATMOS'
    VORBIS = 'VORBIS'
    OPUS = 'OPUS'
    PASSTHROUGH = 'PASSTHROUGH'


class AudioDefaultSelection(Enum):
    DEFAULT = 'DEFAULT'
    NOT_DEFAULT = 'NOT_DEFAULT'


class AudioDurationCorrection(Enum):
    DISABLED = 'DISABLED'
    AUTO = 'AUTO'
    TRACK = 'TRACK'
    FRAME = 'FRAME'


class AudioLanguageCodeControl(Enum):
    FOLLOW_INPUT = 'FOLLOW_INPUT'
    USE_CONFIGURED = 'USE_CONFIGURED'


class AudioNormalizationAlgorithm(Enum):
    ITU_BS_1770_1 = 'ITU_BS_1770_1'
    ITU_BS_1770_2 = 'ITU_BS_1770_2'
    ITU_BS_1770_3 = 'ITU_BS_1770_3'
    ITU_BS_1770_4 = 'ITU_BS_1770_4'


class AudioNormalizationAlgorithmControl(Enum):
    CORRECT_AUDIO = 'CORRECT_AUDIO'
    MEASURE_ONLY = 'MEASURE_ONLY'


class AudioNormalizationLoudnessLogging(Enum):
    LOG = 'LOG'
    DONT_LOG = 'DONT_LOG'


class AudioNormalizationPeakCalculation(Enum):
    TRUE_PEAK = 'TRUE_PEAK'
    NONE = 'NONE'


class AudioSelectorType(Enum):
    PID = 'PID'
    TRACK = 'TRACK'
    LANGUAGE_CODE = 'LANGUAGE_CODE'
    HLS_RENDITION_GROUP = 'HLS_RENDITION_GROUP'


class AudioTypeControl(Enum):
    FOLLOW_INPUT = 'FOLLOW_INPUT'
    USE_CONFIGURED = 'USE_CONFIGURED'


class Av1AdaptiveQuantization(Enum):
    OFF = 'OFF'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'
    HIGHER = 'HIGHER'
    MAX = 'MAX'


class Av1BitDepth(Enum):
    BIT_8 = 'BIT_8'
    BIT_10 = 'BIT_10'


class Av1FramerateControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class Av1FramerateConversionAlgorithm(Enum):
    DUPLICATE_DROP = 'DUPLICATE_DROP'
    INTERPOLATE = 'INTERPOLATE'
    FRAMEFORMER = 'FRAMEFORMER'


class Av1RateControlMode(Enum):
    QVBR = 'QVBR'


class Av1SpatialAdaptiveQuantization(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class AvcIntraClass(Enum):
    CLASS_50 = 'CLASS_50'
    CLASS_100 = 'CLASS_100'
    CLASS_200 = 'CLASS_200'
    CLASS_4K_2K = 'CLASS_4K_2K'


class AvcIntraFramerateControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class AvcIntraFramerateConversionAlgorithm(Enum):
    DUPLICATE_DROP = 'DUPLICATE_DROP'
    INTERPOLATE = 'INTERPOLATE'
    FRAMEFORMER = 'FRAMEFORMER'


class AvcIntraInterlaceMode(Enum):
    PROGRESSIVE = 'PROGRESSIVE'
    TOP_FIELD = 'TOP_FIELD'
    BOTTOM_FIELD = 'BOTTOM_FIELD'
    FOLLOW_TOP_FIELD = 'FOLLOW_TOP_FIELD'
    FOLLOW_BOTTOM_FIELD = 'FOLLOW_BOTTOM_FIELD'


class AvcIntraScanTypeConversionMode(Enum):
    INTERLACED = 'INTERLACED'
    INTERLACED_OPTIMIZE = 'INTERLACED_OPTIMIZE'


class AvcIntraSlowPal(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class AvcIntraTelecine(Enum):
    NONE = 'NONE'
    HARD = 'HARD'


class AvcIntraUhdQualityTuningLevel(Enum):
    SINGLE_PASS = 'SINGLE_PASS'
    MULTI_PASS = 'MULTI_PASS'


class AvcIntraUhdSettings(BaseModel):
    QualityTuningLevel: Optional[AvcIntraUhdQualityTuningLevel] = None


class BadRequestException(RootModel[Any]):
    root: Any


class BandwidthReductionFilterSharpening(Enum):
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'
    OFF = 'OFF'


class BandwidthReductionFilterStrength(Enum):
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'
    AUTO = 'AUTO'
    OFF = 'OFF'


class BillingTagsSource(Enum):
    QUEUE = 'QUEUE'
    PRESET = 'PRESET'
    JOB_TEMPLATE = 'JOB_TEMPLATE'
    JOB = 'JOB'


class BurnInSubtitleStylePassthrough(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class BurninSubtitleAlignment(Enum):
    CENTERED = 'CENTERED'
    LEFT = 'LEFT'
    AUTO = 'AUTO'


class BurninSubtitleApplyFontColor(Enum):
    WHITE_TEXT_ONLY = 'WHITE_TEXT_ONLY'
    ALL_TEXT = 'ALL_TEXT'


class BurninSubtitleBackgroundColor(Enum):
    NONE = 'NONE'
    BLACK = 'BLACK'
    WHITE = 'WHITE'
    AUTO = 'AUTO'


class BurninSubtitleFallbackFont(Enum):
    BEST_MATCH = 'BEST_MATCH'
    MONOSPACED_SANSSERIF = 'MONOSPACED_SANSSERIF'
    MONOSPACED_SERIF = 'MONOSPACED_SERIF'
    PROPORTIONAL_SANSSERIF = 'PROPORTIONAL_SANSSERIF'
    PROPORTIONAL_SERIF = 'PROPORTIONAL_SERIF'


class BurninSubtitleFontColor(Enum):
    WHITE = 'WHITE'
    BLACK = 'BLACK'
    YELLOW = 'YELLOW'
    RED = 'RED'
    GREEN = 'GREEN'
    BLUE = 'BLUE'
    HEX = 'HEX'
    AUTO = 'AUTO'


class BurninSubtitleOutlineColor(Enum):
    BLACK = 'BLACK'
    WHITE = 'WHITE'
    YELLOW = 'YELLOW'
    RED = 'RED'
    GREEN = 'GREEN'
    BLUE = 'BLUE'
    AUTO = 'AUTO'


class BurninSubtitleShadowColor(Enum):
    NONE = 'NONE'
    BLACK = 'BLACK'
    WHITE = 'WHITE'
    AUTO = 'AUTO'


class BurninSubtitleTeletextSpacing(Enum):
    FIXED_GRID = 'FIXED_GRID'
    PROPORTIONAL = 'PROPORTIONAL'
    AUTO = 'AUTO'


class CancelJobRequest(BaseModel):
    pass


class CancelJobResponse(BaseModel):
    pass


class CaptionDestinationType(Enum):
    BURN_IN = 'BURN_IN'
    DVB_SUB = 'DVB_SUB'
    EMBEDDED = 'EMBEDDED'
    EMBEDDED_PLUS_SCTE20 = 'EMBEDDED_PLUS_SCTE20'
    IMSC = 'IMSC'
    SCTE20_PLUS_EMBEDDED = 'SCTE20_PLUS_EMBEDDED'
    SCC = 'SCC'
    SRT = 'SRT'
    SMI = 'SMI'
    TELETEXT = 'TELETEXT'
    TTML = 'TTML'
    WEBVTT = 'WEBVTT'


class CaptionSourceType(Enum):
    ANCILLARY = 'ANCILLARY'
    DVB_SUB = 'DVB_SUB'
    EMBEDDED = 'EMBEDDED'
    SCTE20 = 'SCTE20'
    SCC = 'SCC'
    TTML = 'TTML'
    STL = 'STL'
    SRT = 'SRT'
    SMI = 'SMI'
    SMPTE_TT = 'SMPTE_TT'
    TELETEXT = 'TELETEXT'
    NULL_SOURCE = 'NULL_SOURCE'
    IMSC = 'IMSC'
    WEBVTT = 'WEBVTT'


class CmafClientCache(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class CmafCodecSpecification(Enum):
    RFC_6381 = 'RFC_6381'
    RFC_4281 = 'RFC_4281'


class CmafEncryptionType(Enum):
    SAMPLE_AES = 'SAMPLE_AES'
    AES_CTR = 'AES_CTR'


class CmafImageBasedTrickPlay(Enum):
    NONE = 'NONE'
    THUMBNAIL = 'THUMBNAIL'
    THUMBNAIL_AND_FULLFRAME = 'THUMBNAIL_AND_FULLFRAME'
    ADVANCED = 'ADVANCED'


class CmafInitializationVectorInManifest(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class CmafIntervalCadence(Enum):
    FOLLOW_IFRAME = 'FOLLOW_IFRAME'
    FOLLOW_CUSTOM = 'FOLLOW_CUSTOM'


class CmafKeyProviderType(Enum):
    SPEKE = 'SPEKE'
    STATIC_KEY = 'STATIC_KEY'


class CmafManifestCompression(Enum):
    GZIP = 'GZIP'
    NONE = 'NONE'


class CmafManifestDurationFormat(Enum):
    FLOATING_POINT = 'FLOATING_POINT'
    INTEGER = 'INTEGER'


class CmafMpdManifestBandwidthType(Enum):
    AVERAGE = 'AVERAGE'
    MAX = 'MAX'


class CmafMpdProfile(Enum):
    MAIN_PROFILE = 'MAIN_PROFILE'
    ON_DEMAND_PROFILE = 'ON_DEMAND_PROFILE'


class CmafPtsOffsetHandlingForBFrames(Enum):
    ZERO_BASED = 'ZERO_BASED'
    MATCH_INITIAL_PTS = 'MATCH_INITIAL_PTS'


class CmafSegmentControl(Enum):
    SINGLE_FILE = 'SINGLE_FILE'
    SEGMENTED_FILES = 'SEGMENTED_FILES'


class CmafSegmentLengthControl(Enum):
    EXACT = 'EXACT'
    GOP_MULTIPLE = 'GOP_MULTIPLE'


class CmafStreamInfResolution(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class CmafTargetDurationCompatibilityMode(Enum):
    LEGACY = 'LEGACY'
    SPEC_COMPLIANT = 'SPEC_COMPLIANT'


class CmafVideoCompositionOffsets(Enum):
    SIGNED = 'SIGNED'
    UNSIGNED = 'UNSIGNED'


class CmafWriteDASHManifest(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class CmafWriteHLSManifest(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class CmafWriteSegmentTimelineInRepresentation(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class CmfcAudioDuration(Enum):
    DEFAULT_CODEC_DURATION = 'DEFAULT_CODEC_DURATION'
    MATCH_VIDEO_DURATION = 'MATCH_VIDEO_DURATION'


class CmfcAudioTrackType(Enum):
    ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT = 'ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT'
    ALTERNATE_AUDIO_AUTO_SELECT = 'ALTERNATE_AUDIO_AUTO_SELECT'
    ALTERNATE_AUDIO_NOT_AUTO_SELECT = 'ALTERNATE_AUDIO_NOT_AUTO_SELECT'


class CmfcDescriptiveVideoServiceFlag(Enum):
    DONT_FLAG = 'DONT_FLAG'
    FLAG = 'FLAG'


class CmfcIFrameOnlyManifest(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class CmfcKlvMetadata(Enum):
    PASSTHROUGH = 'PASSTHROUGH'
    NONE = 'NONE'


class CmfcManifestMetadataSignaling(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class CmfcScte35Esam(Enum):
    INSERT = 'INSERT'
    NONE = 'NONE'


class CmfcScte35Source(Enum):
    PASSTHROUGH = 'PASSTHROUGH'
    NONE = 'NONE'


class CmfcTimedMetadata(Enum):
    PASSTHROUGH = 'PASSTHROUGH'
    NONE = 'NONE'


class CmfcTimedMetadataBoxVersion(Enum):
    VERSION_0 = 'VERSION_0'
    VERSION_1 = 'VERSION_1'


class ColorMetadata(Enum):
    IGNORE = 'IGNORE'
    INSERT = 'INSERT'


class ColorSpace(Enum):
    FOLLOW = 'FOLLOW'
    REC_601 = 'REC_601'
    REC_709 = 'REC_709'
    HDR10 = 'HDR10'
    HLG_2020 = 'HLG_2020'
    P3DCI = 'P3DCI'
    P3D65_SDR = 'P3D65_SDR'
    P3D65_HDR = 'P3D65_HDR'


class ColorSpaceConversion(Enum):
    NONE = 'NONE'
    FORCE_601 = 'FORCE_601'
    FORCE_709 = 'FORCE_709'
    FORCE_HDR10 = 'FORCE_HDR10'
    FORCE_HLG_2020 = 'FORCE_HLG_2020'
    FORCE_P3DCI = 'FORCE_P3DCI'
    FORCE_P3D65_SDR = 'FORCE_P3D65_SDR'
    FORCE_P3D65_HDR = 'FORCE_P3D65_HDR'


class ColorSpaceUsage(Enum):
    FORCE = 'FORCE'
    FALLBACK = 'FALLBACK'


class Commitment(Enum):
    ONE_YEAR = 'ONE_YEAR'


class ConflictException(RootModel[Any]):
    root: Any


class ContainerType(Enum):
    F4V = 'F4V'
    ISMV = 'ISMV'
    M2TS = 'M2TS'
    M3U8 = 'M3U8'
    CMFC = 'CMFC'
    MOV = 'MOV'
    MP4 = 'MP4'
    MPD = 'MPD'
    MXF = 'MXF'
    WEBM = 'WEBM'
    RAW = 'RAW'


class CopyProtectionAction(Enum):
    PASSTHROUGH = 'PASSTHROUGH'
    STRIP = 'STRIP'


class DashIsoGroupAudioChannelConfigSchemeIdUri(Enum):
    MPEG_CHANNEL_CONFIGURATION = 'MPEG_CHANNEL_CONFIGURATION'
    DOLBY_CHANNEL_CONFIGURATION = 'DOLBY_CHANNEL_CONFIGURATION'


class DashIsoHbbtvCompliance(Enum):
    HBBTV_1_5 = 'HBBTV_1_5'
    NONE = 'NONE'


class DashIsoImageBasedTrickPlay(Enum):
    NONE = 'NONE'
    THUMBNAIL = 'THUMBNAIL'
    THUMBNAIL_AND_FULLFRAME = 'THUMBNAIL_AND_FULLFRAME'
    ADVANCED = 'ADVANCED'


class DashIsoIntervalCadence(Enum):
    FOLLOW_IFRAME = 'FOLLOW_IFRAME'
    FOLLOW_CUSTOM = 'FOLLOW_CUSTOM'


class DashIsoMpdManifestBandwidthType(Enum):
    AVERAGE = 'AVERAGE'
    MAX = 'MAX'


class DashIsoMpdProfile(Enum):
    MAIN_PROFILE = 'MAIN_PROFILE'
    ON_DEMAND_PROFILE = 'ON_DEMAND_PROFILE'


class DashIsoPlaybackDeviceCompatibility(Enum):
    CENC_V1 = 'CENC_V1'
    UNENCRYPTED_SEI = 'UNENCRYPTED_SEI'


class DashIsoPtsOffsetHandlingForBFrames(Enum):
    ZERO_BASED = 'ZERO_BASED'
    MATCH_INITIAL_PTS = 'MATCH_INITIAL_PTS'


class DashIsoSegmentControl(Enum):
    SINGLE_FILE = 'SINGLE_FILE'
    SEGMENTED_FILES = 'SEGMENTED_FILES'


class DashIsoSegmentLengthControl(Enum):
    EXACT = 'EXACT'
    GOP_MULTIPLE = 'GOP_MULTIPLE'


class DashIsoVideoCompositionOffsets(Enum):
    SIGNED = 'SIGNED'
    UNSIGNED = 'UNSIGNED'


class DashIsoWriteSegmentTimelineInRepresentation(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class DashManifestStyle(Enum):
    BASIC = 'BASIC'
    COMPACT = 'COMPACT'
    DISTINCT = 'DISTINCT'


class DecryptionMode(Enum):
    AES_CTR = 'AES_CTR'
    AES_CBC = 'AES_CBC'
    AES_GCM = 'AES_GCM'


class DeinterlaceAlgorithm(Enum):
    INTERPOLATE = 'INTERPOLATE'
    INTERPOLATE_TICKER = 'INTERPOLATE_TICKER'
    BLEND = 'BLEND'
    BLEND_TICKER = 'BLEND_TICKER'


class DeinterlacerControl(Enum):
    FORCE_ALL_FRAMES = 'FORCE_ALL_FRAMES'
    NORMAL = 'NORMAL'


class DeinterlacerMode(Enum):
    DEINTERLACE = 'DEINTERLACE'
    INVERSE_TELECINE = 'INVERSE_TELECINE'
    ADAPTIVE = 'ADAPTIVE'


class DeleteJobTemplateRequest(BaseModel):
    pass


class DeleteJobTemplateResponse(BaseModel):
    pass


class DeletePolicyRequest(BaseModel):
    pass


class DeletePolicyResponse(BaseModel):
    pass


class DeletePresetRequest(BaseModel):
    pass


class DeletePresetResponse(BaseModel):
    pass


class DeleteQueueRequest(BaseModel):
    pass


class DeleteQueueResponse(BaseModel):
    pass


class DescribeEndpointsMode(Enum):
    DEFAULT = 'DEFAULT'
    GET_ONLY = 'GET_ONLY'


class DisassociateCertificateRequest(BaseModel):
    pass


class DisassociateCertificateResponse(BaseModel):
    pass


class DolbyVisionLevel6Mode(Enum):
    PASSTHROUGH = 'PASSTHROUGH'
    RECALCULATE = 'RECALCULATE'
    SPECIFY = 'SPECIFY'


class DolbyVisionMapping(Enum):
    HDR10_NOMAP = 'HDR10_NOMAP'
    HDR10_1000 = 'HDR10_1000'


class DolbyVisionProfile(Enum):
    PROFILE_5 = 'PROFILE_5'
    PROFILE_8_1 = 'PROFILE_8_1'


class DropFrameTimecode(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class DvbSubSubtitleFallbackFont(Enum):
    BEST_MATCH = 'BEST_MATCH'
    MONOSPACED_SANSSERIF = 'MONOSPACED_SANSSERIF'
    MONOSPACED_SERIF = 'MONOSPACED_SERIF'
    PROPORTIONAL_SANSSERIF = 'PROPORTIONAL_SANSSERIF'
    PROPORTIONAL_SERIF = 'PROPORTIONAL_SERIF'


class DvbSubtitleAlignment(Enum):
    CENTERED = 'CENTERED'
    LEFT = 'LEFT'
    AUTO = 'AUTO'


class DvbSubtitleApplyFontColor(Enum):
    WHITE_TEXT_ONLY = 'WHITE_TEXT_ONLY'
    ALL_TEXT = 'ALL_TEXT'


class DvbSubtitleBackgroundColor(Enum):
    NONE = 'NONE'
    BLACK = 'BLACK'
    WHITE = 'WHITE'
    AUTO = 'AUTO'


class DvbSubtitleFontColor(Enum):
    WHITE = 'WHITE'
    BLACK = 'BLACK'
    YELLOW = 'YELLOW'
    RED = 'RED'
    GREEN = 'GREEN'
    BLUE = 'BLUE'
    HEX = 'HEX'
    AUTO = 'AUTO'


class DvbSubtitleOutlineColor(Enum):
    BLACK = 'BLACK'
    WHITE = 'WHITE'
    YELLOW = 'YELLOW'
    RED = 'RED'
    GREEN = 'GREEN'
    BLUE = 'BLUE'
    AUTO = 'AUTO'


class DvbSubtitleShadowColor(Enum):
    NONE = 'NONE'
    BLACK = 'BLACK'
    WHITE = 'WHITE'
    AUTO = 'AUTO'


class DvbSubtitleStylePassthrough(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class DvbSubtitleTeletextSpacing(Enum):
    FIXED_GRID = 'FIXED_GRID'
    PROPORTIONAL = 'PROPORTIONAL'
    AUTO = 'AUTO'


class DvbSubtitlingType(Enum):
    HEARING_IMPAIRED = 'HEARING_IMPAIRED'
    STANDARD = 'STANDARD'


class DvbddsHandling(Enum):
    NONE = 'NONE'
    SPECIFIED = 'SPECIFIED'
    NO_DISPLAY_WINDOW = 'NO_DISPLAY_WINDOW'


class Eac3AtmosBitstreamMode(Enum):
    COMPLETE_MAIN = 'COMPLETE_MAIN'


class Eac3AtmosCodingMode(Enum):
    CODING_MODE_AUTO = 'CODING_MODE_AUTO'
    CODING_MODE_5_1_4 = 'CODING_MODE_5_1_4'
    CODING_MODE_7_1_4 = 'CODING_MODE_7_1_4'
    CODING_MODE_9_1_6 = 'CODING_MODE_9_1_6'


class Eac3AtmosDialogueIntelligence(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Eac3AtmosDownmixControl(Enum):
    SPECIFIED = 'SPECIFIED'
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'


class Eac3AtmosDynamicRangeCompressionLine(Enum):
    NONE = 'NONE'
    FILM_STANDARD = 'FILM_STANDARD'
    FILM_LIGHT = 'FILM_LIGHT'
    MUSIC_STANDARD = 'MUSIC_STANDARD'
    MUSIC_LIGHT = 'MUSIC_LIGHT'
    SPEECH = 'SPEECH'


class Eac3AtmosDynamicRangeCompressionRf(Enum):
    NONE = 'NONE'
    FILM_STANDARD = 'FILM_STANDARD'
    FILM_LIGHT = 'FILM_LIGHT'
    MUSIC_STANDARD = 'MUSIC_STANDARD'
    MUSIC_LIGHT = 'MUSIC_LIGHT'
    SPEECH = 'SPEECH'


class Eac3AtmosDynamicRangeControl(Enum):
    SPECIFIED = 'SPECIFIED'
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'


class Eac3AtmosMeteringMode(Enum):
    LEQ_A = 'LEQ_A'
    ITU_BS_1770_1 = 'ITU_BS_1770_1'
    ITU_BS_1770_2 = 'ITU_BS_1770_2'
    ITU_BS_1770_3 = 'ITU_BS_1770_3'
    ITU_BS_1770_4 = 'ITU_BS_1770_4'


class Eac3AtmosStereoDownmix(Enum):
    NOT_INDICATED = 'NOT_INDICATED'
    STEREO = 'STEREO'
    SURROUND = 'SURROUND'
    DPL2 = 'DPL2'


class Eac3AtmosSurroundExMode(Enum):
    NOT_INDICATED = 'NOT_INDICATED'
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Eac3AttenuationControl(Enum):
    ATTENUATE_3_DB = 'ATTENUATE_3_DB'
    NONE = 'NONE'


class Eac3BitstreamMode(Enum):
    COMPLETE_MAIN = 'COMPLETE_MAIN'
    COMMENTARY = 'COMMENTARY'
    EMERGENCY = 'EMERGENCY'
    HEARING_IMPAIRED = 'HEARING_IMPAIRED'
    VISUALLY_IMPAIRED = 'VISUALLY_IMPAIRED'


class Eac3CodingMode(Enum):
    CODING_MODE_1_0 = 'CODING_MODE_1_0'
    CODING_MODE_2_0 = 'CODING_MODE_2_0'
    CODING_MODE_3_2 = 'CODING_MODE_3_2'


class Eac3DcFilter(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Eac3DynamicRangeCompressionLine(Enum):
    NONE = 'NONE'
    FILM_STANDARD = 'FILM_STANDARD'
    FILM_LIGHT = 'FILM_LIGHT'
    MUSIC_STANDARD = 'MUSIC_STANDARD'
    MUSIC_LIGHT = 'MUSIC_LIGHT'
    SPEECH = 'SPEECH'


class Eac3DynamicRangeCompressionRf(Enum):
    NONE = 'NONE'
    FILM_STANDARD = 'FILM_STANDARD'
    FILM_LIGHT = 'FILM_LIGHT'
    MUSIC_STANDARD = 'MUSIC_STANDARD'
    MUSIC_LIGHT = 'MUSIC_LIGHT'
    SPEECH = 'SPEECH'


class Eac3LfeControl(Enum):
    LFE = 'LFE'
    NO_LFE = 'NO_LFE'


class Eac3LfeFilter(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Eac3MetadataControl(Enum):
    FOLLOW_INPUT = 'FOLLOW_INPUT'
    USE_CONFIGURED = 'USE_CONFIGURED'


class Eac3PassthroughControl(Enum):
    WHEN_POSSIBLE = 'WHEN_POSSIBLE'
    NO_PASSTHROUGH = 'NO_PASSTHROUGH'


class Eac3PhaseControl(Enum):
    SHIFT_90_DEGREES = 'SHIFT_90_DEGREES'
    NO_SHIFT = 'NO_SHIFT'


class Eac3StereoDownmix(Enum):
    NOT_INDICATED = 'NOT_INDICATED'
    LO_RO = 'LO_RO'
    LT_RT = 'LT_RT'
    DPL2 = 'DPL2'


class Eac3SurroundExMode(Enum):
    NOT_INDICATED = 'NOT_INDICATED'
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Eac3SurroundMode(Enum):
    NOT_INDICATED = 'NOT_INDICATED'
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class EmbeddedConvert608To708(Enum):
    UPCONVERT = 'UPCONVERT'
    DISABLED = 'DISABLED'


class EmbeddedTerminateCaptions(Enum):
    END_OF_INPUT = 'END_OF_INPUT'
    DISABLED = 'DISABLED'


class EmbeddedTimecodeOverride(Enum):
    NONE = 'NONE'
    USE_MDPM = 'USE_MDPM'


class F4vMoovPlacement(Enum):
    PROGRESSIVE_DOWNLOAD = 'PROGRESSIVE_DOWNLOAD'
    NORMAL = 'NORMAL'


class F4vSettings(BaseModel):
    MoovPlacement: Optional[F4vMoovPlacement] = None


class FileSourceConvert608To708(Enum):
    UPCONVERT = 'UPCONVERT'
    DISABLED = 'DISABLED'


class FileSourceTimeDeltaUnits(Enum):
    SECONDS = 'SECONDS'
    MILLISECONDS = 'MILLISECONDS'


class FontScript(Enum):
    AUTOMATIC = 'AUTOMATIC'
    HANS = 'HANS'
    HANT = 'HANT'


class ForbiddenException(RootModel[Any]):
    root: Any


class GetJobRequest(BaseModel):
    pass


class GetJobTemplateRequest(BaseModel):
    pass


class GetPolicyRequest(BaseModel):
    pass


class GetPresetRequest(BaseModel):
    pass


class GetQueueRequest(BaseModel):
    pass


class H264AdaptiveQuantization(Enum):
    OFF = 'OFF'
    AUTO = 'AUTO'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'
    HIGHER = 'HIGHER'
    MAX = 'MAX'


class H264CodecLevel(Enum):
    AUTO = 'AUTO'
    LEVEL_1 = 'LEVEL_1'
    LEVEL_1_1 = 'LEVEL_1_1'
    LEVEL_1_2 = 'LEVEL_1_2'
    LEVEL_1_3 = 'LEVEL_1_3'
    LEVEL_2 = 'LEVEL_2'
    LEVEL_2_1 = 'LEVEL_2_1'
    LEVEL_2_2 = 'LEVEL_2_2'
    LEVEL_3 = 'LEVEL_3'
    LEVEL_3_1 = 'LEVEL_3_1'
    LEVEL_3_2 = 'LEVEL_3_2'
    LEVEL_4 = 'LEVEL_4'
    LEVEL_4_1 = 'LEVEL_4_1'
    LEVEL_4_2 = 'LEVEL_4_2'
    LEVEL_5 = 'LEVEL_5'
    LEVEL_5_1 = 'LEVEL_5_1'
    LEVEL_5_2 = 'LEVEL_5_2'


class H264CodecProfile(Enum):
    BASELINE = 'BASELINE'
    HIGH = 'HIGH'
    HIGH_10BIT = 'HIGH_10BIT'
    HIGH_422 = 'HIGH_422'
    HIGH_422_10BIT = 'HIGH_422_10BIT'
    MAIN = 'MAIN'


class H264DynamicSubGop(Enum):
    ADAPTIVE = 'ADAPTIVE'
    STATIC = 'STATIC'


class H264EntropyEncoding(Enum):
    CABAC = 'CABAC'
    CAVLC = 'CAVLC'


class H264FieldEncoding(Enum):
    PAFF = 'PAFF'
    FORCE_FIELD = 'FORCE_FIELD'
    MBAFF = 'MBAFF'


class H264FlickerAdaptiveQuantization(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H264FramerateControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class H264FramerateConversionAlgorithm(Enum):
    DUPLICATE_DROP = 'DUPLICATE_DROP'
    INTERPOLATE = 'INTERPOLATE'
    FRAMEFORMER = 'FRAMEFORMER'


class H264GopBReference(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H264GopSizeUnits(Enum):
    FRAMES = 'FRAMES'
    SECONDS = 'SECONDS'
    AUTO = 'AUTO'


class H264InterlaceMode(Enum):
    PROGRESSIVE = 'PROGRESSIVE'
    TOP_FIELD = 'TOP_FIELD'
    BOTTOM_FIELD = 'BOTTOM_FIELD'
    FOLLOW_TOP_FIELD = 'FOLLOW_TOP_FIELD'
    FOLLOW_BOTTOM_FIELD = 'FOLLOW_BOTTOM_FIELD'


class H264ParControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class H264QualityTuningLevel(Enum):
    SINGLE_PASS = 'SINGLE_PASS'
    SINGLE_PASS_HQ = 'SINGLE_PASS_HQ'
    MULTI_PASS_HQ = 'MULTI_PASS_HQ'


class H264RateControlMode(Enum):
    VBR = 'VBR'
    CBR = 'CBR'
    QVBR = 'QVBR'


class H264RepeatPps(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H264ScanTypeConversionMode(Enum):
    INTERLACED = 'INTERLACED'
    INTERLACED_OPTIMIZE = 'INTERLACED_OPTIMIZE'


class H264SceneChangeDetect(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'
    TRANSITION_DETECTION = 'TRANSITION_DETECTION'


class H264SlowPal(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H264SpatialAdaptiveQuantization(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H264Syntax(Enum):
    DEFAULT = 'DEFAULT'
    RP2027 = 'RP2027'


class H264Telecine(Enum):
    NONE = 'NONE'
    SOFT = 'SOFT'
    HARD = 'HARD'


class H264TemporalAdaptiveQuantization(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H264UnregisteredSeiTimecode(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H265AdaptiveQuantization(Enum):
    OFF = 'OFF'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'
    HIGHER = 'HIGHER'
    MAX = 'MAX'
    AUTO = 'AUTO'


class H265AlternateTransferFunctionSei(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H265CodecLevel(Enum):
    AUTO = 'AUTO'
    LEVEL_1 = 'LEVEL_1'
    LEVEL_2 = 'LEVEL_2'
    LEVEL_2_1 = 'LEVEL_2_1'
    LEVEL_3 = 'LEVEL_3'
    LEVEL_3_1 = 'LEVEL_3_1'
    LEVEL_4 = 'LEVEL_4'
    LEVEL_4_1 = 'LEVEL_4_1'
    LEVEL_5 = 'LEVEL_5'
    LEVEL_5_1 = 'LEVEL_5_1'
    LEVEL_5_2 = 'LEVEL_5_2'
    LEVEL_6 = 'LEVEL_6'
    LEVEL_6_1 = 'LEVEL_6_1'
    LEVEL_6_2 = 'LEVEL_6_2'


class H265CodecProfile(Enum):
    MAIN_MAIN = 'MAIN_MAIN'
    MAIN_HIGH = 'MAIN_HIGH'
    MAIN10_MAIN = 'MAIN10_MAIN'
    MAIN10_HIGH = 'MAIN10_HIGH'
    MAIN_422_8BIT_MAIN = 'MAIN_422_8BIT_MAIN'
    MAIN_422_8BIT_HIGH = 'MAIN_422_8BIT_HIGH'
    MAIN_422_10BIT_MAIN = 'MAIN_422_10BIT_MAIN'
    MAIN_422_10BIT_HIGH = 'MAIN_422_10BIT_HIGH'


class H265DynamicSubGop(Enum):
    ADAPTIVE = 'ADAPTIVE'
    STATIC = 'STATIC'


class H265FlickerAdaptiveQuantization(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H265FramerateControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class H265FramerateConversionAlgorithm(Enum):
    DUPLICATE_DROP = 'DUPLICATE_DROP'
    INTERPOLATE = 'INTERPOLATE'
    FRAMEFORMER = 'FRAMEFORMER'


class H265GopBReference(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H265GopSizeUnits(Enum):
    FRAMES = 'FRAMES'
    SECONDS = 'SECONDS'
    AUTO = 'AUTO'


class H265InterlaceMode(Enum):
    PROGRESSIVE = 'PROGRESSIVE'
    TOP_FIELD = 'TOP_FIELD'
    BOTTOM_FIELD = 'BOTTOM_FIELD'
    FOLLOW_TOP_FIELD = 'FOLLOW_TOP_FIELD'
    FOLLOW_BOTTOM_FIELD = 'FOLLOW_BOTTOM_FIELD'


class H265ParControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class H265QualityTuningLevel(Enum):
    SINGLE_PASS = 'SINGLE_PASS'
    SINGLE_PASS_HQ = 'SINGLE_PASS_HQ'
    MULTI_PASS_HQ = 'MULTI_PASS_HQ'


class H265RateControlMode(Enum):
    VBR = 'VBR'
    CBR = 'CBR'
    QVBR = 'QVBR'


class H265SampleAdaptiveOffsetFilterMode(Enum):
    DEFAULT = 'DEFAULT'
    ADAPTIVE = 'ADAPTIVE'
    OFF = 'OFF'


class H265ScanTypeConversionMode(Enum):
    INTERLACED = 'INTERLACED'
    INTERLACED_OPTIMIZE = 'INTERLACED_OPTIMIZE'


class H265SceneChangeDetect(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'
    TRANSITION_DETECTION = 'TRANSITION_DETECTION'


class H265SlowPal(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H265SpatialAdaptiveQuantization(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H265Telecine(Enum):
    NONE = 'NONE'
    SOFT = 'SOFT'
    HARD = 'HARD'


class H265TemporalAdaptiveQuantization(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H265TemporalIds(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H265Tiles(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H265UnregisteredSeiTimecode(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class H265WriteMp4PackagingType(Enum):
    HVC1 = 'HVC1'
    HEV1 = 'HEV1'


class HDRToSDRToneMapper(Enum):
    PRESERVE_DETAILS = 'PRESERVE_DETAILS'
    VIBRANT = 'VIBRANT'


class HlsAdMarkers(Enum):
    ELEMENTAL = 'ELEMENTAL'
    ELEMENTAL_SCTE35 = 'ELEMENTAL_SCTE35'


class HlsAudioOnlyContainer(Enum):
    AUTOMATIC = 'AUTOMATIC'
    M2TS = 'M2TS'


class HlsAudioOnlyHeader(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class HlsAudioTrackType(Enum):
    ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT = 'ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT'
    ALTERNATE_AUDIO_AUTO_SELECT = 'ALTERNATE_AUDIO_AUTO_SELECT'
    ALTERNATE_AUDIO_NOT_AUTO_SELECT = 'ALTERNATE_AUDIO_NOT_AUTO_SELECT'
    AUDIO_ONLY_VARIANT_STREAM = 'AUDIO_ONLY_VARIANT_STREAM'


class HlsCaptionLanguageSetting(Enum):
    INSERT = 'INSERT'
    OMIT = 'OMIT'
    NONE = 'NONE'


class HlsCaptionSegmentLengthControl(Enum):
    LARGE_SEGMENTS = 'LARGE_SEGMENTS'
    MATCH_VIDEO = 'MATCH_VIDEO'


class HlsClientCache(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class HlsCodecSpecification(Enum):
    RFC_6381 = 'RFC_6381'
    RFC_4281 = 'RFC_4281'


class HlsDescriptiveVideoServiceFlag(Enum):
    DONT_FLAG = 'DONT_FLAG'
    FLAG = 'FLAG'


class HlsDirectoryStructure(Enum):
    SINGLE_DIRECTORY = 'SINGLE_DIRECTORY'
    SUBDIRECTORY_PER_STREAM = 'SUBDIRECTORY_PER_STREAM'


class HlsEncryptionType(Enum):
    AES128 = 'AES128'
    SAMPLE_AES = 'SAMPLE_AES'


class HlsIFrameOnlyManifest(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class HlsImageBasedTrickPlay(Enum):
    NONE = 'NONE'
    THUMBNAIL = 'THUMBNAIL'
    THUMBNAIL_AND_FULLFRAME = 'THUMBNAIL_AND_FULLFRAME'
    ADVANCED = 'ADVANCED'


class HlsInitializationVectorInManifest(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class HlsIntervalCadence(Enum):
    FOLLOW_IFRAME = 'FOLLOW_IFRAME'
    FOLLOW_CUSTOM = 'FOLLOW_CUSTOM'


class HlsKeyProviderType(Enum):
    SPEKE = 'SPEKE'
    STATIC_KEY = 'STATIC_KEY'


class HlsManifestCompression(Enum):
    GZIP = 'GZIP'
    NONE = 'NONE'


class HlsManifestDurationFormat(Enum):
    FLOATING_POINT = 'FLOATING_POINT'
    INTEGER = 'INTEGER'


class HlsOfflineEncrypted(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class HlsOutputSelection(Enum):
    MANIFESTS_AND_SEGMENTS = 'MANIFESTS_AND_SEGMENTS'
    SEGMENTS_ONLY = 'SEGMENTS_ONLY'


class HlsProgramDateTime(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class HlsSegmentControl(Enum):
    SINGLE_FILE = 'SINGLE_FILE'
    SEGMENTED_FILES = 'SEGMENTED_FILES'


class HlsSegmentLengthControl(Enum):
    EXACT = 'EXACT'
    GOP_MULTIPLE = 'GOP_MULTIPLE'


class HlsStreamInfResolution(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class HlsTargetDurationCompatibilityMode(Enum):
    LEGACY = 'LEGACY'
    SPEC_COMPLIANT = 'SPEC_COMPLIANT'


class HlsTimedMetadataId3Frame(Enum):
    NONE = 'NONE'
    PRIV = 'PRIV'
    TDRL = 'TDRL'


class ImscAccessibilitySubs(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class ImscStylePassthrough(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class InputDeblockFilter(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class InputDenoiseFilter(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class InputFilterEnable(Enum):
    AUTO = 'AUTO'
    DISABLE = 'DISABLE'
    FORCE = 'FORCE'


class InputPolicy(Enum):
    ALLOWED = 'ALLOWED'
    DISALLOWED = 'DISALLOWED'


class InputPsiControl(Enum):
    IGNORE_PSI = 'IGNORE_PSI'
    USE_PSI = 'USE_PSI'


class InputRotate(Enum):
    DEGREE_0 = 'DEGREE_0'
    DEGREES_90 = 'DEGREES_90'
    DEGREES_180 = 'DEGREES_180'
    DEGREES_270 = 'DEGREES_270'
    AUTO = 'AUTO'


class InputSampleRange(Enum):
    FOLLOW = 'FOLLOW'
    FULL_RANGE = 'FULL_RANGE'
    LIMITED_RANGE = 'LIMITED_RANGE'


class InputScanType(Enum):
    AUTO = 'AUTO'
    PSF = 'PSF'


class InputTimecodeSource(Enum):
    EMBEDDED = 'EMBEDDED'
    ZEROBASED = 'ZEROBASED'
    SPECIFIEDSTART = 'SPECIFIEDSTART'


class InternalServerErrorException(RootModel[Any]):
    root: Any


class JobPhase(Enum):
    PROBING = 'PROBING'
    TRANSCODING = 'TRANSCODING'
    UPLOADING = 'UPLOADING'


class JobStatus(Enum):
    SUBMITTED = 'SUBMITTED'
    PROGRESSING = 'PROGRESSING'
    COMPLETE = 'COMPLETE'
    CANCELED = 'CANCELED'
    ERROR = 'ERROR'


class JobTemplateListBy(Enum):
    NAME = 'NAME'
    CREATION_DATE = 'CREATION_DATE'
    SYSTEM = 'SYSTEM'


class LanguageCode(Enum):
    ENG = 'ENG'
    SPA = 'SPA'
    FRA = 'FRA'
    DEU = 'DEU'
    GER = 'GER'
    ZHO = 'ZHO'
    ARA = 'ARA'
    HIN = 'HIN'
    JPN = 'JPN'
    RUS = 'RUS'
    POR = 'POR'
    ITA = 'ITA'
    URD = 'URD'
    VIE = 'VIE'
    KOR = 'KOR'
    PAN = 'PAN'
    ABK = 'ABK'
    AAR = 'AAR'
    AFR = 'AFR'
    AKA = 'AKA'
    SQI = 'SQI'
    AMH = 'AMH'
    ARG = 'ARG'
    HYE = 'HYE'
    ASM = 'ASM'
    AVA = 'AVA'
    AVE = 'AVE'
    AYM = 'AYM'
    AZE = 'AZE'
    BAM = 'BAM'
    BAK = 'BAK'
    EUS = 'EUS'
    BEL = 'BEL'
    BEN = 'BEN'
    BIH = 'BIH'
    BIS = 'BIS'
    BOS = 'BOS'
    BRE = 'BRE'
    BUL = 'BUL'
    MYA = 'MYA'
    CAT = 'CAT'
    KHM = 'KHM'
    CHA = 'CHA'
    CHE = 'CHE'
    NYA = 'NYA'
    CHU = 'CHU'
    CHV = 'CHV'
    COR = 'COR'
    COS = 'COS'
    CRE = 'CRE'
    HRV = 'HRV'
    CES = 'CES'
    DAN = 'DAN'
    DIV = 'DIV'
    NLD = 'NLD'
    DZO = 'DZO'
    ENM = 'ENM'
    EPO = 'EPO'
    EST = 'EST'
    EWE = 'EWE'
    FAO = 'FAO'
    FIJ = 'FIJ'
    FIN = 'FIN'
    FRM = 'FRM'
    FUL = 'FUL'
    GLA = 'GLA'
    GLG = 'GLG'
    LUG = 'LUG'
    KAT = 'KAT'
    ELL = 'ELL'
    GRN = 'GRN'
    GUJ = 'GUJ'
    HAT = 'HAT'
    HAU = 'HAU'
    HEB = 'HEB'
    HER = 'HER'
    HMO = 'HMO'
    HUN = 'HUN'
    ISL = 'ISL'
    IDO = 'IDO'
    IBO = 'IBO'
    IND = 'IND'
    INA = 'INA'
    ILE = 'ILE'
    IKU = 'IKU'
    IPK = 'IPK'
    GLE = 'GLE'
    JAV = 'JAV'
    KAL = 'KAL'
    KAN = 'KAN'
    KAU = 'KAU'
    KAS = 'KAS'
    KAZ = 'KAZ'
    KIK = 'KIK'
    KIN = 'KIN'
    KIR = 'KIR'
    KOM = 'KOM'
    KON = 'KON'
    KUA = 'KUA'
    KUR = 'KUR'
    LAO = 'LAO'
    LAT = 'LAT'
    LAV = 'LAV'
    LIM = 'LIM'
    LIN = 'LIN'
    LIT = 'LIT'
    LUB = 'LUB'
    LTZ = 'LTZ'
    MKD = 'MKD'
    MLG = 'MLG'
    MSA = 'MSA'
    MAL = 'MAL'
    MLT = 'MLT'
    GLV = 'GLV'
    MRI = 'MRI'
    MAR = 'MAR'
    MAH = 'MAH'
    MON = 'MON'
    NAU = 'NAU'
    NAV = 'NAV'
    NDE = 'NDE'
    NBL = 'NBL'
    NDO = 'NDO'
    NEP = 'NEP'
    SME = 'SME'
    NOR = 'NOR'
    NOB = 'NOB'
    NNO = 'NNO'
    OCI = 'OCI'
    OJI = 'OJI'
    ORI = 'ORI'
    ORM = 'ORM'
    OSS = 'OSS'
    PLI = 'PLI'
    FAS = 'FAS'
    POL = 'POL'
    PUS = 'PUS'
    QUE = 'QUE'
    QAA = 'QAA'
    RON = 'RON'
    ROH = 'ROH'
    RUN = 'RUN'
    SMO = 'SMO'
    SAG = 'SAG'
    SAN = 'SAN'
    SRD = 'SRD'
    SRB = 'SRB'
    SNA = 'SNA'
    III = 'III'
    SND = 'SND'
    SIN = 'SIN'
    SLK = 'SLK'
    SLV = 'SLV'
    SOM = 'SOM'
    SOT = 'SOT'
    SUN = 'SUN'
    SWA = 'SWA'
    SSW = 'SSW'
    SWE = 'SWE'
    TGL = 'TGL'
    TAH = 'TAH'
    TGK = 'TGK'
    TAM = 'TAM'
    TAT = 'TAT'
    TEL = 'TEL'
    THA = 'THA'
    BOD = 'BOD'
    TIR = 'TIR'
    TON = 'TON'
    TSO = 'TSO'
    TSN = 'TSN'
    TUR = 'TUR'
    TUK = 'TUK'
    TWI = 'TWI'
    UIG = 'UIG'
    UKR = 'UKR'
    UZB = 'UZB'
    VEN = 'VEN'
    VOL = 'VOL'
    WLN = 'WLN'
    CYM = 'CYM'
    FRY = 'FRY'
    WOL = 'WOL'
    XHO = 'XHO'
    YID = 'YID'
    YOR = 'YOR'
    ZHA = 'ZHA'
    ZUL = 'ZUL'
    ORJ = 'ORJ'
    QPC = 'QPC'
    TNG = 'TNG'
    SRP = 'SRP'


class ListJobTemplatesRequest(BaseModel):
    pass


class ListJobsRequest(BaseModel):
    pass


class ListPresetsRequest(BaseModel):
    pass


class ListQueuesRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class M2tsAudioBufferModel(Enum):
    DVB = 'DVB'
    ATSC = 'ATSC'


class M2tsAudioDuration(Enum):
    DEFAULT_CODEC_DURATION = 'DEFAULT_CODEC_DURATION'
    MATCH_VIDEO_DURATION = 'MATCH_VIDEO_DURATION'


class M2tsBufferModel(Enum):
    MULTIPLEX = 'MULTIPLEX'
    NONE = 'NONE'


class M2tsDataPtsControl(Enum):
    AUTO = 'AUTO'
    ALIGN_TO_VIDEO = 'ALIGN_TO_VIDEO'


class M2tsEbpAudioInterval(Enum):
    VIDEO_AND_FIXED_INTERVALS = 'VIDEO_AND_FIXED_INTERVALS'
    VIDEO_INTERVAL = 'VIDEO_INTERVAL'


class M2tsEbpPlacement(Enum):
    VIDEO_AND_AUDIO_PIDS = 'VIDEO_AND_AUDIO_PIDS'
    VIDEO_PID = 'VIDEO_PID'


class M2tsEsRateInPes(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class M2tsForceTsVideoEbpOrder(Enum):
    FORCE = 'FORCE'
    DEFAULT = 'DEFAULT'


class M2tsKlvMetadata(Enum):
    PASSTHROUGH = 'PASSTHROUGH'
    NONE = 'NONE'


class M2tsNielsenId3(Enum):
    INSERT = 'INSERT'
    NONE = 'NONE'


class M2tsPcrControl(Enum):
    PCR_EVERY_PES_PACKET = 'PCR_EVERY_PES_PACKET'
    CONFIGURED_PCR_PERIOD = 'CONFIGURED_PCR_PERIOD'


class M2tsRateMode(Enum):
    VBR = 'VBR'
    CBR = 'CBR'


class M2tsScte35Source(Enum):
    PASSTHROUGH = 'PASSTHROUGH'
    NONE = 'NONE'


class M2tsSegmentationMarkers(Enum):
    NONE = 'NONE'
    RAI_SEGSTART = 'RAI_SEGSTART'
    RAI_ADAPT = 'RAI_ADAPT'
    PSI_SEGSTART = 'PSI_SEGSTART'
    EBP = 'EBP'
    EBP_LEGACY = 'EBP_LEGACY'


class M2tsSegmentationStyle(Enum):
    MAINTAIN_CADENCE = 'MAINTAIN_CADENCE'
    RESET_CADENCE = 'RESET_CADENCE'


class M3u8AudioDuration(Enum):
    DEFAULT_CODEC_DURATION = 'DEFAULT_CODEC_DURATION'
    MATCH_VIDEO_DURATION = 'MATCH_VIDEO_DURATION'


class M3u8DataPtsControl(Enum):
    AUTO = 'AUTO'
    ALIGN_TO_VIDEO = 'ALIGN_TO_VIDEO'


class M3u8NielsenId3(Enum):
    INSERT = 'INSERT'
    NONE = 'NONE'


class M3u8PcrControl(Enum):
    PCR_EVERY_PES_PACKET = 'PCR_EVERY_PES_PACKET'
    CONFIGURED_PCR_PERIOD = 'CONFIGURED_PCR_PERIOD'


class M3u8Scte35Source(Enum):
    PASSTHROUGH = 'PASSTHROUGH'
    NONE = 'NONE'


class MotionImageInsertionMode(Enum):
    MOV = 'MOV'
    PNG = 'PNG'


class MotionImagePlayback(Enum):
    ONCE = 'ONCE'
    REPEAT = 'REPEAT'


class MovClapAtom(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class MovCslgAtom(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class MovMpeg2FourCCControl(Enum):
    XDCAM = 'XDCAM'
    MPEG = 'MPEG'


class MovPaddingControl(Enum):
    OMNEON = 'OMNEON'
    NONE = 'NONE'


class MovReference(Enum):
    SELF_CONTAINED = 'SELF_CONTAINED'
    EXTERNAL = 'EXTERNAL'


class MovSettings(BaseModel):
    ClapAtom: Optional[MovClapAtom] = None
    CslgAtom: Optional[MovCslgAtom] = None
    Mpeg2FourCCControl: Optional[MovMpeg2FourCCControl] = None
    PaddingControl: Optional[MovPaddingControl] = None
    Reference: Optional[MovReference] = None


class Mp3RateControlMode(Enum):
    CBR = 'CBR'
    VBR = 'VBR'


class Mp4CslgAtom(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class Mp4FreeSpaceBox(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class Mp4MoovPlacement(Enum):
    PROGRESSIVE_DOWNLOAD = 'PROGRESSIVE_DOWNLOAD'
    NORMAL = 'NORMAL'


class MpdAccessibilityCaptionHints(Enum):
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class MpdAudioDuration(Enum):
    DEFAULT_CODEC_DURATION = 'DEFAULT_CODEC_DURATION'
    MATCH_VIDEO_DURATION = 'MATCH_VIDEO_DURATION'


class MpdCaptionContainerType(Enum):
    RAW = 'RAW'
    FRAGMENTED_MP4 = 'FRAGMENTED_MP4'


class MpdKlvMetadata(Enum):
    NONE = 'NONE'
    PASSTHROUGH = 'PASSTHROUGH'


class MpdManifestMetadataSignaling(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class MpdScte35Esam(Enum):
    INSERT = 'INSERT'
    NONE = 'NONE'


class MpdScte35Source(Enum):
    PASSTHROUGH = 'PASSTHROUGH'
    NONE = 'NONE'


class MpdTimedMetadata(Enum):
    PASSTHROUGH = 'PASSTHROUGH'
    NONE = 'NONE'


class MpdTimedMetadataBoxVersion(Enum):
    VERSION_0 = 'VERSION_0'
    VERSION_1 = 'VERSION_1'


class Mpeg2AdaptiveQuantization(Enum):
    OFF = 'OFF'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'


class Mpeg2CodecLevel(Enum):
    AUTO = 'AUTO'
    LOW = 'LOW'
    MAIN = 'MAIN'
    HIGH1440 = 'HIGH1440'
    HIGH = 'HIGH'


class Mpeg2CodecProfile(Enum):
    MAIN = 'MAIN'
    PROFILE_422 = 'PROFILE_422'


class Mpeg2DynamicSubGop(Enum):
    ADAPTIVE = 'ADAPTIVE'
    STATIC = 'STATIC'


class Mpeg2FramerateControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class Mpeg2FramerateConversionAlgorithm(Enum):
    DUPLICATE_DROP = 'DUPLICATE_DROP'
    INTERPOLATE = 'INTERPOLATE'
    FRAMEFORMER = 'FRAMEFORMER'


class Mpeg2GopSizeUnits(Enum):
    FRAMES = 'FRAMES'
    SECONDS = 'SECONDS'


class Mpeg2InterlaceMode(Enum):
    PROGRESSIVE = 'PROGRESSIVE'
    TOP_FIELD = 'TOP_FIELD'
    BOTTOM_FIELD = 'BOTTOM_FIELD'
    FOLLOW_TOP_FIELD = 'FOLLOW_TOP_FIELD'
    FOLLOW_BOTTOM_FIELD = 'FOLLOW_BOTTOM_FIELD'


class Mpeg2IntraDcPrecision(Enum):
    AUTO = 'AUTO'
    INTRA_DC_PRECISION_8 = 'INTRA_DC_PRECISION_8'
    INTRA_DC_PRECISION_9 = 'INTRA_DC_PRECISION_9'
    INTRA_DC_PRECISION_10 = 'INTRA_DC_PRECISION_10'
    INTRA_DC_PRECISION_11 = 'INTRA_DC_PRECISION_11'


class Mpeg2ParControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class Mpeg2QualityTuningLevel(Enum):
    SINGLE_PASS = 'SINGLE_PASS'
    MULTI_PASS = 'MULTI_PASS'


class Mpeg2RateControlMode(Enum):
    VBR = 'VBR'
    CBR = 'CBR'


class Mpeg2ScanTypeConversionMode(Enum):
    INTERLACED = 'INTERLACED'
    INTERLACED_OPTIMIZE = 'INTERLACED_OPTIMIZE'


class Mpeg2SceneChangeDetect(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class Mpeg2SlowPal(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class Mpeg2SpatialAdaptiveQuantization(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class Mpeg2Syntax(Enum):
    DEFAULT = 'DEFAULT'
    D_10 = 'D_10'


class Mpeg2Telecine(Enum):
    NONE = 'NONE'
    SOFT = 'SOFT'
    HARD = 'HARD'


class Mpeg2TemporalAdaptiveQuantization(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class MsSmoothAudioDeduplication(Enum):
    COMBINE_DUPLICATE_STREAMS = 'COMBINE_DUPLICATE_STREAMS'
    NONE = 'NONE'


class MsSmoothFragmentLengthControl(Enum):
    EXACT = 'EXACT'
    GOP_MULTIPLE = 'GOP_MULTIPLE'


class MsSmoothManifestEncoding(Enum):
    UTF8 = 'UTF8'
    UTF16 = 'UTF16'


class MxfAfdSignaling(Enum):
    NO_COPY = 'NO_COPY'
    COPY_FROM_VIDEO = 'COPY_FROM_VIDEO'


class MxfProfile(Enum):
    D_10 = 'D_10'
    XDCAM = 'XDCAM'
    OP1A = 'OP1A'
    XAVC = 'XAVC'


class MxfXavcDurationMode(Enum):
    ALLOW_ANY_DURATION = 'ALLOW_ANY_DURATION'
    DROP_FRAMES_FOR_COMPLIANCE = 'DROP_FRAMES_FOR_COMPLIANCE'


class NielsenActiveWatermarkProcessType(Enum):
    NAES2_AND_NW = 'NAES2_AND_NW'
    CBET = 'CBET'
    NAES2_AND_NW_AND_CBET = 'NAES2_AND_NW_AND_CBET'


class NielsenSourceWatermarkStatusType(Enum):
    CLEAN = 'CLEAN'
    WATERMARKED = 'WATERMARKED'


class NielsenUniqueTicPerAudioTrackType(Enum):
    RESERVE_UNIQUE_TICS_PER_TRACK = 'RESERVE_UNIQUE_TICS_PER_TRACK'
    SAME_TICS_PER_TRACK = 'SAME_TICS_PER_TRACK'


class NoiseFilterPostTemporalSharpening(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'
    AUTO = 'AUTO'


class NoiseFilterPostTemporalSharpeningStrength(Enum):
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'


class NoiseReducerFilter(Enum):
    BILATERAL = 'BILATERAL'
    MEAN = 'MEAN'
    GAUSSIAN = 'GAUSSIAN'
    LANCZOS = 'LANCZOS'
    SHARPEN = 'SHARPEN'
    CONSERVE = 'CONSERVE'
    SPATIAL = 'SPATIAL'
    TEMPORAL = 'TEMPORAL'


class NotFoundException(RootModel[Any]):
    root: Any


class Order(Enum):
    ASCENDING = 'ASCENDING'
    DESCENDING = 'DESCENDING'


class OutputGroupType(Enum):
    HLS_GROUP_SETTINGS = 'HLS_GROUP_SETTINGS'
    DASH_ISO_GROUP_SETTINGS = 'DASH_ISO_GROUP_SETTINGS'
    FILE_GROUP_SETTINGS = 'FILE_GROUP_SETTINGS'
    MS_SMOOTH_GROUP_SETTINGS = 'MS_SMOOTH_GROUP_SETTINGS'
    CMAF_GROUP_SETTINGS = 'CMAF_GROUP_SETTINGS'


class OutputSdt(Enum):
    SDT_FOLLOW = 'SDT_FOLLOW'
    SDT_FOLLOW_IF_PRESENT = 'SDT_FOLLOW_IF_PRESENT'
    SDT_MANUAL = 'SDT_MANUAL'
    SDT_NONE = 'SDT_NONE'


class PadVideo(Enum):
    DISABLED = 'DISABLED'
    BLACK = 'BLACK'


class Policy(BaseModel):
    HttpInputs: Optional[InputPolicy] = None
    HttpsInputs: Optional[InputPolicy] = None
    S3Inputs: Optional[InputPolicy] = None


class PresetListBy(Enum):
    NAME = 'NAME'
    CREATION_DATE = 'CREATION_DATE'
    SYSTEM = 'SYSTEM'


class PricingPlan(Enum):
    ON_DEMAND = 'ON_DEMAND'
    RESERVED = 'RESERVED'


class ProresChromaSampling(Enum):
    PRESERVE_444_SAMPLING = 'PRESERVE_444_SAMPLING'
    SUBSAMPLE_TO_422 = 'SUBSAMPLE_TO_422'


class ProresCodecProfile(Enum):
    APPLE_PRORES_422 = 'APPLE_PRORES_422'
    APPLE_PRORES_422_HQ = 'APPLE_PRORES_422_HQ'
    APPLE_PRORES_422_LT = 'APPLE_PRORES_422_LT'
    APPLE_PRORES_422_PROXY = 'APPLE_PRORES_422_PROXY'
    APPLE_PRORES_4444 = 'APPLE_PRORES_4444'
    APPLE_PRORES_4444_XQ = 'APPLE_PRORES_4444_XQ'


class ProresFramerateControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class ProresFramerateConversionAlgorithm(Enum):
    DUPLICATE_DROP = 'DUPLICATE_DROP'
    INTERPOLATE = 'INTERPOLATE'
    FRAMEFORMER = 'FRAMEFORMER'


class ProresInterlaceMode(Enum):
    PROGRESSIVE = 'PROGRESSIVE'
    TOP_FIELD = 'TOP_FIELD'
    BOTTOM_FIELD = 'BOTTOM_FIELD'
    FOLLOW_TOP_FIELD = 'FOLLOW_TOP_FIELD'
    FOLLOW_BOTTOM_FIELD = 'FOLLOW_BOTTOM_FIELD'


class ProresParControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class ProresScanTypeConversionMode(Enum):
    INTERLACED = 'INTERLACED'
    INTERLACED_OPTIMIZE = 'INTERLACED_OPTIMIZE'


class ProresSlowPal(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class ProresTelecine(Enum):
    NONE = 'NONE'
    HARD = 'HARD'


class PutPolicyRequest(BaseModel):
    Policy_1: Policy = Field(..., alias='Policy')


class PutPolicyResponse(BaseModel):
    Policy_1: Optional[Policy] = Field(None, alias='Policy')


class QueueListBy(Enum):
    NAME = 'NAME'
    CREATION_DATE = 'CREATION_DATE'


class QueueStatus(Enum):
    ACTIVE = 'ACTIVE'
    PAUSED = 'PAUSED'


class RenewalType(Enum):
    AUTO_RENEW = 'AUTO_RENEW'
    EXPIRE = 'EXPIRE'


class RequiredFlag(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class ReservationPlanStatus(Enum):
    ACTIVE = 'ACTIVE'
    EXPIRED = 'EXPIRED'


class RespondToAfd(Enum):
    NONE = 'NONE'
    RESPOND = 'RESPOND'
    PASSTHROUGH = 'PASSTHROUGH'


class RuleType(Enum):
    MIN_TOP_RENDITION_SIZE = 'MIN_TOP_RENDITION_SIZE'
    MIN_BOTTOM_RENDITION_SIZE = 'MIN_BOTTOM_RENDITION_SIZE'
    FORCE_INCLUDE_RENDITIONS = 'FORCE_INCLUDE_RENDITIONS'
    ALLOWED_RENDITIONS = 'ALLOWED_RENDITIONS'


class S3ObjectCannedAcl(Enum):
    PUBLIC_READ = 'PUBLIC_READ'
    AUTHENTICATED_READ = 'AUTHENTICATED_READ'
    BUCKET_OWNER_READ = 'BUCKET_OWNER_READ'
    BUCKET_OWNER_FULL_CONTROL = 'BUCKET_OWNER_FULL_CONTROL'


class S3ServerSideEncryptionType(Enum):
    SERVER_SIDE_ENCRYPTION_S3 = 'SERVER_SIDE_ENCRYPTION_S3'
    SERVER_SIDE_ENCRYPTION_KMS = 'SERVER_SIDE_ENCRYPTION_KMS'


class SampleRangeConversion(Enum):
    LIMITED_RANGE_SQUEEZE = 'LIMITED_RANGE_SQUEEZE'
    NONE = 'NONE'
    LIMITED_RANGE_CLIP = 'LIMITED_RANGE_CLIP'


class ScalingBehavior(Enum):
    DEFAULT = 'DEFAULT'
    STRETCH_TO_OUTPUT = 'STRETCH_TO_OUTPUT'


class SccDestinationFramerate(Enum):
    FRAMERATE_23_97 = 'FRAMERATE_23_97'
    FRAMERATE_24 = 'FRAMERATE_24'
    FRAMERATE_25 = 'FRAMERATE_25'
    FRAMERATE_29_97_DROPFRAME = 'FRAMERATE_29_97_DROPFRAME'
    FRAMERATE_29_97_NON_DROPFRAME = 'FRAMERATE_29_97_NON_DROPFRAME'


class SccDestinationSettings(BaseModel):
    Framerate: Optional[SccDestinationFramerate] = None


class SimulateReservedQueue(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class SrtStylePassthrough(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class StatusUpdateInterval(Enum):
    SECONDS_10 = 'SECONDS_10'
    SECONDS_12 = 'SECONDS_12'
    SECONDS_15 = 'SECONDS_15'
    SECONDS_20 = 'SECONDS_20'
    SECONDS_30 = 'SECONDS_30'
    SECONDS_60 = 'SECONDS_60'
    SECONDS_120 = 'SECONDS_120'
    SECONDS_180 = 'SECONDS_180'
    SECONDS_240 = 'SECONDS_240'
    SECONDS_300 = 'SECONDS_300'
    SECONDS_360 = 'SECONDS_360'
    SECONDS_420 = 'SECONDS_420'
    SECONDS_480 = 'SECONDS_480'
    SECONDS_540 = 'SECONDS_540'
    SECONDS_600 = 'SECONDS_600'


class TagResourceResponse(BaseModel):
    pass


class TeletextPageType(Enum):
    PAGE_TYPE_INITIAL = 'PAGE_TYPE_INITIAL'
    PAGE_TYPE_SUBTITLE = 'PAGE_TYPE_SUBTITLE'
    PAGE_TYPE_ADDL_INFO = 'PAGE_TYPE_ADDL_INFO'
    PAGE_TYPE_PROGRAM_SCHEDULE = 'PAGE_TYPE_PROGRAM_SCHEDULE'
    PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE = 'PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE'


class TimecodeBurninPosition(Enum):
    TOP_CENTER = 'TOP_CENTER'
    TOP_LEFT = 'TOP_LEFT'
    TOP_RIGHT = 'TOP_RIGHT'
    MIDDLE_LEFT = 'MIDDLE_LEFT'
    MIDDLE_CENTER = 'MIDDLE_CENTER'
    MIDDLE_RIGHT = 'MIDDLE_RIGHT'
    BOTTOM_LEFT = 'BOTTOM_LEFT'
    BOTTOM_CENTER = 'BOTTOM_CENTER'
    BOTTOM_RIGHT = 'BOTTOM_RIGHT'


class TimecodeSource(Enum):
    EMBEDDED = 'EMBEDDED'
    ZEROBASED = 'ZEROBASED'
    SPECIFIEDSTART = 'SPECIFIEDSTART'


class TimedMetadata(Enum):
    PASSTHROUGH = 'PASSTHROUGH'
    NONE = 'NONE'


class TooManyRequestsException(RootModel[Any]):
    root: Any


class TtmlStylePassthrough(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Type(Enum):
    SYSTEM = 'SYSTEM'
    CUSTOM = 'CUSTOM'


class UntagResourceResponse(BaseModel):
    pass


class Vc3Class(Enum):
    CLASS_145_8BIT = 'CLASS_145_8BIT'
    CLASS_220_8BIT = 'CLASS_220_8BIT'
    CLASS_220_10BIT = 'CLASS_220_10BIT'


class Vc3FramerateControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class Vc3FramerateConversionAlgorithm(Enum):
    DUPLICATE_DROP = 'DUPLICATE_DROP'
    INTERPOLATE = 'INTERPOLATE'
    FRAMEFORMER = 'FRAMEFORMER'


class Vc3InterlaceMode(Enum):
    INTERLACED = 'INTERLACED'
    PROGRESSIVE = 'PROGRESSIVE'


class Vc3ScanTypeConversionMode(Enum):
    INTERLACED = 'INTERLACED'
    INTERLACED_OPTIMIZE = 'INTERLACED_OPTIMIZE'


class Vc3SlowPal(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class Vc3Telecine(Enum):
    NONE = 'NONE'
    HARD = 'HARD'


class VchipAction(Enum):
    PASSTHROUGH = 'PASSTHROUGH'
    STRIP = 'STRIP'


class VideoCodec(Enum):
    AV1 = 'AV1'
    AVC_INTRA = 'AVC_INTRA'
    FRAME_CAPTURE = 'FRAME_CAPTURE'
    H_264 = 'H_264'
    H_265 = 'H_265'
    MPEG2 = 'MPEG2'
    PRORES = 'PRORES'
    VC3 = 'VC3'
    VP8 = 'VP8'
    VP9 = 'VP9'
    XAVC = 'XAVC'


class VideoTimecodeInsertion(Enum):
    DISABLED = 'DISABLED'
    PIC_TIMING_SEI = 'PIC_TIMING_SEI'


class Vp8FramerateControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class Vp8FramerateConversionAlgorithm(Enum):
    DUPLICATE_DROP = 'DUPLICATE_DROP'
    INTERPOLATE = 'INTERPOLATE'
    FRAMEFORMER = 'FRAMEFORMER'


class Vp8ParControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class Vp8QualityTuningLevel(Enum):
    MULTI_PASS = 'MULTI_PASS'
    MULTI_PASS_HQ = 'MULTI_PASS_HQ'


class Vp8RateControlMode(Enum):
    VBR = 'VBR'


class Vp9FramerateControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class Vp9FramerateConversionAlgorithm(Enum):
    DUPLICATE_DROP = 'DUPLICATE_DROP'
    INTERPOLATE = 'INTERPOLATE'
    FRAMEFORMER = 'FRAMEFORMER'


class Vp9ParControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class Vp9QualityTuningLevel(Enum):
    MULTI_PASS = 'MULTI_PASS'
    MULTI_PASS_HQ = 'MULTI_PASS_HQ'


class Vp9RateControlMode(Enum):
    VBR = 'VBR'


class WatermarkingStrength(Enum):
    LIGHTEST = 'LIGHTEST'
    LIGHTER = 'LIGHTER'
    DEFAULT = 'DEFAULT'
    STRONGER = 'STRONGER'
    STRONGEST = 'STRONGEST'


class WavFormat(Enum):
    RIFF = 'RIFF'
    RF64 = 'RF64'


class WebvttAccessibilitySubs(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class WebvttStylePassthrough(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'
    STRICT = 'STRICT'


class Xavc4kIntraCbgProfileClass(Enum):
    CLASS_100 = 'CLASS_100'
    CLASS_300 = 'CLASS_300'
    CLASS_480 = 'CLASS_480'


class Xavc4kIntraCbgProfileSettings(BaseModel):
    XavcClass: Optional[Xavc4kIntraCbgProfileClass] = None


class Xavc4kIntraVbrProfileClass(Enum):
    CLASS_100 = 'CLASS_100'
    CLASS_300 = 'CLASS_300'
    CLASS_480 = 'CLASS_480'


class Xavc4kIntraVbrProfileSettings(BaseModel):
    XavcClass: Optional[Xavc4kIntraVbrProfileClass] = None


class Xavc4kProfileBitrateClass(Enum):
    BITRATE_CLASS_100 = 'BITRATE_CLASS_100'
    BITRATE_CLASS_140 = 'BITRATE_CLASS_140'
    BITRATE_CLASS_200 = 'BITRATE_CLASS_200'


class Xavc4kProfileCodecProfile(Enum):
    HIGH = 'HIGH'
    HIGH_422 = 'HIGH_422'


class Xavc4kProfileQualityTuningLevel(Enum):
    SINGLE_PASS = 'SINGLE_PASS'
    SINGLE_PASS_HQ = 'SINGLE_PASS_HQ'
    MULTI_PASS_HQ = 'MULTI_PASS_HQ'


class XavcAdaptiveQuantization(Enum):
    OFF = 'OFF'
    AUTO = 'AUTO'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'
    HIGHER = 'HIGHER'
    MAX = 'MAX'


class XavcEntropyEncoding(Enum):
    AUTO = 'AUTO'
    CABAC = 'CABAC'
    CAVLC = 'CAVLC'


class XavcFlickerAdaptiveQuantization(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class XavcFramerateControl(Enum):
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class XavcFramerateConversionAlgorithm(Enum):
    DUPLICATE_DROP = 'DUPLICATE_DROP'
    INTERPOLATE = 'INTERPOLATE'
    FRAMEFORMER = 'FRAMEFORMER'


class XavcGopBReference(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class XavcHdIntraCbgProfileClass(Enum):
    CLASS_50 = 'CLASS_50'
    CLASS_100 = 'CLASS_100'
    CLASS_200 = 'CLASS_200'


class XavcHdIntraCbgProfileSettings(BaseModel):
    XavcClass: Optional[XavcHdIntraCbgProfileClass] = None


class XavcHdProfileBitrateClass(Enum):
    BITRATE_CLASS_25 = 'BITRATE_CLASS_25'
    BITRATE_CLASS_35 = 'BITRATE_CLASS_35'
    BITRATE_CLASS_50 = 'BITRATE_CLASS_50'


class XavcHdProfileQualityTuningLevel(Enum):
    SINGLE_PASS = 'SINGLE_PASS'
    SINGLE_PASS_HQ = 'SINGLE_PASS_HQ'
    MULTI_PASS_HQ = 'MULTI_PASS_HQ'


class XavcHdProfileTelecine(Enum):
    NONE = 'NONE'
    HARD = 'HARD'


class XavcInterlaceMode(Enum):
    PROGRESSIVE = 'PROGRESSIVE'
    TOP_FIELD = 'TOP_FIELD'
    BOTTOM_FIELD = 'BOTTOM_FIELD'
    FOLLOW_TOP_FIELD = 'FOLLOW_TOP_FIELD'
    FOLLOW_BOTTOM_FIELD = 'FOLLOW_BOTTOM_FIELD'


class XavcProfile(Enum):
    XAVC_HD_INTRA_CBG = 'XAVC_HD_INTRA_CBG'
    XAVC_4K_INTRA_CBG = 'XAVC_4K_INTRA_CBG'
    XAVC_4K_INTRA_VBR = 'XAVC_4K_INTRA_VBR'
    XAVC_HD = 'XAVC_HD'
    XAVC_4K = 'XAVC_4K'


class XavcSlowPal(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class XavcSpatialAdaptiveQuantization(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class XavcTemporalAdaptiveQuantization(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class FieldDoubleMin0(RootModel[float]):
    root: float


class FieldDoubleMin0Max1(RootModel[float]):
    root: float


class FieldDoubleMin0Max2147483647(RootModel[float]):
    root: float


class FieldDoubleMinNegative20Max0(RootModel[float]):
    root: float


class FieldDoubleMinNegative59Max0(RootModel[float]):
    root: float


class FieldDoubleMinNegative60Max3(RootModel[float]):
    root: float


class FieldDoubleMinNegative60Max6(RootModel[float]):
    root: float


class FieldDoubleMinNegative60MaxNegative1(RootModel[float]):
    root: float


class FieldDoubleMinNegative6Max3(RootModel[float]):
    root: float


class FieldInteger(RootModel[int]):
    root: int


class FieldIntegerMin0Max0(RootModel[conint(ge=0, le=0)]):
    root: conint(ge=0, le=0)


class FieldIntegerMin0Max1(RootModel[conint(ge=0, le=1)]):
    root: conint(ge=0, le=1)


class FieldIntegerMin0Max10(RootModel[conint(ge=0, le=10)]):
    root: conint(ge=0, le=10)


class FieldIntegerMin0Max100(RootModel[conint(ge=0, le=100)]):
    root: conint(ge=0, le=100)


class FieldIntegerMin0Max1000(RootModel[conint(ge=0, le=1000)]):
    root: conint(ge=0, le=1000)


class FieldIntegerMin0Max10000(RootModel[conint(ge=0, le=10000)]):
    root: conint(ge=0, le=10000)


class FieldIntegerMin0Max1152000000(RootModel[conint(ge=0, le=1152000000)]):
    root: conint(ge=0, le=1152000000)


class FieldIntegerMin0Max128(RootModel[conint(ge=0, le=128)]):
    root: conint(ge=0, le=128)


class FieldIntegerMin0Max1466400000(RootModel[conint(ge=0, le=1466400000)]):
    root: conint(ge=0, le=1466400000)


class FieldIntegerMin0Max15(RootModel[conint(ge=0, le=15)]):
    root: conint(ge=0, le=15)


class FieldIntegerMin0Max16(RootModel[conint(ge=0, le=16)]):
    root: conint(ge=0, le=16)


class FieldIntegerMin0Max2147483647(RootModel[conint(ge=0, le=2147483647)]):
    root: conint(ge=0, le=2147483647)


class FieldIntegerMin0Max255(RootModel[conint(ge=0, le=255)]):
    root: conint(ge=0, le=255)


class FieldIntegerMin0Max3(RootModel[conint(ge=0, le=3)]):
    root: conint(ge=0, le=3)


class FieldIntegerMin0Max30(RootModel[conint(ge=0, le=30)]):
    root: conint(ge=0, le=30)


class FieldIntegerMin0Max30000(RootModel[conint(ge=0, le=30000)]):
    root: conint(ge=0, le=30000)


class FieldIntegerMin0Max3600(RootModel[conint(ge=0, le=3600)]):
    root: conint(ge=0, le=3600)


class FieldIntegerMin0Max4(RootModel[conint(ge=0, le=4)]):
    root: conint(ge=0, le=4)


class FieldIntegerMin0Max4000(RootModel[conint(ge=0, le=4000)]):
    root: conint(ge=0, le=4000)


class FieldIntegerMin0Max4194303(RootModel[conint(ge=0, le=4194303)]):
    root: conint(ge=0, le=4194303)


class FieldIntegerMin0Max47185920(RootModel[conint(ge=0, le=47185920)]):
    root: conint(ge=0, le=47185920)


class FieldIntegerMin0Max5(RootModel[conint(ge=0, le=5)]):
    root: conint(ge=0, le=5)


class FieldIntegerMin0Max500(RootModel[conint(ge=0, le=500)]):
    root: conint(ge=0, le=500)


class FieldIntegerMin0Max50000(RootModel[conint(ge=0, le=50000)]):
    root: conint(ge=0, le=50000)


class FieldIntegerMin0Max65534(RootModel[conint(ge=0, le=65534)]):
    root: conint(ge=0, le=65534)


class FieldIntegerMin0Max65535(RootModel[conint(ge=0, le=65535)]):
    root: conint(ge=0, le=65535)


class FieldIntegerMin0Max7(RootModel[conint(ge=0, le=7)]):
    root: conint(ge=0, le=7)


class FieldIntegerMin0Max8(RootModel[conint(ge=0, le=8)]):
    root: conint(ge=0, le=8)


class FieldIntegerMin0Max9(RootModel[conint(ge=0, le=9)]):
    root: conint(ge=0, le=9)


class FieldIntegerMin0Max96(RootModel[conint(ge=0, le=96)]):
    root: conint(ge=0, le=96)


class FieldIntegerMin0Max99(RootModel[conint(ge=0, le=99)]):
    root: conint(ge=0, le=99)


class FieldIntegerMin100000Max100000000(RootModel[conint(ge=100000, le=100000000)]):
    root: conint(ge=100000, le=100000000)


class FieldIntegerMin1000Max1152000000(RootModel[conint(ge=1000, le=1152000000)]):
    root: conint(ge=1000, le=1152000000)


class FieldIntegerMin1000Max1466400000(RootModel[conint(ge=1000, le=1466400000)]):
    root: conint(ge=1000, le=1466400000)


class FieldIntegerMin1000Max288000000(RootModel[conint(ge=1000, le=288000000)]):
    root: conint(ge=1000, le=288000000)


class FieldIntegerMin1000Max30000(RootModel[conint(ge=1000, le=30000)]):
    root: conint(ge=1000, le=30000)


class FieldIntegerMin1000Max300000000(RootModel[conint(ge=1000, le=300000000)]):
    root: conint(ge=1000, le=300000000)


class FieldIntegerMin1000Max480000000(RootModel[conint(ge=1000, le=480000000)]):
    root: conint(ge=1000, le=480000000)


class FieldIntegerMin100Max1000(RootModel[conint(ge=100, le=1000)]):
    root: conint(ge=100, le=1000)


class FieldIntegerMin10Max48(RootModel[conint(ge=10, le=48)]):
    root: conint(ge=10, le=48)


class FieldIntegerMin16000Max320000(RootModel[conint(ge=16000, le=320000)]):
    root: conint(ge=16000, le=320000)


class FieldIntegerMin16000Max48000(RootModel[conint(ge=16000, le=48000)]):
    root: conint(ge=16000, le=48000)


class FieldIntegerMin16Max24(RootModel[conint(ge=16, le=24)]):
    root: conint(ge=16, le=24)


class FieldIntegerMin1Max1(RootModel[conint(ge=1, le=1)]):
    root: conint(ge=1, le=1)


class FieldIntegerMin1Max10(RootModel[conint(ge=1, le=10)]):
    root: conint(ge=1, le=10)


class FieldIntegerMin1Max100(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class FieldIntegerMin1Max10000000(RootModel[conint(ge=1, le=10000000)]):
    root: conint(ge=1, le=10000000)


class FieldIntegerMin1Max1001(RootModel[conint(ge=1, le=1001)]):
    root: conint(ge=1, le=1001)


class FieldIntegerMin1Max17895697(RootModel[conint(ge=1, le=17895697)]):
    root: conint(ge=1, le=17895697)


class FieldIntegerMin1Max2(RootModel[conint(ge=1, le=2)]):
    root: conint(ge=1, le=2)


class FieldIntegerMin1Max20(RootModel[conint(ge=1, le=20)]):
    root: conint(ge=1, le=20)


class FieldIntegerMin1Max2048(RootModel[conint(ge=1, le=2048)]):
    root: conint(ge=1, le=2048)


class FieldIntegerMin1Max2147483640(RootModel[conint(ge=1, le=2147483640)]):
    root: conint(ge=1, le=2147483640)


class FieldIntegerMin1Max2147483647(RootModel[conint(ge=1, le=2147483647)]):
    root: conint(ge=1, le=2147483647)


class FieldIntegerMin1Max31(RootModel[conint(ge=1, le=31)]):
    root: conint(ge=1, le=31)


class FieldIntegerMin1Max32(RootModel[conint(ge=1, le=32)]):
    root: conint(ge=1, le=32)


class FieldIntegerMin1Max4(RootModel[conint(ge=1, le=4)]):
    root: conint(ge=1, le=4)


class FieldIntegerMin1Max4096(RootModel[conint(ge=1, le=4096)]):
    root: conint(ge=1, le=4096)


class FieldIntegerMin1Max512(RootModel[conint(ge=1, le=512)]):
    root: conint(ge=1, le=512)


class FieldIntegerMin1Max6(RootModel[conint(ge=1, le=6)]):
    root: conint(ge=1, le=6)


class FieldIntegerMin1Max60000(RootModel[conint(ge=1, le=60000)]):
    root: conint(ge=1, le=60000)


class FieldIntegerMin1Max64(RootModel[conint(ge=1, le=64)]):
    root: conint(ge=1, le=64)


class FieldIntegerMin22050Max48000(RootModel[conint(ge=22050, le=48000)]):
    root: conint(ge=22050, le=48000)


class FieldIntegerMin24Max60000(RootModel[conint(ge=24, le=60000)]):
    root: conint(ge=24, le=60000)


class FieldIntegerMin25Max10000(RootModel[conint(ge=25, le=10000)]):
    root: conint(ge=25, le=10000)


class FieldIntegerMin25Max2000(RootModel[conint(ge=25, le=2000)]):
    root: conint(ge=25, le=2000)


class FieldIntegerMin2Max2147483647(RootModel[conint(ge=2, le=2147483647)]):
    root: conint(ge=2, le=2147483647)


class FieldIntegerMin2Max4096(RootModel[conint(ge=2, le=4096)]):
    root: conint(ge=2, le=4096)


class FieldIntegerMin32000Max192000(RootModel[conint(ge=32000, le=192000)]):
    root: conint(ge=32000, le=192000)


class FieldIntegerMin32000Max3024000(RootModel[conint(ge=32000, le=3024000)]):
    root: conint(ge=32000, le=3024000)


class FieldIntegerMin32000Max384000(RootModel[conint(ge=32000, le=384000)]):
    root: conint(ge=32000, le=384000)


class FieldIntegerMin32000Max48000(RootModel[conint(ge=32000, le=48000)]):
    root: conint(ge=32000, le=48000)


class FieldIntegerMin32Max8182(RootModel[conint(ge=32, le=8182)]):
    root: conint(ge=32, le=8182)


class FieldIntegerMin32Max8192(RootModel[conint(ge=32, le=8192)]):
    root: conint(ge=32, le=8192)


class FieldIntegerMin384000Max1024000(RootModel[conint(ge=384000, le=1024000)]):
    root: conint(ge=384000, le=1024000)


class FieldIntegerMin3Max15(RootModel[conint(ge=3, le=15)]):
    root: conint(ge=3, le=15)


class FieldIntegerMin48000Max48000(RootModel[conint(ge=48000, le=48000)]):
    root: conint(ge=48000, le=48000)


class FieldIntegerMin4Max12(RootModel[conint(ge=4, le=12)]):
    root: conint(ge=4, le=12)


class FieldIntegerMin50Max86400000(RootModel[conint(ge=50, le=86400000)]):
    root: conint(ge=50, le=86400000)


class FieldIntegerMin6000Max1024000(RootModel[conint(ge=6000, le=1024000)]):
    root: conint(ge=6000, le=1024000)


class FieldIntegerMin64000Max640000(RootModel[conint(ge=64000, le=640000)]):
    root: conint(ge=64000, le=640000)


class FieldIntegerMin8000Max192000(RootModel[conint(ge=8000, le=192000)]):
    root: conint(ge=8000, le=192000)


class FieldIntegerMin8000Max96000(RootModel[conint(ge=8000, le=96000)]):
    root: conint(ge=8000, le=96000)


class FieldIntegerMin8Max12(RootModel[conint(ge=8, le=12)]):
    root: conint(ge=8, le=12)


class FieldIntegerMin8Max4096(RootModel[conint(ge=8, le=4096)]):
    root: conint(ge=8, le=4096)


class FieldIntegerMin90Max105(RootModel[conint(ge=90, le=105)]):
    root: conint(ge=90, le=105)


class FieldIntegerMin920Max1023(RootModel[conint(ge=920, le=1023)]):
    root: conint(ge=920, le=1023)


class FieldIntegerMin96Max600(RootModel[conint(ge=96, le=600)]):
    root: conint(ge=96, le=600)


class FieldIntegerMinNegative1000Max1000(RootModel[conint(ge=-1000, le=1000)]):
    root: conint(ge=-1000, le=1000)


class FieldIntegerMinNegative180Max180(RootModel[conint(ge=-180, le=180)]):
    root: conint(ge=-180, le=180)


class FieldIntegerMinNegative1Max10(RootModel[conint(ge=-1, le=10)]):
    root: conint(ge=-1, le=10)


class FieldIntegerMinNegative1Max3(RootModel[conint(ge=-1, le=3)]):
    root: conint(ge=-1, le=3)


class FieldIntegerMinNegative2147483648Max2147483647(
    RootModel[conint(ge=-2147483648, le=2147483647)]
):
    root: conint(ge=-2147483648, le=2147483647)


class FieldIntegerMinNegative2Max3(RootModel[conint(ge=-2, le=3)]):
    root: conint(ge=-2, le=3)


class FieldIntegerMinNegative50Max50(RootModel[conint(ge=-50, le=50)]):
    root: conint(ge=-50, le=50)


class FieldIntegerMinNegative5Max10(RootModel[conint(ge=-5, le=10)]):
    root: conint(ge=-5, le=10)


class FieldIntegerMinNegative60Max6(RootModel[conint(ge=-60, le=6)]):
    root: conint(ge=-60, le=6)


class FieldIntegerMinNegative70Max0(RootModel[conint(ge=-70, le=0)]):
    root: conint(ge=-70, le=0)


class FieldListOfHlsAdMarkers(RootModel[List[HlsAdMarkers]]):
    root: List[HlsAdMarkers]


class FieldListOfTeletextPageType(RootModel[List[TeletextPageType]]):
    root: List[TeletextPageType]


class FieldListOfDoubleMinNegative60Max6(RootModel[List[FieldDoubleMinNegative60Max6]]):
    root: List[FieldDoubleMinNegative60Max6]


class FieldListOfIntegerMin1Max2147483647(
    RootModel[List[FieldIntegerMin1Max2147483647]]
):
    root: List[FieldIntegerMin1Max2147483647]


class FieldListOfIntegerMin32Max8182(RootModel[List[FieldIntegerMin32Max8182]]):
    root: List[FieldIntegerMin32Max8182]


class FieldListOfIntegerMinNegative60Max6(
    RootModel[List[FieldIntegerMinNegative60Max6]]
):
    root: List[FieldIntegerMinNegative60Max6]


class FieldString(RootModel[str]):
    root: str


class FieldStringMax1000(RootModel[constr(max_length=1000)]):
    root: constr(max_length=1000)


class FieldStringMin0(RootModel[constr(min_length=0)]):
    root: constr(min_length=0)


class FieldStringMin1(RootModel[constr(min_length=1)]):
    root: constr(min_length=1)


class FieldStringMin11Max11Pattern01D20305D205D(
    RootModel[
        constr(
            pattern=r'^((([0-1]\d)|(2[0-3]))(:[0-5]\d){2}([:;][0-5]\d))$',
            min_length=11,
            max_length=11,
        )
    ]
):
    root: constr(
        pattern=r'^((([0-1]\d)|(2[0-3]))(:[0-5]\d){2}([:;][0-5]\d))$',
        min_length=11,
        max_length=11,
    )


class FieldStringMin14PatternS3BmpBMPPngPNGHttpsBmpBMPPngPNG(
    RootModel[
        constr(
            pattern=r'^((s3://(.*?)\.(bmp|BMP|png|PNG))|(https?://(.*?)\.(bmp|BMP|png|PNG)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
            min_length=14,
        )
    ]
):
    root: constr(
        pattern=r'^((s3://(.*?)\.(bmp|BMP|png|PNG))|(https?://(.*?)\.(bmp|BMP|png|PNG)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
        min_length=14,
    )


class FieldStringMin14PatternS3BmpBMPPngPNGTgaTGAHttpsBmpBMPPngPNGTgaTGA(
    RootModel[
        constr(
            pattern=r'^((s3://(.*?)\.(bmp|BMP|png|PNG|tga|TGA))|(https?://(.*?)\.(bmp|BMP|png|PNG|tga|TGA)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
            min_length=14,
        )
    ]
):
    root: constr(
        pattern=r'^((s3://(.*?)\.(bmp|BMP|png|PNG|tga|TGA))|(https?://(.*?)\.(bmp|BMP|png|PNG|tga|TGA)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
        min_length=14,
    )


class FieldStringMin14PatternS3Mov09PngHttpsMov09Png(
    RootModel[
        constr(
            pattern=r'^((s3://(.*)(\.mov|[0-9]+\.png))|(https?://(.*)(\.mov|[0-9]+\.png)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
            min_length=14,
        )
    ]
):
    root: constr(
        pattern=r'^((s3://(.*)(\.mov|[0-9]+\.png))|(https?://(.*)(\.mov|[0-9]+\.png)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
        min_length=14,
    )


class FieldStringMin14PatternS3SccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTTHttpsSccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTT(
    RootModel[
        constr(
            pattern=r'^((s3://(.*?)\.(scc|SCC|ttml|TTML|dfxp|DFXP|stl|STL|srt|SRT|xml|XML|smi|SMI|vtt|VTT|webvtt|WEBVTT))|(https?://(.*?)\.(scc|SCC|ttml|TTML|dfxp|DFXP|stl|STL|srt|SRT|xml|XML|smi|SMI|vtt|VTT|webvtt|WEBVTT)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
            min_length=14,
        )
    ]
):
    root: constr(
        pattern=r'^((s3://(.*?)\.(scc|SCC|ttml|TTML|dfxp|DFXP|stl|STL|srt|SRT|xml|XML|smi|SMI|vtt|VTT|webvtt|WEBVTT))|(https?://(.*?)\.(scc|SCC|ttml|TTML|dfxp|DFXP|stl|STL|srt|SRT|xml|XML|smi|SMI|vtt|VTT|webvtt|WEBVTT)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
        min_length=14,
    )


class FieldStringMin14PatternS3XmlXMLHttpsXmlXML(
    RootModel[
        constr(
            pattern=r'^((s3://(.*?)\.(xml|XML))|(https?://(.*?)\.(xml|XML)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
            min_length=14,
        )
    ]
):
    root: constr(
        pattern=r'^((s3://(.*?)\.(xml|XML))|(https?://(.*?)\.(xml|XML)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
        min_length=14,
    )


class FieldStringMin16Max24PatternAZaZ0922AZaZ0916(
    RootModel[
        constr(
            pattern=r'^[A-Za-z0-9+\/]{22}==$|^[A-Za-z0-9+\/]{16}$',
            min_length=16,
            max_length=24,
        )
    ]
):
    root: constr(
        pattern=r'^[A-Za-z0-9+\/]{22}==$|^[A-Za-z0-9+\/]{16}$',
        min_length=16,
        max_length=24,
    )


class FieldStringMin1Max100000(RootModel[constr(min_length=1, max_length=100000)]):
    root: constr(min_length=1, max_length=100000)


class FieldStringMin1Max20(RootModel[constr(min_length=1, max_length=20)]):
    root: constr(min_length=1, max_length=20)


class FieldStringMin1Max256(RootModel[constr(min_length=1, max_length=256)]):
    root: constr(min_length=1, max_length=256)


class FieldStringMin1Max50(RootModel[constr(min_length=1, max_length=50)]):
    root: constr(min_length=1, max_length=50)


class FieldStringMin1Max50PatternAZAZ09(
    RootModel[constr(pattern=r'^[a-zA-Z0-9_\/_+=.@-]*$', min_length=1, max_length=50)]
):
    root: constr(pattern=r'^[a-zA-Z0-9_\/_+=.@-]*$', min_length=1, max_length=50)


class FieldStringMin1Max512PatternAZAZ09(
    RootModel[constr(pattern=r'^[a-zA-Z0-9_\/_+=.@-]*$', min_length=1, max_length=512)]
):
    root: constr(pattern=r'^[a-zA-Z0-9_\/_+=.@-]*$', min_length=1, max_length=512)


class FieldStringMin24Max512PatternAZaZ0902(
    RootModel[constr(pattern=r'^[A-Za-z0-9+\/]+={0,2}$', min_length=24, max_length=512)]
):
    root: constr(pattern=r'^[A-Za-z0-9+\/]+={0,2}$', min_length=24, max_length=512)


class FieldStringMin32Max32Pattern09aFAF32(
    RootModel[constr(pattern=r'^[0-9a-fA-F]{32}$', min_length=32, max_length=32)]
):
    root: constr(pattern=r'^[0-9a-fA-F]{32}$', min_length=32, max_length=32)


class FieldStringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12(
    RootModel[
        constr(
            pattern=r'^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
            min_length=36,
            max_length=36,
        )
    ]
):
    root: constr(
        pattern=r'^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        min_length=36,
        max_length=36,
    )


class FieldStringMin3Max3Pattern1809aFAF09aEAE(
    RootModel[
        constr(pattern=r'^[1-8][0-9a-fA-F][0-9a-eA-E]$', min_length=3, max_length=3)
    ]
):
    root: constr(pattern=r'^[1-8][0-9a-fA-F][0-9a-eA-E]$', min_length=3, max_length=3)


class FieldStringMin3Max3PatternAZaZ3(
    RootModel[constr(pattern=r'^[A-Za-z]{3}$', min_length=3, max_length=3)]
):
    root: constr(pattern=r'^[A-Za-z]{3}$', min_length=3, max_length=3)


class FieldStringMin6Max8Pattern09aFAF609aFAF2(
    RootModel[
        constr(pattern=r'^[0-9a-fA-F]{6}([0-9a-fA-F]{2})?$', min_length=6, max_length=8)
    ]
):
    root: constr(
        pattern=r'^[0-9a-fA-F]{6}([0-9a-fA-F]{2})?$', min_length=6, max_length=8
    )


class FieldStringMin9Max19PatternAZ26EastWestCentralNorthSouthEastWest1912(
    RootModel[
        constr(
            pattern=r'^[a-z-]{2,6}-(east|west|central|((north|south)(east|west)?))-[1-9]{1,2}$',
            min_length=9,
            max_length=19,
        )
    ]
):
    root: constr(
        pattern=r'^[a-z-]{2,6}-(east|west|central|((north|south)(east|west)?))-[1-9]{1,2}$',
        min_length=9,
        max_length=19,
    )


class FieldStringPattern(RootModel[constr(pattern=r'^[ -~]+$')]):
    root: constr(pattern=r'^[ -~]+$')


class FieldStringPattern010920405090509092(
    RootModel[constr(pattern=r'^([01][0-9]|2[0-4]):[0-5][0-9]:[0-5][0-9][:;][0-9]{2}$')]
):
    root: constr(pattern=r'^([01][0-9]|2[0-4]):[0-5][0-9]:[0-5][0-9][:;][0-9]{2}$')


class FieldStringPattern01D20305D205D(
    RootModel[constr(pattern=r'^((([0-1]\d)|(2[0-3]))(:[0-5]\d){2}([:;][0-5]\d))$')]
):
    root: constr(pattern=r'^((([0-1]\d)|(2[0-3]))(:[0-5]\d){2}([:;][0-5]\d))$')


class FieldStringPattern0940191020191209301(
    RootModel[constr(pattern=r'^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$')]
):
    root: constr(pattern=r'^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$')


class FieldStringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12(
    RootModel[
        constr(
            pattern=r'^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
        )
    ]
):
    root: constr(
        pattern=r'^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
    )


class FieldStringPattern0xAFaF0908190908(
    RootModel[constr(pattern=r'(^0x[A-Fa-f0-9]{0,8}$|^[1-9][0-9]{0,8}$)')]
):
    root: constr(pattern=r'(^0x[A-Fa-f0-9]{0,8}$|^[1-9][0-9]{0,8}$)')


class FieldStringPatternAZaZ0902(RootModel[constr(pattern=r'^[A-Za-z0-9+\/]+={0,2}$')]):
    root: constr(pattern=r'^[A-Za-z0-9+\/]+={0,2}$')


class FieldStringPatternAZaZ0932(RootModel[constr(pattern=r'^[A-Za-z0-9]{32}$')]):
    root: constr(pattern=r'^[A-Za-z0-9]{32}$')


class FieldStringPatternAZaZ23AZaZ(
    RootModel[constr(pattern=r'^[A-Za-z]{2,3}(-[A-Za-z-]+)?$')]
):
    root: constr(pattern=r'^[A-Za-z]{2,3}(-[A-Za-z-]+)?$')


class FieldStringPatternArnAwsUsGovAcm(
    RootModel[constr(pattern=r'^arn:aws(-us-gov)?:acm:')]
):
    root: constr(pattern=r'^arn:aws(-us-gov)?:acm:')


class FieldStringPatternArnAwsUsGovCnKmsAZ26EastWestCentralNorthSouthEastWest1912D12KeyAFAF098AFAF094AFAF094AFAF094AFAF0912MrkAFAF0932(
    RootModel[
        constr(
            pattern=r'^arn:aws(-us-gov|-cn)?:kms:[a-z-]{2,6}-(east|west|central|((north|south)(east|west)?))-[1-9]{1,2}:\d{12}:key/([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|mrk-[a-fA-F0-9]{32})$'
        )
    ]
):
    root: constr(
        pattern=r'^arn:aws(-us-gov|-cn)?:kms:[a-z-]{2,6}-(east|west|central|((north|south)(east|west)?))-[1-9]{1,2}:\d{12}:key/([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|mrk-[a-fA-F0-9]{32})$'
    )


class FieldStringPatternDD(RootModel[constr(pattern=r'^(\d+(\/\d+)*)$')]):
    root: constr(pattern=r'^(\d+(\/\d+)*)$')


class FieldStringPatternHttps(RootModel[constr(pattern=r'^https:\/\/')]):
    root: constr(pattern=r'^https:\/\/')


class FieldStringPatternHttpsKantarmediaCom(
    RootModel[constr(pattern=r'^https:\/\/.*.kantarmedia.com$')]
):
    root: constr(pattern=r'^https:\/\/.*.kantarmedia.com$')


class FieldStringPatternIdentityAZaZ26AZaZ09163(
    RootModel[constr(pattern=r'^(identity|[A-Za-z]{2,6}(\.[A-Za-z0-9-]{1,63})+)$')]
):
    root: constr(pattern=r'^(identity|[A-Za-z]{2,6}(\.[A-Za-z0-9-]{1,63})+)$')


class FieldStringPatternS3(RootModel[constr(pattern=r'^s3:\/\/')]):
    root: constr(pattern=r'^s3:\/\/')


class FieldStringPatternS3ASSETMAPXml(
    RootModel[constr(pattern=r'^s3:\/\/.*\/(ASSETMAP.xml)?$')]
):
    root: constr(pattern=r'^s3:\/\/.*\/(ASSETMAP.xml)?$')


class FieldStringPatternS3Https(
    RootModel[constr(pattern=r'^s3://([^\/]+\/+)+((([^\/]*)))|^https?://[^\/].*[^&]$')]
):
    root: constr(pattern=r'^s3://([^\/]+\/+)+((([^\/]*)))|^https?://[^\/].*[^&]$')


class FieldStringPatternSNManifestConfirmConditionNotificationNS(
    RootModel[
        constr(pattern=r'^\s*<(.|\n)*ManifestConfirmConditionNotification(.|\n)*>\s*$')
    ]
):
    root: constr(
        pattern=r'^\s*<(.|\n)*ManifestConfirmConditionNotification(.|\n)*>\s*$'
    )


class FieldStringPatternSNSignalProcessingNotificationNS(
    RootModel[constr(pattern=r'^\s*<(.|\n)*SignalProcessingNotification(.|\n)*>\s*$')]
):
    root: constr(pattern=r'^\s*<(.|\n)*SignalProcessingNotification(.|\n)*>\s*$')


class FieldStringPatternW(RootModel[constr(pattern=r'^[\w-]+$')]):
    root: constr(pattern=r'^[\w-]+$')


class FieldStringPatternWS(RootModel[constr(pattern=r'^[\w\s]*$')]):
    root: constr(pattern=r'^[\w\s]*$')


class FieldTimestampUnix(RootModel[datetime]):
    root: datetime


class Field20170829CertificatesPostRequest(BaseModel):
    arn: str = Field(
        ...,
        description='The ARN of the ACM certificate that you want to associate with your MediaConvert resource.',
    )


class Mode(Enum):
    DEFAULT = 'DEFAULT'
    GET_ONLY = 'GET_ONLY'


class Field20170829EndpointsPostRequest(BaseModel):
    maxResults: Optional[int] = Field(
        None,
        description='Optional. Max number of endpoints, up to twenty, that will be returned at one time.',
    )
    mode: Optional[Mode] = Field(
        None,
        description="Optional field, defaults to DEFAULT. Specify DEFAULT for this operation to return your endpoints if any exist, or to create an endpoint for you and return it if one doesn't already exist. Specify GET_ONLY to return your endpoints if any exist, or an empty list if none exist.",
    )
    nextToken: Optional[str] = Field(
        None,
        description='Use this string, provided with the response to a previous request, to request the next batch of endpoints.',
    )


class ListBy(Enum):
    NAME = 'NAME'
    CREATION_DATE = 'CREATION_DATE'
    SYSTEM = 'SYSTEM'


class AccelerationSettings1(BaseModel):
    Mode: Optional[AccelerationMode] = None


class Status(Enum):
    SUBMITTED = 'SUBMITTED'
    PROGRESSING = 'PROGRESSING'
    COMPLETE = 'COMPLETE'
    CANCELED = 'CANCELED'
    ERROR = 'ERROR'


class Field20170829PolicyPutRequest(BaseModel):
    policy: Policy = Field(
        ...,
        description='A policy configures behavior that you allow or disallow for your account. For information about MediaConvert policies, see the user guide at http://docs.aws.amazon.com/mediaconvert/latest/ug/what-is.html',
    )


class ListBy4(Enum):
    NAME = 'NAME'
    CREATION_DATE = 'CREATION_DATE'


class ReservationPlanSettings1(BaseModel):
    Commitment_1: Optional[Commitment] = Field(None, alias='Commitment')
    RenewalType_1: Optional[RenewalType] = Field(None, alias='RenewalType')
    ReservedSlots: Optional[FieldInteger] = None


class Status2(Enum):
    ACTIVE = 'ACTIVE'
    PAUSED = 'PAUSED'


class Field20170829QueuesPostRequest(BaseModel):
    description: Optional[str] = Field(
        None, description='Optional. A description of the queue that you are creating.'
    )
    name: str = Field(..., description='The name of the queue that you are creating.')
    pricingPlan: Optional[PricingPlan] = Field(
        None,
        description='Specifies whether the pricing plan for the queue is on-demand or reserved. For on-demand, you pay per minute, billed in increments of .01 minute. For reserved, you pay for the transcoding capacity of the entire queue, regardless of how much or how little you use it. Reserved pricing requires a 12-month commitment.',
    )
    reservationPlanSettings: Optional[ReservationPlanSettings1] = Field(
        None,
        description='Details about the pricing plan for your reserved queue. Required for reserved queues and not applicable to on-demand queues.',
    )
    status: Optional[Status2] = Field(
        None,
        description="Queues can be ACTIVE or PAUSED. If you pause a queue, jobs in that queue won't begin. Jobs that are running when you pause a queue continue to run until they finish or result in an error.",
    )
    tags: Optional[Dict[str, FieldString]] = Field(
        None,
        description='The tags that you want to add to the resource. You can tag resources with a key-value pair or with only a key.',
    )


class Field20170829QueuesNamePutRequest(BaseModel):
    description: Optional[str] = Field(
        None, description='The new description for the queue, if you are changing it.'
    )
    reservationPlanSettings: Optional[ReservationPlanSettings1] = Field(
        None,
        description='Details about the pricing plan for your reserved queue. Required for reserved queues and not applicable to on-demand queues.',
    )
    status: Optional[Status2] = Field(
        None,
        description="Queues can be ACTIVE or PAUSED. If you pause a queue, jobs in that queue won't begin. Jobs that are running when you pause a queue continue to run until they finish or result in an error.",
    )


class Field20170829TagsPostRequest(BaseModel):
    arn: str = Field(
        ...,
        description='The Amazon Resource Name (ARN) of the resource that you want to tag. To get the ARN, send a GET request with the resource name.',
    )
    tags: Dict[str, FieldString] = Field(
        ...,
        description='The tags that you want to add to the resource. You can tag resources with a key-value pair or with only a key.',
    )


class Field20170829TagsArnPutRequest(BaseModel):
    tagKeys: Optional[List[FieldString]] = Field(
        None,
        description='The keys of the tags that you want to remove from the resource.',
    )


class AacSettings(BaseModel):
    AudioDescriptionBroadcasterMix: Optional[AacAudioDescriptionBroadcasterMix] = None
    Bitrate: Optional[FieldIntegerMin6000Max1024000] = None
    CodecProfile: Optional[AacCodecProfile] = None
    CodingMode: Optional[AacCodingMode] = None
    RateControlMode: Optional[AacRateControlMode] = None
    RawFormat: Optional[AacRawFormat] = None
    SampleRate: Optional[FieldIntegerMin8000Max96000] = None
    Specification: Optional[AacSpecification] = None
    VbrQuality: Optional[AacVbrQuality] = None


class Ac3Settings(BaseModel):
    Bitrate: Optional[FieldIntegerMin64000Max640000] = None
    BitstreamMode: Optional[Ac3BitstreamMode] = None
    CodingMode: Optional[Ac3CodingMode] = None
    Dialnorm: Optional[FieldIntegerMin1Max31] = None
    DynamicRangeCompressionLine: Optional[Ac3DynamicRangeCompressionLine] = None
    DynamicRangeCompressionProfile: Optional[Ac3DynamicRangeCompressionProfile] = None
    DynamicRangeCompressionRf: Optional[Ac3DynamicRangeCompressionRf] = None
    LfeFilter: Optional[Ac3LfeFilter] = None
    MetadataControl: Optional[Ac3MetadataControl] = None
    SampleRate: Optional[FieldIntegerMin48000Max48000] = None


class AiffSettings(BaseModel):
    BitDepth: Optional[FieldIntegerMin16Max24] = None
    Channels: Optional[FieldIntegerMin1Max64] = None
    SampleRate: Optional[FieldIntegerMin8000Max192000] = None


class AllowedRenditionSize(BaseModel):
    Height: Optional[FieldIntegerMin32Max8192] = None
    Required: Optional[RequiredFlag] = None
    Width: Optional[FieldIntegerMin32Max8192] = None


class AncillarySourceSettings(BaseModel):
    Convert608To708: Optional[AncillaryConvert608To708] = None
    SourceAncillaryChannelNumber: Optional[FieldIntegerMin1Max4] = None
    TerminateCaptions: Optional[AncillaryTerminateCaptions] = None


class AssociateCertificateRequest(BaseModel):
    Arn: FieldString


class AudioNormalizationSettings(BaseModel):
    Algorithm: Optional[AudioNormalizationAlgorithm] = None
    AlgorithmControl: Optional[AudioNormalizationAlgorithmControl] = None
    CorrectionGateLevel: Optional[FieldIntegerMinNegative70Max0] = None
    LoudnessLogging: Optional[AudioNormalizationLoudnessLogging] = None
    PeakCalculation: Optional[AudioNormalizationPeakCalculation] = None
    TargetLkfs: Optional[FieldDoubleMinNegative59Max0] = None
    TruePeakLimiterThreshold: Optional[FieldDoubleMinNegative20Max0] = None


class Av1QvbrSettings(BaseModel):
    QvbrQualityLevel: Optional[FieldIntegerMin1Max10] = None
    QvbrQualityLevelFineTune: Optional[FieldDoubleMin0Max1] = None


class Av1Settings(BaseModel):
    AdaptiveQuantization: Optional[Av1AdaptiveQuantization] = None
    BitDepth: Optional[Av1BitDepth] = None
    FramerateControl: Optional[Av1FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Av1FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[FieldIntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[FieldIntegerMin1Max2147483647] = None
    GopSize: Optional[FieldDoubleMin0] = None
    MaxBitrate: Optional[FieldIntegerMin1000Max1152000000] = None
    NumberBFramesBetweenReferenceFrames: Optional[FieldIntegerMin0Max15] = None
    QvbrSettings: Optional[Av1QvbrSettings] = None
    RateControlMode: Optional[Av1RateControlMode] = None
    Slices: Optional[FieldIntegerMin1Max32] = None
    SpatialAdaptiveQuantization: Optional[Av1SpatialAdaptiveQuantization] = None


class AvailBlanking(BaseModel):
    AvailBlankingImage: Optional[
        FieldStringMin14PatternS3BmpBMPPngPNGHttpsBmpBMPPngPNG
    ] = None


class AvcIntraSettings(BaseModel):
    AvcIntraClass_1: Optional[AvcIntraClass] = Field(None, alias='AvcIntraClass')
    AvcIntraUhdSettings_1: Optional[AvcIntraUhdSettings] = Field(
        None, alias='AvcIntraUhdSettings'
    )
    FramerateControl: Optional[AvcIntraFramerateControl] = None
    FramerateConversionAlgorithm: Optional[AvcIntraFramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[FieldIntegerMin1Max1001] = None
    FramerateNumerator: Optional[FieldIntegerMin24Max60000] = None
    InterlaceMode: Optional[AvcIntraInterlaceMode] = None
    ScanTypeConversionMode: Optional[AvcIntraScanTypeConversionMode] = None
    SlowPal: Optional[AvcIntraSlowPal] = None
    Telecine: Optional[AvcIntraTelecine] = None


class BandwidthReductionFilter(BaseModel):
    Sharpening: Optional[BandwidthReductionFilterSharpening] = None
    Strength: Optional[BandwidthReductionFilterStrength] = None


class BurninDestinationSettings(BaseModel):
    Alignment: Optional[BurninSubtitleAlignment] = None
    ApplyFontColor: Optional[BurninSubtitleApplyFontColor] = None
    BackgroundColor: Optional[BurninSubtitleBackgroundColor] = None
    BackgroundOpacity: Optional[FieldIntegerMin0Max255] = None
    FallbackFont: Optional[BurninSubtitleFallbackFont] = None
    FontColor: Optional[BurninSubtitleFontColor] = None
    FontOpacity: Optional[FieldIntegerMin0Max255] = None
    FontResolution: Optional[FieldIntegerMin96Max600] = None
    FontScript_1: Optional[FontScript] = Field(None, alias='FontScript')
    FontSize: Optional[FieldIntegerMin0Max96] = None
    HexFontColor: Optional[FieldStringMin6Max8Pattern09aFAF609aFAF2] = None
    OutlineColor: Optional[BurninSubtitleOutlineColor] = None
    OutlineSize: Optional[FieldIntegerMin0Max10] = None
    ShadowColor: Optional[BurninSubtitleShadowColor] = None
    ShadowOpacity: Optional[FieldIntegerMin0Max255] = None
    ShadowXOffset: Optional[FieldIntegerMinNegative2147483648Max2147483647] = None
    ShadowYOffset: Optional[FieldIntegerMinNegative2147483648Max2147483647] = None
    StylePassthrough: Optional[BurnInSubtitleStylePassthrough] = None
    TeletextSpacing: Optional[BurninSubtitleTeletextSpacing] = None
    XPosition: Optional[FieldIntegerMin0Max2147483647] = None
    YPosition: Optional[FieldIntegerMin0Max2147483647] = None


class CaptionSourceFramerate(BaseModel):
    FramerateDenominator: Optional[FieldIntegerMin1Max1001] = None
    FramerateNumerator: Optional[FieldIntegerMin1Max60000] = None


class ClipLimits(BaseModel):
    MaximumRGBTolerance: Optional[FieldIntegerMin90Max105] = None
    MaximumYUV: Optional[FieldIntegerMin920Max1023] = None
    MinimumRGBTolerance: Optional[FieldIntegerMinNegative5Max10] = None
    MinimumYUV: Optional[FieldIntegerMin0Max128] = None


class CmafImageBasedTrickPlaySettings(BaseModel):
    IntervalCadence: Optional[CmafIntervalCadence] = None
    ThumbnailHeight: Optional[FieldIntegerMin2Max4096] = None
    ThumbnailInterval: Optional[FieldDoubleMin0Max2147483647] = None
    ThumbnailWidth: Optional[FieldIntegerMin8Max4096] = None
    TileHeight: Optional[FieldIntegerMin1Max2048] = None
    TileWidth: Optional[FieldIntegerMin1Max512] = None


class CmfcSettings(BaseModel):
    AudioDuration: Optional[CmfcAudioDuration] = None
    AudioGroupId: Optional[FieldString] = None
    AudioRenditionSets: Optional[FieldString] = None
    AudioTrackType: Optional[CmfcAudioTrackType] = None
    DescriptiveVideoServiceFlag: Optional[CmfcDescriptiveVideoServiceFlag] = None
    IFrameOnlyManifest: Optional[CmfcIFrameOnlyManifest] = None
    KlvMetadata: Optional[CmfcKlvMetadata] = None
    ManifestMetadataSignaling: Optional[CmfcManifestMetadataSignaling] = None
    Scte35Esam: Optional[CmfcScte35Esam] = None
    Scte35Source: Optional[CmfcScte35Source] = None
    TimedMetadata: Optional[CmfcTimedMetadata] = None
    TimedMetadataBoxVersion: Optional[CmfcTimedMetadataBoxVersion] = None
    TimedMetadataSchemeIdUri: Optional[FieldStringMax1000] = None
    TimedMetadataValue: Optional[FieldStringMax1000] = None


class DashIsoImageBasedTrickPlaySettings(BaseModel):
    IntervalCadence: Optional[DashIsoIntervalCadence] = None
    ThumbnailHeight: Optional[FieldIntegerMin1Max4096] = None
    ThumbnailInterval: Optional[FieldDoubleMin0Max2147483647] = None
    ThumbnailWidth: Optional[FieldIntegerMin8Max4096] = None
    TileHeight: Optional[FieldIntegerMin1Max2048] = None
    TileWidth: Optional[FieldIntegerMin1Max512] = None


class Deinterlacer(BaseModel):
    Algorithm: Optional[DeinterlaceAlgorithm] = None
    Control: Optional[DeinterlacerControl] = None
    Mode: Optional[DeinterlacerMode] = None


class DescribeEndpointsRequest(BaseModel):
    MaxResults: Optional[FieldInteger] = None
    Mode: Optional[DescribeEndpointsMode] = None
    NextToken: Optional[FieldString] = None


class DolbyVisionLevel6Metadata(BaseModel):
    MaxCll: Optional[FieldIntegerMin0Max65535] = None
    MaxFall: Optional[FieldIntegerMin0Max65535] = None


class DvbNitSettings(BaseModel):
    NetworkId: Optional[FieldIntegerMin0Max65535] = None
    NetworkName: Optional[FieldStringMin1Max256] = None
    NitInterval: Optional[FieldIntegerMin25Max10000] = None


class DvbSdtSettings(BaseModel):
    OutputSdt_1: Optional[OutputSdt] = Field(None, alias='OutputSdt')
    SdtInterval: Optional[FieldIntegerMin25Max2000] = None
    ServiceName: Optional[FieldStringMin1Max256] = None
    ServiceProviderName: Optional[FieldStringMin1Max256] = None


class DvbSubDestinationSettings(BaseModel):
    Alignment: Optional[DvbSubtitleAlignment] = None
    ApplyFontColor: Optional[DvbSubtitleApplyFontColor] = None
    BackgroundColor: Optional[DvbSubtitleBackgroundColor] = None
    BackgroundOpacity: Optional[FieldIntegerMin0Max255] = None
    DdsHandling: Optional[DvbddsHandling] = None
    DdsXCoordinate: Optional[FieldIntegerMin0Max2147483647] = None
    DdsYCoordinate: Optional[FieldIntegerMin0Max2147483647] = None
    FallbackFont: Optional[DvbSubSubtitleFallbackFont] = None
    FontColor: Optional[DvbSubtitleFontColor] = None
    FontOpacity: Optional[FieldIntegerMin0Max255] = None
    FontResolution: Optional[FieldIntegerMin96Max600] = None
    FontScript_1: Optional[FontScript] = Field(None, alias='FontScript')
    FontSize: Optional[FieldIntegerMin0Max96] = None
    Height: Optional[FieldIntegerMin1Max2147483647] = None
    HexFontColor: Optional[FieldStringMin6Max8Pattern09aFAF609aFAF2] = None
    OutlineColor: Optional[DvbSubtitleOutlineColor] = None
    OutlineSize: Optional[FieldIntegerMin0Max10] = None
    ShadowColor: Optional[DvbSubtitleShadowColor] = None
    ShadowOpacity: Optional[FieldIntegerMin0Max255] = None
    ShadowXOffset: Optional[FieldIntegerMinNegative2147483648Max2147483647] = None
    ShadowYOffset: Optional[FieldIntegerMinNegative2147483648Max2147483647] = None
    StylePassthrough: Optional[DvbSubtitleStylePassthrough] = None
    SubtitlingType: Optional[DvbSubtitlingType] = None
    TeletextSpacing: Optional[DvbSubtitleTeletextSpacing] = None
    Width: Optional[FieldIntegerMin1Max2147483647] = None
    XPosition: Optional[FieldIntegerMin0Max2147483647] = None
    YPosition: Optional[FieldIntegerMin0Max2147483647] = None


class DvbSubSourceSettings(BaseModel):
    Pid: Optional[FieldIntegerMin1Max2147483647] = None


class DvbTdtSettings(BaseModel):
    TdtInterval: Optional[FieldIntegerMin1000Max30000] = None


class Eac3AtmosSettings(BaseModel):
    Bitrate: Optional[FieldIntegerMin384000Max1024000] = None
    BitstreamMode: Optional[Eac3AtmosBitstreamMode] = None
    CodingMode: Optional[Eac3AtmosCodingMode] = None
    DialogueIntelligence: Optional[Eac3AtmosDialogueIntelligence] = None
    DownmixControl: Optional[Eac3AtmosDownmixControl] = None
    DynamicRangeCompressionLine: Optional[Eac3AtmosDynamicRangeCompressionLine] = None
    DynamicRangeCompressionRf: Optional[Eac3AtmosDynamicRangeCompressionRf] = None
    DynamicRangeControl: Optional[Eac3AtmosDynamicRangeControl] = None
    LoRoCenterMixLevel: Optional[FieldDoubleMinNegative6Max3] = None
    LoRoSurroundMixLevel: Optional[FieldDoubleMinNegative60MaxNegative1] = None
    LtRtCenterMixLevel: Optional[FieldDoubleMinNegative6Max3] = None
    LtRtSurroundMixLevel: Optional[FieldDoubleMinNegative60MaxNegative1] = None
    MeteringMode: Optional[Eac3AtmosMeteringMode] = None
    SampleRate: Optional[FieldIntegerMin48000Max48000] = None
    SpeechThreshold: Optional[FieldIntegerMin0Max100] = None
    StereoDownmix: Optional[Eac3AtmosStereoDownmix] = None
    SurroundExMode: Optional[Eac3AtmosSurroundExMode] = None


class Eac3Settings(BaseModel):
    AttenuationControl: Optional[Eac3AttenuationControl] = None
    Bitrate: Optional[FieldIntegerMin32000Max3024000] = None
    BitstreamMode: Optional[Eac3BitstreamMode] = None
    CodingMode: Optional[Eac3CodingMode] = None
    DcFilter: Optional[Eac3DcFilter] = None
    Dialnorm: Optional[FieldIntegerMin1Max31] = None
    DynamicRangeCompressionLine: Optional[Eac3DynamicRangeCompressionLine] = None
    DynamicRangeCompressionRf: Optional[Eac3DynamicRangeCompressionRf] = None
    LfeControl: Optional[Eac3LfeControl] = None
    LfeFilter: Optional[Eac3LfeFilter] = None
    LoRoCenterMixLevel: Optional[FieldDoubleMinNegative60Max3] = None
    LoRoSurroundMixLevel: Optional[FieldDoubleMinNegative60MaxNegative1] = None
    LtRtCenterMixLevel: Optional[FieldDoubleMinNegative60Max3] = None
    LtRtSurroundMixLevel: Optional[FieldDoubleMinNegative60MaxNegative1] = None
    MetadataControl: Optional[Eac3MetadataControl] = None
    PassthroughControl: Optional[Eac3PassthroughControl] = None
    PhaseControl: Optional[Eac3PhaseControl] = None
    SampleRate: Optional[FieldIntegerMin48000Max48000] = None
    StereoDownmix: Optional[Eac3StereoDownmix] = None
    SurroundExMode: Optional[Eac3SurroundExMode] = None
    SurroundMode: Optional[Eac3SurroundMode] = None


class EmbeddedDestinationSettings(BaseModel):
    Destination608ChannelNumber: Optional[FieldIntegerMin1Max4] = None
    Destination708ServiceNumber: Optional[FieldIntegerMin1Max6] = None


class EmbeddedSourceSettings(BaseModel):
    Convert608To708: Optional[EmbeddedConvert608To708] = None
    Source608ChannelNumber: Optional[FieldIntegerMin1Max4] = None
    Source608TrackNumber: Optional[FieldIntegerMin1Max1] = None
    TerminateCaptions: Optional[EmbeddedTerminateCaptions] = None


class Endpoint(BaseModel):
    Url: Optional[FieldString] = None


class EsamManifestConfirmConditionNotification(BaseModel):
    MccXml: Optional[FieldStringPatternSNManifestConfirmConditionNotificationNS] = None


class EsamSignalProcessingNotification(BaseModel):
    SccXml: Optional[FieldStringPatternSNSignalProcessingNotificationNS] = None


class ExtendedDataServices(BaseModel):
    CopyProtectionAction_1: Optional[CopyProtectionAction] = Field(
        None, alias='CopyProtectionAction'
    )
    VchipAction_1: Optional[VchipAction] = Field(None, alias='VchipAction')


class FileSourceSettings(BaseModel):
    Convert608To708: Optional[FileSourceConvert608To708] = None
    Framerate: Optional[CaptionSourceFramerate] = None
    SourceFile: Optional[
        FieldStringMin14PatternS3SccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTTHttpsSccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTT
    ] = None
    TimeDelta: Optional[FieldIntegerMinNegative2147483648Max2147483647] = None
    TimeDeltaUnits: Optional[FileSourceTimeDeltaUnits] = None


class ForceIncludeRenditionSize(BaseModel):
    Height: Optional[FieldIntegerMin32Max8192] = None
    Width: Optional[FieldIntegerMin32Max8192] = None


class FrameCaptureSettings(BaseModel):
    FramerateDenominator: Optional[FieldIntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[FieldIntegerMin1Max2147483647] = None
    MaxCaptures: Optional[FieldIntegerMin1Max10000000] = None
    Quality: Optional[FieldIntegerMin1Max100] = None


class GetPolicyResponse(BaseModel):
    Policy_1: Optional[Policy] = Field(None, alias='Policy')


class H264QvbrSettings(BaseModel):
    MaxAverageBitrate: Optional[FieldIntegerMin1000Max1152000000] = None
    QvbrQualityLevel: Optional[FieldIntegerMin1Max10] = None
    QvbrQualityLevelFineTune: Optional[FieldDoubleMin0Max1] = None


class H264Settings(BaseModel):
    AdaptiveQuantization: Optional[H264AdaptiveQuantization] = None
    BandwidthReductionFilter_1: Optional[BandwidthReductionFilter] = Field(
        None, alias='BandwidthReductionFilter'
    )
    Bitrate: Optional[FieldIntegerMin1000Max1152000000] = None
    CodecLevel: Optional[H264CodecLevel] = None
    CodecProfile: Optional[H264CodecProfile] = None
    DynamicSubGop: Optional[H264DynamicSubGop] = None
    EntropyEncoding: Optional[H264EntropyEncoding] = None
    FieldEncoding: Optional[H264FieldEncoding] = None
    FlickerAdaptiveQuantization: Optional[H264FlickerAdaptiveQuantization] = None
    FramerateControl: Optional[H264FramerateControl] = None
    FramerateConversionAlgorithm: Optional[H264FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[FieldIntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[FieldIntegerMin1Max2147483647] = None
    GopBReference: Optional[H264GopBReference] = None
    GopClosedCadence: Optional[FieldIntegerMin0Max2147483647] = None
    GopSize: Optional[FieldDoubleMin0] = None
    GopSizeUnits: Optional[H264GopSizeUnits] = None
    HrdBufferFinalFillPercentage: Optional[FieldIntegerMin0Max100] = None
    HrdBufferInitialFillPercentage: Optional[FieldIntegerMin0Max100] = None
    HrdBufferSize: Optional[FieldIntegerMin0Max1152000000] = None
    InterlaceMode: Optional[H264InterlaceMode] = None
    MaxBitrate: Optional[FieldIntegerMin1000Max1152000000] = None
    MinIInterval: Optional[FieldIntegerMin0Max30] = None
    NumberBFramesBetweenReferenceFrames: Optional[FieldIntegerMin0Max7] = None
    NumberReferenceFrames: Optional[FieldIntegerMin1Max6] = None
    ParControl: Optional[H264ParControl] = None
    ParDenominator: Optional[FieldIntegerMin1Max2147483647] = None
    ParNumerator: Optional[FieldIntegerMin1Max2147483647] = None
    QualityTuningLevel: Optional[H264QualityTuningLevel] = None
    QvbrSettings: Optional[H264QvbrSettings] = None
    RateControlMode: Optional[H264RateControlMode] = None
    RepeatPps: Optional[H264RepeatPps] = None
    ScanTypeConversionMode: Optional[H264ScanTypeConversionMode] = None
    SceneChangeDetect: Optional[H264SceneChangeDetect] = None
    Slices: Optional[FieldIntegerMin1Max32] = None
    SlowPal: Optional[H264SlowPal] = None
    Softness: Optional[FieldIntegerMin0Max128] = None
    SpatialAdaptiveQuantization: Optional[H264SpatialAdaptiveQuantization] = None
    Syntax: Optional[H264Syntax] = None
    Telecine: Optional[H264Telecine] = None
    TemporalAdaptiveQuantization: Optional[H264TemporalAdaptiveQuantization] = None
    UnregisteredSeiTimecode: Optional[H264UnregisteredSeiTimecode] = None


class H265QvbrSettings(BaseModel):
    MaxAverageBitrate: Optional[FieldIntegerMin1000Max1466400000] = None
    QvbrQualityLevel: Optional[FieldIntegerMin1Max10] = None
    QvbrQualityLevelFineTune: Optional[FieldDoubleMin0Max1] = None


class H265Settings(BaseModel):
    AdaptiveQuantization: Optional[H265AdaptiveQuantization] = None
    AlternateTransferFunctionSei: Optional[H265AlternateTransferFunctionSei] = None
    Bitrate: Optional[FieldIntegerMin1000Max1466400000] = None
    CodecLevel: Optional[H265CodecLevel] = None
    CodecProfile: Optional[H265CodecProfile] = None
    DynamicSubGop: Optional[H265DynamicSubGop] = None
    FlickerAdaptiveQuantization: Optional[H265FlickerAdaptiveQuantization] = None
    FramerateControl: Optional[H265FramerateControl] = None
    FramerateConversionAlgorithm: Optional[H265FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[FieldIntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[FieldIntegerMin1Max2147483647] = None
    GopBReference: Optional[H265GopBReference] = None
    GopClosedCadence: Optional[FieldIntegerMin0Max2147483647] = None
    GopSize: Optional[FieldDoubleMin0] = None
    GopSizeUnits: Optional[H265GopSizeUnits] = None
    HrdBufferFinalFillPercentage: Optional[FieldIntegerMin0Max100] = None
    HrdBufferInitialFillPercentage: Optional[FieldIntegerMin0Max100] = None
    HrdBufferSize: Optional[FieldIntegerMin0Max1466400000] = None
    InterlaceMode: Optional[H265InterlaceMode] = None
    MaxBitrate: Optional[FieldIntegerMin1000Max1466400000] = None
    MinIInterval: Optional[FieldIntegerMin0Max30] = None
    NumberBFramesBetweenReferenceFrames: Optional[FieldIntegerMin0Max7] = None
    NumberReferenceFrames: Optional[FieldIntegerMin1Max6] = None
    ParControl: Optional[H265ParControl] = None
    ParDenominator: Optional[FieldIntegerMin1Max2147483647] = None
    ParNumerator: Optional[FieldIntegerMin1Max2147483647] = None
    QualityTuningLevel: Optional[H265QualityTuningLevel] = None
    QvbrSettings: Optional[H265QvbrSettings] = None
    RateControlMode: Optional[H265RateControlMode] = None
    SampleAdaptiveOffsetFilterMode: Optional[H265SampleAdaptiveOffsetFilterMode] = None
    ScanTypeConversionMode: Optional[H265ScanTypeConversionMode] = None
    SceneChangeDetect: Optional[H265SceneChangeDetect] = None
    Slices: Optional[FieldIntegerMin1Max32] = None
    SlowPal: Optional[H265SlowPal] = None
    SpatialAdaptiveQuantization: Optional[H265SpatialAdaptiveQuantization] = None
    Telecine: Optional[H265Telecine] = None
    TemporalAdaptiveQuantization: Optional[H265TemporalAdaptiveQuantization] = None
    TemporalIds: Optional[H265TemporalIds] = None
    Tiles: Optional[H265Tiles] = None
    UnregisteredSeiTimecode: Optional[H265UnregisteredSeiTimecode] = None
    WriteMp4PackagingType: Optional[H265WriteMp4PackagingType] = None


class Hdr10Metadata(BaseModel):
    BluePrimaryX: Optional[FieldIntegerMin0Max50000] = None
    BluePrimaryY: Optional[FieldIntegerMin0Max50000] = None
    GreenPrimaryX: Optional[FieldIntegerMin0Max50000] = None
    GreenPrimaryY: Optional[FieldIntegerMin0Max50000] = None
    MaxContentLightLevel: Optional[FieldIntegerMin0Max65535] = None
    MaxFrameAverageLightLevel: Optional[FieldIntegerMin0Max65535] = None
    MaxLuminance: Optional[FieldIntegerMin0Max2147483647] = None
    MinLuminance: Optional[FieldIntegerMin0Max2147483647] = None
    RedPrimaryX: Optional[FieldIntegerMin0Max50000] = None
    RedPrimaryY: Optional[FieldIntegerMin0Max50000] = None
    WhitePointX: Optional[FieldIntegerMin0Max50000] = None
    WhitePointY: Optional[FieldIntegerMin0Max50000] = None


class Hdr10Plus(BaseModel):
    MasteringMonitorNits: Optional[FieldIntegerMin0Max4000] = None
    TargetMonitorNits: Optional[FieldIntegerMin0Max4000] = None


class HlsCaptionLanguageMapping(BaseModel):
    CaptionChannel: Optional[FieldIntegerMinNegative2147483648Max2147483647] = None
    CustomLanguageCode: Optional[FieldStringMin3Max3PatternAZaZ3] = None
    LanguageCode_1: Optional[LanguageCode] = Field(None, alias='LanguageCode')
    LanguageDescription: Optional[FieldString] = None


class HlsImageBasedTrickPlaySettings(BaseModel):
    IntervalCadence: Optional[HlsIntervalCadence] = None
    ThumbnailHeight: Optional[FieldIntegerMin2Max4096] = None
    ThumbnailInterval: Optional[FieldDoubleMin0Max2147483647] = None
    ThumbnailWidth: Optional[FieldIntegerMin8Max4096] = None
    TileHeight: Optional[FieldIntegerMin1Max2048] = None
    TileWidth: Optional[FieldIntegerMin1Max512] = None


class HlsRenditionGroupSettings(BaseModel):
    RenditionGroupId: Optional[FieldString] = None
    RenditionLanguageCode: Optional[LanguageCode] = None
    RenditionName: Optional[FieldString] = None


class HlsSettings(BaseModel):
    AudioGroupId: Optional[FieldString] = None
    AudioOnlyContainer: Optional[HlsAudioOnlyContainer] = None
    AudioRenditionSets: Optional[FieldString] = None
    AudioTrackType: Optional[HlsAudioTrackType] = None
    DescriptiveVideoServiceFlag: Optional[HlsDescriptiveVideoServiceFlag] = None
    IFrameOnlyManifest: Optional[HlsIFrameOnlyManifest] = None
    SegmentModifier: Optional[FieldString] = None


class HopDestination(BaseModel):
    Priority: Optional[FieldIntegerMinNegative50Max50] = None
    Queue: Optional[FieldString] = None
    WaitMinutes: Optional[FieldInteger] = None


class Id3Insertion(BaseModel):
    Id3: Optional[FieldStringPatternAZaZ0902] = None
    Timecode: Optional[FieldStringPattern010920405090509092] = None


class ImscDestinationSettings(BaseModel):
    Accessibility: Optional[ImscAccessibilitySubs] = None
    StylePassthrough: Optional[ImscStylePassthrough] = None


class InputClipping(BaseModel):
    EndTimecode: Optional[FieldStringPattern010920405090509092] = None
    StartTimecode: Optional[FieldStringPattern010920405090509092] = None


class InputDecryptionSettings(BaseModel):
    DecryptionMode_1: Optional[DecryptionMode] = Field(None, alias='DecryptionMode')
    EncryptedDecryptionKey: Optional[FieldStringMin24Max512PatternAZaZ0902] = None
    InitializationVector: Optional[FieldStringMin16Max24PatternAZaZ0922AZaZ0916] = None
    KmsKeyRegion: Optional[
        FieldStringMin9Max19PatternAZ26EastWestCentralNorthSouthEastWest1912
    ] = None


class InputVideoGenerator(BaseModel):
    Duration: Optional[FieldIntegerMin50Max86400000] = None


class InsertableImage(BaseModel):
    Duration: Optional[FieldIntegerMin0Max2147483647] = None
    FadeIn: Optional[FieldIntegerMin0Max2147483647] = None
    FadeOut: Optional[FieldIntegerMin0Max2147483647] = None
    Height: Optional[FieldIntegerMin0Max2147483647] = None
    ImageInserterInput: Optional[
        FieldStringMin14PatternS3BmpBMPPngPNGTgaTGAHttpsBmpBMPPngPNGTgaTGA
    ] = None
    ImageX: Optional[FieldIntegerMin0Max2147483647] = None
    ImageY: Optional[FieldIntegerMin0Max2147483647] = None
    Layer: Optional[FieldIntegerMin0Max99] = None
    Opacity: Optional[FieldIntegerMin0Max100] = None
    StartTime: Optional[FieldStringPattern01D20305D205D] = None
    Width: Optional[FieldIntegerMin0Max2147483647] = None


class KantarWatermarkSettings(BaseModel):
    ChannelName: Optional[FieldStringMin1Max20] = None
    ContentReference: Optional[FieldStringMin1Max50PatternAZAZ09] = None
    CredentialsSecretName: Optional[FieldStringMin1Max512PatternAZAZ09] = None
    FileOffset: Optional[FieldDoubleMin0] = None
    KantarLicenseId: Optional[FieldIntegerMin0Max2147483647] = None
    KantarServerUrl: Optional[FieldStringPatternHttpsKantarmediaCom] = None
    LogDestination: Optional[FieldStringPatternS3] = None
    Metadata3: Optional[FieldStringMin1Max50] = None
    Metadata4: Optional[FieldStringMin1Max50] = None
    Metadata5: Optional[FieldStringMin1Max50] = None
    Metadata6: Optional[FieldStringMin1Max50] = None
    Metadata7: Optional[FieldStringMin1Max50] = None
    Metadata8: Optional[FieldStringMin1Max50] = None


class M2tsScte35Esam(BaseModel):
    Scte35EsamPid: Optional[FieldIntegerMin32Max8182] = None


class M2tsSettings(BaseModel):
    AudioBufferModel: Optional[M2tsAudioBufferModel] = None
    AudioDuration: Optional[M2tsAudioDuration] = None
    AudioFramesPerPes: Optional[FieldIntegerMin0Max2147483647] = None
    AudioPids: Optional[FieldListOfIntegerMin32Max8182] = None
    Bitrate: Optional[FieldIntegerMin0Max2147483647] = None
    BufferModel: Optional[M2tsBufferModel] = None
    DataPTSControl: Optional[M2tsDataPtsControl] = None
    DvbNitSettings_1: Optional[DvbNitSettings] = Field(None, alias='DvbNitSettings')
    DvbSdtSettings_1: Optional[DvbSdtSettings] = Field(None, alias='DvbSdtSettings')
    DvbSubPids: Optional[FieldListOfIntegerMin32Max8182] = None
    DvbTdtSettings_1: Optional[DvbTdtSettings] = Field(None, alias='DvbTdtSettings')
    DvbTeletextPid: Optional[FieldIntegerMin32Max8182] = None
    EbpAudioInterval: Optional[M2tsEbpAudioInterval] = None
    EbpPlacement: Optional[M2tsEbpPlacement] = None
    EsRateInPes: Optional[M2tsEsRateInPes] = None
    ForceTsVideoEbpOrder: Optional[M2tsForceTsVideoEbpOrder] = None
    FragmentTime: Optional[FieldDoubleMin0] = None
    KlvMetadata: Optional[M2tsKlvMetadata] = None
    MaxPcrInterval: Optional[FieldIntegerMin0Max500] = None
    MinEbpInterval: Optional[FieldIntegerMin0Max10000] = None
    NielsenId3: Optional[M2tsNielsenId3] = None
    NullPacketBitrate: Optional[FieldDoubleMin0] = None
    PatInterval: Optional[FieldIntegerMin0Max1000] = None
    PcrControl: Optional[M2tsPcrControl] = None
    PcrPid: Optional[FieldIntegerMin32Max8182] = None
    PmtInterval: Optional[FieldIntegerMin0Max1000] = None
    PmtPid: Optional[FieldIntegerMin32Max8182] = None
    PrivateMetadataPid: Optional[FieldIntegerMin32Max8182] = None
    ProgramNumber: Optional[FieldIntegerMin0Max65535] = None
    RateMode: Optional[M2tsRateMode] = None
    Scte35Esam: Optional[M2tsScte35Esam] = None
    Scte35Pid: Optional[FieldIntegerMin32Max8182] = None
    Scte35Source: Optional[M2tsScte35Source] = None
    SegmentationMarkers: Optional[M2tsSegmentationMarkers] = None
    SegmentationStyle: Optional[M2tsSegmentationStyle] = None
    SegmentationTime: Optional[FieldDoubleMin0] = None
    TimedMetadataPid: Optional[FieldIntegerMin32Max8182] = None
    TransportStreamId: Optional[FieldIntegerMin0Max65535] = None
    VideoPid: Optional[FieldIntegerMin32Max8182] = None


class M3u8Settings(BaseModel):
    AudioDuration: Optional[M3u8AudioDuration] = None
    AudioFramesPerPes: Optional[FieldIntegerMin0Max2147483647] = None
    AudioPids: Optional[FieldListOfIntegerMin32Max8182] = None
    DataPTSControl: Optional[M3u8DataPtsControl] = None
    MaxPcrInterval: Optional[FieldIntegerMin0Max500] = None
    NielsenId3: Optional[M3u8NielsenId3] = None
    PatInterval: Optional[FieldIntegerMin0Max1000] = None
    PcrControl: Optional[M3u8PcrControl] = None
    PcrPid: Optional[FieldIntegerMin32Max8182] = None
    PmtInterval: Optional[FieldIntegerMin0Max1000] = None
    PmtPid: Optional[FieldIntegerMin32Max8182] = None
    PrivateMetadataPid: Optional[FieldIntegerMin32Max8182] = None
    ProgramNumber: Optional[FieldIntegerMin0Max65535] = None
    Scte35Pid: Optional[FieldIntegerMin32Max8182] = None
    Scte35Source: Optional[M3u8Scte35Source] = None
    TimedMetadata_1: Optional[TimedMetadata] = Field(None, alias='TimedMetadata')
    TimedMetadataPid: Optional[FieldIntegerMin32Max8182] = None
    TransportStreamId: Optional[FieldIntegerMin0Max65535] = None
    VideoPid: Optional[FieldIntegerMin32Max8182] = None


class MinBottomRenditionSize(BaseModel):
    Height: Optional[FieldIntegerMin32Max8192] = None
    Width: Optional[FieldIntegerMin32Max8192] = None


class MinTopRenditionSize(BaseModel):
    Height: Optional[FieldIntegerMin32Max8192] = None
    Width: Optional[FieldIntegerMin32Max8192] = None


class MotionImageInsertionFramerate(BaseModel):
    FramerateDenominator: Optional[FieldIntegerMin1Max17895697] = None
    FramerateNumerator: Optional[FieldIntegerMin1Max2147483640] = None


class MotionImageInsertionOffset(BaseModel):
    ImageX: Optional[FieldIntegerMin0Max2147483647] = None
    ImageY: Optional[FieldIntegerMin0Max2147483647] = None


class Mp2Settings(BaseModel):
    Bitrate: Optional[FieldIntegerMin32000Max384000] = None
    Channels: Optional[FieldIntegerMin1Max2] = None
    SampleRate: Optional[FieldIntegerMin32000Max48000] = None


class Mp3Settings(BaseModel):
    Bitrate: Optional[FieldIntegerMin16000Max320000] = None
    Channels: Optional[FieldIntegerMin1Max2] = None
    RateControlMode: Optional[Mp3RateControlMode] = None
    SampleRate: Optional[FieldIntegerMin22050Max48000] = None
    VbrQuality: Optional[FieldIntegerMin0Max9] = None


class Mp4Settings(BaseModel):
    AudioDuration: Optional[CmfcAudioDuration] = None
    CslgAtom: Optional[Mp4CslgAtom] = None
    CttsVersion: Optional[FieldIntegerMin0Max1] = None
    FreeSpaceBox: Optional[Mp4FreeSpaceBox] = None
    MoovPlacement: Optional[Mp4MoovPlacement] = None
    Mp4MajorBrand: Optional[FieldString] = None


class MpdSettings(BaseModel):
    AccessibilityCaptionHints: Optional[MpdAccessibilityCaptionHints] = None
    AudioDuration: Optional[MpdAudioDuration] = None
    CaptionContainerType: Optional[MpdCaptionContainerType] = None
    KlvMetadata: Optional[MpdKlvMetadata] = None
    ManifestMetadataSignaling: Optional[MpdManifestMetadataSignaling] = None
    Scte35Esam: Optional[MpdScte35Esam] = None
    Scte35Source: Optional[MpdScte35Source] = None
    TimedMetadata: Optional[MpdTimedMetadata] = None
    TimedMetadataBoxVersion: Optional[MpdTimedMetadataBoxVersion] = None
    TimedMetadataSchemeIdUri: Optional[FieldStringMax1000] = None
    TimedMetadataValue: Optional[FieldStringMax1000] = None


class Mpeg2Settings(BaseModel):
    AdaptiveQuantization: Optional[Mpeg2AdaptiveQuantization] = None
    Bitrate: Optional[FieldIntegerMin1000Max288000000] = None
    CodecLevel: Optional[Mpeg2CodecLevel] = None
    CodecProfile: Optional[Mpeg2CodecProfile] = None
    DynamicSubGop: Optional[Mpeg2DynamicSubGop] = None
    FramerateControl: Optional[Mpeg2FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Mpeg2FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[FieldIntegerMin1Max1001] = None
    FramerateNumerator: Optional[FieldIntegerMin24Max60000] = None
    GopClosedCadence: Optional[FieldIntegerMin0Max2147483647] = None
    GopSize: Optional[FieldDoubleMin0] = None
    GopSizeUnits: Optional[Mpeg2GopSizeUnits] = None
    HrdBufferFinalFillPercentage: Optional[FieldIntegerMin0Max100] = None
    HrdBufferInitialFillPercentage: Optional[FieldIntegerMin0Max100] = None
    HrdBufferSize: Optional[FieldIntegerMin0Max47185920] = None
    InterlaceMode: Optional[Mpeg2InterlaceMode] = None
    IntraDcPrecision: Optional[Mpeg2IntraDcPrecision] = None
    MaxBitrate: Optional[FieldIntegerMin1000Max300000000] = None
    MinIInterval: Optional[FieldIntegerMin0Max30] = None
    NumberBFramesBetweenReferenceFrames: Optional[FieldIntegerMin0Max7] = None
    ParControl: Optional[Mpeg2ParControl] = None
    ParDenominator: Optional[FieldIntegerMin1Max2147483647] = None
    ParNumerator: Optional[FieldIntegerMin1Max2147483647] = None
    QualityTuningLevel: Optional[Mpeg2QualityTuningLevel] = None
    RateControlMode: Optional[Mpeg2RateControlMode] = None
    ScanTypeConversionMode: Optional[Mpeg2ScanTypeConversionMode] = None
    SceneChangeDetect: Optional[Mpeg2SceneChangeDetect] = None
    SlowPal: Optional[Mpeg2SlowPal] = None
    Softness: Optional[FieldIntegerMin0Max128] = None
    SpatialAdaptiveQuantization: Optional[Mpeg2SpatialAdaptiveQuantization] = None
    Syntax: Optional[Mpeg2Syntax] = None
    Telecine: Optional[Mpeg2Telecine] = None
    TemporalAdaptiveQuantization: Optional[Mpeg2TemporalAdaptiveQuantization] = None


class MxfXavcProfileSettings(BaseModel):
    DurationMode: Optional[MxfXavcDurationMode] = None
    MaxAncDataSize: Optional[FieldIntegerMin0Max2147483647] = None


class NexGuardFileMarkerSettings(BaseModel):
    License: Optional[FieldStringMin1Max100000] = None
    Payload: Optional[FieldIntegerMin0Max4194303] = None
    Preset: Optional[FieldStringMin1Max256] = None
    Strength: Optional[WatermarkingStrength] = None


class NielsenConfiguration(BaseModel):
    BreakoutCode: Optional[FieldIntegerMin0Max0] = None
    DistributorId: Optional[FieldString] = None


class NielsenNonLinearWatermarkSettings(BaseModel):
    ActiveWatermarkProcess: Optional[NielsenActiveWatermarkProcessType] = None
    AdiFilename: Optional[FieldStringPatternS3] = None
    AssetId: Optional[FieldStringMin1Max20] = None
    AssetName: Optional[FieldStringMin1Max50] = None
    CbetSourceId: Optional[FieldStringPattern0xAFaF0908190908] = None
    EpisodeId: Optional[FieldStringMin1Max20] = None
    MetadataDestination: Optional[FieldStringPatternS3] = None
    SourceId: Optional[FieldIntegerMin0Max65534] = None
    SourceWatermarkStatus: Optional[NielsenSourceWatermarkStatusType] = None
    TicServerUrl: Optional[FieldStringPatternHttps] = None
    UniqueTicPerAudioTrack: Optional[NielsenUniqueTicPerAudioTrackType] = None


class NoiseReducerFilterSettings(BaseModel):
    Strength: Optional[FieldIntegerMin0Max3] = None


class NoiseReducerSpatialFilterSettings(BaseModel):
    PostFilterSharpenStrength: Optional[FieldIntegerMin0Max3] = None
    Speed: Optional[FieldIntegerMinNegative2Max3] = None
    Strength: Optional[FieldIntegerMin0Max16] = None


class NoiseReducerTemporalFilterSettings(BaseModel):
    AggressiveMode: Optional[FieldIntegerMin0Max4] = None
    PostTemporalSharpening: Optional[NoiseFilterPostTemporalSharpening] = None
    PostTemporalSharpeningStrength: Optional[
        NoiseFilterPostTemporalSharpeningStrength
    ] = None
    Speed: Optional[FieldIntegerMinNegative1Max3] = None
    Strength: Optional[FieldIntegerMin0Max16] = None


class OpusSettings(BaseModel):
    Bitrate: Optional[FieldIntegerMin32000Max192000] = None
    Channels: Optional[FieldIntegerMin1Max2] = None
    SampleRate: Optional[FieldIntegerMin16000Max48000] = None


class OutputChannelMapping(BaseModel):
    InputChannels: Optional[FieldListOfIntegerMinNegative60Max6] = None
    InputChannelsFineTune: Optional[FieldListOfDoubleMinNegative60Max6] = None


class OutputSettings(BaseModel):
    HlsSettings_1: Optional[HlsSettings] = Field(None, alias='HlsSettings')


class PartnerWatermarking(BaseModel):
    NexguardFileMarkerSettings: Optional[NexGuardFileMarkerSettings] = None


class ProresSettings(BaseModel):
    ChromaSampling: Optional[ProresChromaSampling] = None
    CodecProfile: Optional[ProresCodecProfile] = None
    FramerateControl: Optional[ProresFramerateControl] = None
    FramerateConversionAlgorithm: Optional[ProresFramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[FieldIntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[FieldIntegerMin1Max2147483647] = None
    InterlaceMode: Optional[ProresInterlaceMode] = None
    ParControl: Optional[ProresParControl] = None
    ParDenominator: Optional[FieldIntegerMin1Max2147483647] = None
    ParNumerator: Optional[FieldIntegerMin1Max2147483647] = None
    ScanTypeConversionMode: Optional[ProresScanTypeConversionMode] = None
    SlowPal: Optional[ProresSlowPal] = None
    Telecine: Optional[ProresTelecine] = None


class QueueTransition(BaseModel):
    DestinationQueue: Optional[FieldString] = None
    SourceQueue: Optional[FieldString] = None
    Timestamp: Optional[FieldTimestampUnix] = None


class Rectangle(BaseModel):
    Height: Optional[FieldIntegerMin2Max2147483647] = None
    Width: Optional[FieldIntegerMin2Max2147483647] = None
    X: Optional[FieldIntegerMin0Max2147483647] = None
    Y: Optional[FieldIntegerMin0Max2147483647] = None


class ReservationPlan(BaseModel):
    Commitment_1: Optional[Commitment] = Field(None, alias='Commitment')
    ExpiresAt: Optional[FieldTimestampUnix] = None
    PurchasedAt: Optional[FieldTimestampUnix] = None
    RenewalType_1: Optional[RenewalType] = Field(None, alias='RenewalType')
    ReservedSlots: Optional[FieldInteger] = None
    Status: Optional[ReservationPlanStatus] = None


class ReservationPlanSettings(BaseModel):
    Commitment_1: Commitment = Field(..., alias='Commitment')
    RenewalType_1: RenewalType = Field(..., alias='RenewalType')
    ReservedSlots: FieldInteger


class S3DestinationAccessControl(BaseModel):
    CannedAcl: Optional[S3ObjectCannedAcl] = None


class S3EncryptionSettings(BaseModel):
    EncryptionType: Optional[S3ServerSideEncryptionType] = None
    KmsEncryptionContext: Optional[FieldStringPatternAZaZ0902] = None
    KmsKeyArn: Optional[
        FieldStringPatternArnAwsUsGovCnKmsAZ26EastWestCentralNorthSouthEastWest1912D12KeyAFAF098AFAF094AFAF094AFAF094AFAF0912MrkAFAF0932
    ] = None


class SrtDestinationSettings(BaseModel):
    StylePassthrough: Optional[SrtStylePassthrough] = None


class StaticKeyProvider(BaseModel):
    KeyFormat: Optional[FieldStringPatternIdentityAZaZ26AZaZ09163] = None
    KeyFormatVersions: Optional[FieldStringPatternDD] = None
    StaticKeyValue: Optional[FieldStringPatternAZaZ0932] = None
    Url: Optional[FieldString] = None


class TeletextDestinationSettings(BaseModel):
    PageNumber: Optional[FieldStringMin3Max3Pattern1809aFAF09aEAE] = None
    PageTypes: Optional[FieldListOfTeletextPageType] = None


class TeletextSourceSettings(BaseModel):
    PageNumber: Optional[FieldStringMin3Max3Pattern1809aFAF09aEAE] = None


class TimecodeBurnin(BaseModel):
    FontSize: Optional[FieldIntegerMin10Max48] = None
    Position: Optional[TimecodeBurninPosition] = None
    Prefix: Optional[FieldStringPattern] = None


class TimecodeConfig(BaseModel):
    Anchor: Optional[FieldStringPattern010920405090509092] = None
    Source: Optional[TimecodeSource] = None
    Start: Optional[FieldStringPattern010920405090509092] = None
    TimestampOffset: Optional[FieldStringPattern0940191020191209301] = None


class Timing(BaseModel):
    FinishTime: Optional[FieldTimestampUnix] = None
    StartTime: Optional[FieldTimestampUnix] = None
    SubmitTime: Optional[FieldTimestampUnix] = None


class TrackSourceSettings(BaseModel):
    TrackNumber: Optional[FieldIntegerMin1Max2147483647] = None


class TtmlDestinationSettings(BaseModel):
    StylePassthrough: Optional[TtmlStylePassthrough] = None


class UpdateQueueRequest(BaseModel):
    Description: Optional[FieldString] = None
    ReservationPlanSettings_1: Optional[ReservationPlanSettings] = Field(
        None, alias='ReservationPlanSettings'
    )
    Status: Optional[QueueStatus] = None


class Vc3Settings(BaseModel):
    FramerateControl: Optional[Vc3FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Vc3FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[FieldIntegerMin1Max1001] = None
    FramerateNumerator: Optional[FieldIntegerMin24Max60000] = None
    InterlaceMode: Optional[Vc3InterlaceMode] = None
    ScanTypeConversionMode: Optional[Vc3ScanTypeConversionMode] = None
    SlowPal: Optional[Vc3SlowPal] = None
    Telecine: Optional[Vc3Telecine] = None
    Vc3Class_1: Optional[Vc3Class] = Field(None, alias='Vc3Class')


class VideoDetail(BaseModel):
    HeightInPx: Optional[FieldInteger] = None
    WidthInPx: Optional[FieldInteger] = None


class VideoSelector(BaseModel):
    AlphaBehavior_1: Optional[AlphaBehavior] = Field(None, alias='AlphaBehavior')
    ColorSpace_1: Optional[ColorSpace] = Field(None, alias='ColorSpace')
    ColorSpaceUsage_1: Optional[ColorSpaceUsage] = Field(None, alias='ColorSpaceUsage')
    EmbeddedTimecodeOverride_1: Optional[EmbeddedTimecodeOverride] = Field(
        None, alias='EmbeddedTimecodeOverride'
    )
    Hdr10Metadata_1: Optional[Hdr10Metadata] = Field(None, alias='Hdr10Metadata')
    PadVideo_1: Optional[PadVideo] = Field(None, alias='PadVideo')
    Pid: Optional[FieldIntegerMin1Max2147483647] = None
    ProgramNumber: Optional[FieldIntegerMinNegative2147483648Max2147483647] = None
    Rotate: Optional[InputRotate] = None
    SampleRange: Optional[InputSampleRange] = None


class VorbisSettings(BaseModel):
    Channels: Optional[FieldIntegerMin1Max2] = None
    SampleRate: Optional[FieldIntegerMin22050Max48000] = None
    VbrQuality: Optional[FieldIntegerMinNegative1Max10] = None


class Vp8Settings(BaseModel):
    Bitrate: Optional[FieldIntegerMin1000Max1152000000] = None
    FramerateControl: Optional[Vp8FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Vp8FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[FieldIntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[FieldIntegerMin1Max2147483647] = None
    GopSize: Optional[FieldDoubleMin0] = None
    HrdBufferSize: Optional[FieldIntegerMin0Max47185920] = None
    MaxBitrate: Optional[FieldIntegerMin1000Max1152000000] = None
    ParControl: Optional[Vp8ParControl] = None
    ParDenominator: Optional[FieldIntegerMin1Max2147483647] = None
    ParNumerator: Optional[FieldIntegerMin1Max2147483647] = None
    QualityTuningLevel: Optional[Vp8QualityTuningLevel] = None
    RateControlMode: Optional[Vp8RateControlMode] = None


class Vp9Settings(BaseModel):
    Bitrate: Optional[FieldIntegerMin1000Max480000000] = None
    FramerateControl: Optional[Vp9FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Vp9FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[FieldIntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[FieldIntegerMin1Max2147483647] = None
    GopSize: Optional[FieldDoubleMin0] = None
    HrdBufferSize: Optional[FieldIntegerMin0Max47185920] = None
    MaxBitrate: Optional[FieldIntegerMin1000Max480000000] = None
    ParControl: Optional[Vp9ParControl] = None
    ParDenominator: Optional[FieldIntegerMin1Max2147483647] = None
    ParNumerator: Optional[FieldIntegerMin1Max2147483647] = None
    QualityTuningLevel: Optional[Vp9QualityTuningLevel] = None
    RateControlMode: Optional[Vp9RateControlMode] = None


class WarningGroup(BaseModel):
    Code: FieldInteger
    Count: FieldInteger


class WavSettings(BaseModel):
    BitDepth: Optional[FieldIntegerMin16Max24] = None
    Channels: Optional[FieldIntegerMin1Max64] = None
    Format: Optional[WavFormat] = None
    SampleRate: Optional[FieldIntegerMin8000Max192000] = None


class WebvttDestinationSettings(BaseModel):
    Accessibility: Optional[WebvttAccessibilitySubs] = None
    StylePassthrough: Optional[WebvttStylePassthrough] = None


class WebvttHlsSourceSettings(BaseModel):
    RenditionGroupId: Optional[FieldString] = None
    RenditionLanguageCode: Optional[LanguageCode] = None
    RenditionName: Optional[FieldString] = None


class Xavc4kProfileSettings(BaseModel):
    BitrateClass: Optional[Xavc4kProfileBitrateClass] = None
    CodecProfile: Optional[Xavc4kProfileCodecProfile] = None
    FlickerAdaptiveQuantization: Optional[XavcFlickerAdaptiveQuantization] = None
    GopBReference: Optional[XavcGopBReference] = None
    GopClosedCadence: Optional[FieldIntegerMin0Max2147483647] = None
    HrdBufferSize: Optional[FieldIntegerMin0Max1152000000] = None
    QualityTuningLevel: Optional[Xavc4kProfileQualityTuningLevel] = None
    Slices: Optional[FieldIntegerMin8Max12] = None


class XavcHdProfileSettings(BaseModel):
    BitrateClass: Optional[XavcHdProfileBitrateClass] = None
    FlickerAdaptiveQuantization: Optional[XavcFlickerAdaptiveQuantization] = None
    GopBReference: Optional[XavcGopBReference] = None
    GopClosedCadence: Optional[FieldIntegerMin0Max2147483647] = None
    HrdBufferSize: Optional[FieldIntegerMin0Max1152000000] = None
    InterlaceMode: Optional[XavcInterlaceMode] = None
    QualityTuningLevel: Optional[XavcHdProfileQualityTuningLevel] = None
    Slices: Optional[FieldIntegerMin4Max12] = None
    Telecine: Optional[XavcHdProfileTelecine] = None


class XavcSettings(BaseModel):
    AdaptiveQuantization: Optional[XavcAdaptiveQuantization] = None
    EntropyEncoding: Optional[XavcEntropyEncoding] = None
    FramerateControl: Optional[XavcFramerateControl] = None
    FramerateConversionAlgorithm: Optional[XavcFramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[FieldIntegerMin1Max1001] = None
    FramerateNumerator: Optional[FieldIntegerMin24Max60000] = None
    Profile: Optional[XavcProfile] = None
    SlowPal: Optional[XavcSlowPal] = None
    Softness: Optional[FieldIntegerMin0Max128] = None
    SpatialAdaptiveQuantization: Optional[XavcSpatialAdaptiveQuantization] = None
    TemporalAdaptiveQuantization: Optional[XavcTemporalAdaptiveQuantization] = None
    Xavc4kIntraCbgProfileSettings_1: Optional[Xavc4kIntraCbgProfileSettings] = Field(
        None, alias='Xavc4kIntraCbgProfileSettings'
    )
    Xavc4kIntraVbrProfileSettings_1: Optional[Xavc4kIntraVbrProfileSettings] = Field(
        None, alias='Xavc4kIntraVbrProfileSettings'
    )
    Xavc4kProfileSettings_1: Optional[Xavc4kProfileSettings] = Field(
        None, alias='Xavc4kProfileSettings'
    )
    XavcHdIntraCbgProfileSettings_1: Optional[XavcHdIntraCbgProfileSettings] = Field(
        None, alias='XavcHdIntraCbgProfileSettings'
    )
    XavcHdProfileSettings_1: Optional[XavcHdProfileSettings] = Field(
        None, alias='XavcHdProfileSettings'
    )


class FieldListOfAllowedRenditionSize(RootModel[List[AllowedRenditionSize]]):
    root: List[AllowedRenditionSize]


class FieldListOfEndpoint(RootModel[List[Endpoint]]):
    root: List[Endpoint]


class FieldListOfForceIncludeRenditionSize(RootModel[List[ForceIncludeRenditionSize]]):
    root: List[ForceIncludeRenditionSize]


class FieldListOfHlsCaptionLanguageMapping(RootModel[List[HlsCaptionLanguageMapping]]):
    root: List[HlsCaptionLanguageMapping]


class FieldListOfHopDestination(RootModel[List[HopDestination]]):
    root: List[HopDestination]


class FieldListOfId3Insertion(RootModel[List[Id3Insertion]]):
    root: List[Id3Insertion]


class FieldListOfInputClipping(RootModel[List[InputClipping]]):
    root: List[InputClipping]


class FieldListOfInsertableImage(RootModel[List[InsertableImage]]):
    root: List[InsertableImage]


class FieldListOfOutputChannelMapping(RootModel[List[OutputChannelMapping]]):
    root: List[OutputChannelMapping]


class FieldListOfQueueTransition(RootModel[List[QueueTransition]]):
    root: List[QueueTransition]


class FieldListOfWarningGroup(RootModel[List[WarningGroup]]):
    root: List[WarningGroup]


class FieldListOfString(RootModel[List[FieldString]]):
    root: List[FieldString]


class FieldListOfStringMin1(RootModel[List[FieldStringMin1]]):
    root: List[FieldStringMin1]


class FieldListOfStringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12(
    RootModel[List[FieldStringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12]]
):
    root: List[FieldStringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12]


class FieldListOfStringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12(
    RootModel[List[FieldStringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12]]
):
    root: List[FieldStringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12]


class FieldListOfStringPatternS3ASSETMAPXml(
    RootModel[List[FieldStringPatternS3ASSETMAPXml]]
):
    root: List[FieldStringPatternS3ASSETMAPXml]


class FieldMapOfString(RootModel[Optional[Dict[str, FieldString]]]):
    root: Optional[Dict[str, FieldString]] = None


class AudioCodecSettings(BaseModel):
    AacSettings_1: Optional[AacSettings] = Field(None, alias='AacSettings')
    Ac3Settings_1: Optional[Ac3Settings] = Field(None, alias='Ac3Settings')
    AiffSettings_1: Optional[AiffSettings] = Field(None, alias='AiffSettings')
    Codec: Optional[AudioCodec] = None
    Eac3AtmosSettings_1: Optional[Eac3AtmosSettings] = Field(
        None, alias='Eac3AtmosSettings'
    )
    Eac3Settings_1: Optional[Eac3Settings] = Field(None, alias='Eac3Settings')
    Mp2Settings_1: Optional[Mp2Settings] = Field(None, alias='Mp2Settings')
    Mp3Settings_1: Optional[Mp3Settings] = Field(None, alias='Mp3Settings')
    OpusSettings_1: Optional[OpusSettings] = Field(None, alias='OpusSettings')
    VorbisSettings_1: Optional[VorbisSettings] = Field(None, alias='VorbisSettings')
    WavSettings_1: Optional[WavSettings] = Field(None, alias='WavSettings')


class AudioSelectorGroup(BaseModel):
    AudioSelectorNames: Optional[FieldListOfStringMin1] = None


class AutomatedAbrRule(BaseModel):
    AllowedRenditions: Optional[FieldListOfAllowedRenditionSize] = None
    ForceIncludeRenditions: Optional[FieldListOfForceIncludeRenditionSize] = None
    MinBottomRenditionSize_1: Optional[MinBottomRenditionSize] = Field(
        None, alias='MinBottomRenditionSize'
    )
    MinTopRenditionSize_1: Optional[MinTopRenditionSize] = Field(
        None, alias='MinTopRenditionSize'
    )
    Type: Optional[RuleType] = None


class CaptionDestinationSettings(BaseModel):
    BurninDestinationSettings_1: Optional[BurninDestinationSettings] = Field(
        None, alias='BurninDestinationSettings'
    )
    DestinationType: Optional[CaptionDestinationType] = None
    DvbSubDestinationSettings_1: Optional[DvbSubDestinationSettings] = Field(
        None, alias='DvbSubDestinationSettings'
    )
    EmbeddedDestinationSettings_1: Optional[EmbeddedDestinationSettings] = Field(
        None, alias='EmbeddedDestinationSettings'
    )
    ImscDestinationSettings_1: Optional[ImscDestinationSettings] = Field(
        None, alias='ImscDestinationSettings'
    )
    SccDestinationSettings_1: Optional[SccDestinationSettings] = Field(
        None, alias='SccDestinationSettings'
    )
    SrtDestinationSettings_1: Optional[SrtDestinationSettings] = Field(
        None, alias='SrtDestinationSettings'
    )
    TeletextDestinationSettings_1: Optional[TeletextDestinationSettings] = Field(
        None, alias='TeletextDestinationSettings'
    )
    TtmlDestinationSettings_1: Optional[TtmlDestinationSettings] = Field(
        None, alias='TtmlDestinationSettings'
    )
    WebvttDestinationSettings_1: Optional[WebvttDestinationSettings] = Field(
        None, alias='WebvttDestinationSettings'
    )


class CaptionSourceSettings(BaseModel):
    AncillarySourceSettings_1: Optional[AncillarySourceSettings] = Field(
        None, alias='AncillarySourceSettings'
    )
    DvbSubSourceSettings_1: Optional[DvbSubSourceSettings] = Field(
        None, alias='DvbSubSourceSettings'
    )
    EmbeddedSourceSettings_1: Optional[EmbeddedSourceSettings] = Field(
        None, alias='EmbeddedSourceSettings'
    )
    FileSourceSettings_1: Optional[FileSourceSettings] = Field(
        None, alias='FileSourceSettings'
    )
    SourceType: Optional[CaptionSourceType] = None
    TeletextSourceSettings_1: Optional[TeletextSourceSettings] = Field(
        None, alias='TeletextSourceSettings'
    )
    TrackSourceSettings_1: Optional[TrackSourceSettings] = Field(
        None, alias='TrackSourceSettings'
    )
    WebvttHlsSourceSettings_1: Optional[WebvttHlsSourceSettings] = Field(
        None, alias='WebvttHlsSourceSettings'
    )


class ChannelMapping(BaseModel):
    OutputChannels: Optional[FieldListOfOutputChannelMapping] = None


class CmafAdditionalManifest(BaseModel):
    ManifestNameModifier: Optional[FieldStringMin1] = None
    SelectedOutputs: Optional[FieldListOfStringMin1] = None


class ColorCorrector(BaseModel):
    Brightness: Optional[FieldIntegerMin1Max100] = None
    ClipLimits_1: Optional[ClipLimits] = Field(None, alias='ClipLimits')
    ColorSpaceConversion_1: Optional[ColorSpaceConversion] = Field(
        None, alias='ColorSpaceConversion'
    )
    Contrast: Optional[FieldIntegerMin1Max100] = None
    Hdr10Metadata_1: Optional[Hdr10Metadata] = Field(None, alias='Hdr10Metadata')
    HdrToSdrToneMapper: Optional[HDRToSDRToneMapper] = None
    Hue: Optional[FieldIntegerMinNegative180Max180] = None
    SampleRangeConversion_1: Optional[SampleRangeConversion] = Field(
        None, alias='SampleRangeConversion'
    )
    Saturation: Optional[FieldIntegerMin1Max100] = None
    SdrReferenceWhiteLevel: Optional[FieldIntegerMin100Max1000] = None


class CreateQueueRequest(BaseModel):
    Description: Optional[FieldString] = None
    Name: FieldString
    PricingPlan_1: Optional[PricingPlan] = Field(None, alias='PricingPlan')
    ReservationPlanSettings_1: Optional[ReservationPlanSettings] = Field(
        None, alias='ReservationPlanSettings'
    )
    Status: Optional[QueueStatus] = None
    Tags: Optional[FieldMapOfString] = None


class DashAdditionalManifest(BaseModel):
    ManifestNameModifier: Optional[FieldStringMin1] = None
    SelectedOutputs: Optional[FieldListOfStringMin1] = None


class DescribeEndpointsResponse(BaseModel):
    Endpoints: Optional[FieldListOfEndpoint] = None
    NextToken: Optional[FieldString] = None


class DolbyVision(BaseModel):
    L6Metadata: Optional[DolbyVisionLevel6Metadata] = None
    L6Mode: Optional[DolbyVisionLevel6Mode] = None
    Mapping: Optional[DolbyVisionMapping] = None
    Profile: Optional[DolbyVisionProfile] = None


class EsamSettings(BaseModel):
    ManifestConfirmConditionNotification: Optional[
        EsamManifestConfirmConditionNotification
    ] = None
    ResponseSignalPreroll: Optional[FieldIntegerMin0Max30000] = None
    SignalProcessingNotification: Optional[EsamSignalProcessingNotification] = None


class HlsAdditionalManifest(BaseModel):
    ManifestNameModifier: Optional[FieldStringMin1] = None
    SelectedOutputs: Optional[FieldListOfStringMin1] = None


class ImageInserter(BaseModel):
    InsertableImages: Optional[FieldListOfInsertableImage] = None
    SdrReferenceWhiteLevel: Optional[FieldIntegerMin100Max1000] = None


class JobMessages(BaseModel):
    Info: Optional[FieldListOfString] = None
    Warning: Optional[FieldListOfString] = None


class MotionImageInserter(BaseModel):
    Framerate: Optional[MotionImageInsertionFramerate] = None
    Input: Optional[FieldStringMin14PatternS3Mov09PngHttpsMov09Png] = None
    InsertionMode: Optional[MotionImageInsertionMode] = None
    Offset: Optional[MotionImageInsertionOffset] = None
    Playback: Optional[MotionImagePlayback] = None
    StartTime: Optional[FieldStringMin11Max11Pattern01D20305D205D] = None


class MsSmoothAdditionalManifest(BaseModel):
    ManifestNameModifier: Optional[FieldStringMin1] = None
    SelectedOutputs: Optional[FieldListOfStringMin1] = None


class MxfSettings(BaseModel):
    AfdSignaling: Optional[MxfAfdSignaling] = None
    Profile: Optional[MxfProfile] = None
    XavcProfileSettings: Optional[MxfXavcProfileSettings] = None


class NoiseReducer(BaseModel):
    Filter: Optional[NoiseReducerFilter] = None
    FilterSettings: Optional[NoiseReducerFilterSettings] = None
    SpatialFilterSettings: Optional[NoiseReducerSpatialFilterSettings] = None
    TemporalFilterSettings: Optional[NoiseReducerTemporalFilterSettings] = None


class OutputDetail(BaseModel):
    DurationInMs: Optional[FieldInteger] = None
    VideoDetails: Optional[VideoDetail] = None


class Queue(BaseModel):
    Arn: Optional[FieldString] = None
    CreatedAt: Optional[FieldTimestampUnix] = None
    Description: Optional[FieldString] = None
    LastUpdated: Optional[FieldTimestampUnix] = None
    Name: FieldString
    PricingPlan_1: Optional[PricingPlan] = Field(None, alias='PricingPlan')
    ProgressingJobsCount: Optional[FieldInteger] = None
    ReservationPlan_1: Optional[ReservationPlan] = Field(None, alias='ReservationPlan')
    Status: Optional[QueueStatus] = None
    SubmittedJobsCount: Optional[FieldInteger] = None
    Type_1: Optional[Type] = Field(None, alias='Type')


class RemixSettings(BaseModel):
    ChannelMapping_1: Optional[ChannelMapping] = Field(None, alias='ChannelMapping')
    ChannelsIn: Optional[FieldIntegerMin1Max64] = None
    ChannelsOut: Optional[FieldIntegerMin1Max64] = None


class ResourceTags(BaseModel):
    Arn: Optional[FieldString] = None
    Tags: Optional[FieldMapOfString] = None


class S3DestinationSettings(BaseModel):
    AccessControl: Optional[S3DestinationAccessControl] = None
    Encryption: Optional[S3EncryptionSettings] = None


class SpekeKeyProvider(BaseModel):
    CertificateArn: Optional[FieldStringPatternArnAwsUsGovAcm] = None
    ResourceId: Optional[FieldString] = None
    SystemIds: Optional[
        FieldListOfStringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12
    ] = None
    Url: Optional[FieldStringPatternHttps] = None


class SpekeKeyProviderCmaf(BaseModel):
    CertificateArn: Optional[FieldStringPatternArnAwsUsGovAcm] = None
    DashSignaledSystemIds: Optional[
        FieldListOfStringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12
    ] = None
    HlsSignaledSystemIds: Optional[
        FieldListOfStringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12
    ] = None
    ResourceId: Optional[FieldStringPatternW] = None
    Url: Optional[FieldStringPatternHttps] = None


class TagResourceRequest(BaseModel):
    Arn: FieldString
    Tags: FieldMapOfString


class TimedMetadataInsertion(BaseModel):
    Id3Insertions: Optional[FieldListOfId3Insertion] = None


class UntagResourceRequest(BaseModel):
    TagKeys: Optional[FieldListOfString] = None


class UpdateQueueResponse(BaseModel):
    Queue_1: Optional[Queue] = Field(None, alias='Queue')


class VideoCodecSettings(BaseModel):
    Av1Settings_1: Optional[Av1Settings] = Field(None, alias='Av1Settings')
    AvcIntraSettings_1: Optional[AvcIntraSettings] = Field(
        None, alias='AvcIntraSettings'
    )
    Codec: Optional[VideoCodec] = None
    FrameCaptureSettings_1: Optional[FrameCaptureSettings] = Field(
        None, alias='FrameCaptureSettings'
    )
    H264Settings_1: Optional[H264Settings] = Field(None, alias='H264Settings')
    H265Settings_1: Optional[H265Settings] = Field(None, alias='H265Settings')
    Mpeg2Settings_1: Optional[Mpeg2Settings] = Field(None, alias='Mpeg2Settings')
    ProresSettings_1: Optional[ProresSettings] = Field(None, alias='ProresSettings')
    Vc3Settings_1: Optional[Vc3Settings] = Field(None, alias='Vc3Settings')
    Vp8Settings_1: Optional[Vp8Settings] = Field(None, alias='Vp8Settings')
    Vp9Settings_1: Optional[Vp9Settings] = Field(None, alias='Vp9Settings')
    XavcSettings_1: Optional[XavcSettings] = Field(None, alias='XavcSettings')


class VideoPreprocessor(BaseModel):
    ColorCorrector_1: Optional[ColorCorrector] = Field(None, alias='ColorCorrector')
    Deinterlacer_1: Optional[Deinterlacer] = Field(None, alias='Deinterlacer')
    DolbyVision_1: Optional[DolbyVision] = Field(None, alias='DolbyVision')
    Hdr10Plus_1: Optional[Hdr10Plus] = Field(None, alias='Hdr10Plus')
    ImageInserter_1: Optional[ImageInserter] = Field(None, alias='ImageInserter')
    NoiseReducer_1: Optional[NoiseReducer] = Field(None, alias='NoiseReducer')
    PartnerWatermarking_1: Optional[PartnerWatermarking] = Field(
        None, alias='PartnerWatermarking'
    )
    TimecodeBurnin_1: Optional[TimecodeBurnin] = Field(None, alias='TimecodeBurnin')


class FieldListOfAutomatedAbrRule(RootModel[List[AutomatedAbrRule]]):
    root: List[AutomatedAbrRule]


class FieldListOfCmafAdditionalManifest(RootModel[List[CmafAdditionalManifest]]):
    root: List[CmafAdditionalManifest]


class FieldListOfDashAdditionalManifest(RootModel[List[DashAdditionalManifest]]):
    root: List[DashAdditionalManifest]


class FieldListOfHlsAdditionalManifest(RootModel[List[HlsAdditionalManifest]]):
    root: List[HlsAdditionalManifest]


class FieldListOfMsSmoothAdditionalManifest(
    RootModel[List[MsSmoothAdditionalManifest]]
):
    root: List[MsSmoothAdditionalManifest]


class FieldListOfOutputDetail(RootModel[List[OutputDetail]]):
    root: List[OutputDetail]


class FieldListOfQueue(RootModel[List[Queue]]):
    root: List[Queue]


class FieldMapOfAudioSelectorGroup(RootModel[Optional[Dict[str, AudioSelectorGroup]]]):
    root: Optional[Dict[str, AudioSelectorGroup]] = None


class AudioDescription(BaseModel):
    AudioChannelTaggingSettings_1: Optional[AudioChannelTaggingSettings] = Field(
        None, alias='AudioChannelTaggingSettings'
    )
    AudioNormalizationSettings_1: Optional[AudioNormalizationSettings] = Field(
        None, alias='AudioNormalizationSettings'
    )
    AudioSourceName: Optional[FieldString] = None
    AudioType: Optional[FieldIntegerMin0Max255] = None
    AudioTypeControl_1: Optional[AudioTypeControl] = Field(
        None, alias='AudioTypeControl'
    )
    CodecSettings: Optional[AudioCodecSettings] = None
    CustomLanguageCode: Optional[FieldStringPatternAZaZ23AZaZ] = None
    LanguageCode_1: Optional[LanguageCode] = Field(None, alias='LanguageCode')
    LanguageCodeControl: Optional[AudioLanguageCodeControl] = None
    RemixSettings_1: Optional[RemixSettings] = Field(None, alias='RemixSettings')
    StreamName: Optional[FieldStringPatternWS] = None


class AudioSelector(BaseModel):
    AudioDurationCorrection_1: Optional[AudioDurationCorrection] = Field(
        None, alias='AudioDurationCorrection'
    )
    CustomLanguageCode: Optional[FieldStringMin3Max3PatternAZaZ3] = None
    DefaultSelection: Optional[AudioDefaultSelection] = None
    ExternalAudioFileInput: Optional[FieldStringPatternS3Https] = None
    HlsRenditionGroupSettings_1: Optional[HlsRenditionGroupSettings] = Field(
        None, alias='HlsRenditionGroupSettings'
    )
    LanguageCode_1: Optional[LanguageCode] = Field(None, alias='LanguageCode')
    Offset: Optional[FieldIntegerMinNegative2147483648Max2147483647] = None
    Pids: Optional[FieldListOfIntegerMin1Max2147483647] = None
    ProgramSelection: Optional[FieldIntegerMin0Max8] = None
    RemixSettings_1: Optional[RemixSettings] = Field(None, alias='RemixSettings')
    SelectorType: Optional[AudioSelectorType] = None
    Tracks: Optional[FieldListOfIntegerMin1Max2147483647] = None


class AutomatedAbrSettings(BaseModel):
    MaxAbrBitrate: Optional[FieldIntegerMin100000Max100000000] = None
    MaxRenditions: Optional[FieldIntegerMin3Max15] = None
    MinAbrBitrate: Optional[FieldIntegerMin100000Max100000000] = None
    Rules: Optional[FieldListOfAutomatedAbrRule] = None


class AutomatedEncodingSettings(BaseModel):
    AbrSettings: Optional[AutomatedAbrSettings] = None


class CaptionDescription(BaseModel):
    CaptionSelectorName: Optional[FieldStringMin1] = None
    CustomLanguageCode: Optional[FieldStringPatternAZaZ23AZaZ] = None
    DestinationSettings: Optional[CaptionDestinationSettings] = None
    LanguageCode_1: Optional[LanguageCode] = Field(None, alias='LanguageCode')
    LanguageDescription: Optional[FieldString] = None


class CaptionDescriptionPreset(BaseModel):
    CustomLanguageCode: Optional[FieldStringPatternAZaZ23AZaZ] = None
    DestinationSettings: Optional[CaptionDestinationSettings] = None
    LanguageCode_1: Optional[LanguageCode] = Field(None, alias='LanguageCode')
    LanguageDescription: Optional[FieldString] = None


class CaptionSelector(BaseModel):
    CustomLanguageCode: Optional[FieldStringMin3Max3PatternAZaZ3] = None
    LanguageCode_1: Optional[LanguageCode] = Field(None, alias='LanguageCode')
    SourceSettings: Optional[CaptionSourceSettings] = None


class CmafEncryptionSettings(BaseModel):
    ConstantInitializationVector: Optional[FieldStringMin32Max32Pattern09aFAF32] = None
    EncryptionMethod: Optional[CmafEncryptionType] = None
    InitializationVectorInManifest: Optional[CmafInitializationVectorInManifest] = None
    SpekeKeyProvider: Optional[SpekeKeyProviderCmaf] = None
    StaticKeyProvider_1: Optional[StaticKeyProvider] = Field(
        None, alias='StaticKeyProvider'
    )
    Type: Optional[CmafKeyProviderType] = None


class ContainerSettings(BaseModel):
    CmfcSettings_1: Optional[CmfcSettings] = Field(None, alias='CmfcSettings')
    Container: Optional[ContainerType] = None
    F4vSettings_1: Optional[F4vSettings] = Field(None, alias='F4vSettings')
    M2tsSettings_1: Optional[M2tsSettings] = Field(None, alias='M2tsSettings')
    M3u8Settings_1: Optional[M3u8Settings] = Field(None, alias='M3u8Settings')
    MovSettings_1: Optional[MovSettings] = Field(None, alias='MovSettings')
    Mp4Settings_1: Optional[Mp4Settings] = Field(None, alias='Mp4Settings')
    MpdSettings_1: Optional[MpdSettings] = Field(None, alias='MpdSettings')
    MxfSettings_1: Optional[MxfSettings] = Field(None, alias='MxfSettings')


class CreateQueueResponse(BaseModel):
    Queue_1: Optional[Queue] = Field(None, alias='Queue')


class DashIsoEncryptionSettings(BaseModel):
    PlaybackDeviceCompatibility: Optional[DashIsoPlaybackDeviceCompatibility] = None
    SpekeKeyProvider_1: Optional[SpekeKeyProvider] = Field(
        None, alias='SpekeKeyProvider'
    )


class DestinationSettings(BaseModel):
    S3Settings: Optional[S3DestinationSettings] = None


class FileGroupSettings(BaseModel):
    Destination: Optional[FieldStringPatternS3] = None
    DestinationSettings_1: Optional[DestinationSettings] = Field(
        None, alias='DestinationSettings'
    )


class GetQueueResponse(BaseModel):
    Queue_1: Optional[Queue] = Field(None, alias='Queue')


class HlsEncryptionSettings(BaseModel):
    ConstantInitializationVector: Optional[FieldStringMin32Max32Pattern09aFAF32] = None
    EncryptionMethod: Optional[HlsEncryptionType] = None
    InitializationVectorInManifest: Optional[HlsInitializationVectorInManifest] = None
    OfflineEncrypted: Optional[HlsOfflineEncrypted] = None
    SpekeKeyProvider_1: Optional[SpekeKeyProvider] = Field(
        None, alias='SpekeKeyProvider'
    )
    StaticKeyProvider_1: Optional[StaticKeyProvider] = Field(
        None, alias='StaticKeyProvider'
    )
    Type: Optional[HlsKeyProviderType] = None


class HlsGroupSettings(BaseModel):
    AdMarkers: Optional[FieldListOfHlsAdMarkers] = None
    AdditionalManifests: Optional[FieldListOfHlsAdditionalManifest] = None
    AudioOnlyHeader: Optional[HlsAudioOnlyHeader] = None
    BaseUrl: Optional[FieldString] = None
    CaptionLanguageMappings: Optional[FieldListOfHlsCaptionLanguageMapping] = None
    CaptionLanguageSetting: Optional[HlsCaptionLanguageSetting] = None
    CaptionSegmentLengthControl: Optional[HlsCaptionSegmentLengthControl] = None
    ClientCache: Optional[HlsClientCache] = None
    CodecSpecification: Optional[HlsCodecSpecification] = None
    Destination: Optional[FieldStringPatternS3] = None
    DestinationSettings_1: Optional[DestinationSettings] = Field(
        None, alias='DestinationSettings'
    )
    DirectoryStructure: Optional[HlsDirectoryStructure] = None
    Encryption: Optional[HlsEncryptionSettings] = None
    ImageBasedTrickPlay: Optional[HlsImageBasedTrickPlay] = None
    ImageBasedTrickPlaySettings: Optional[HlsImageBasedTrickPlaySettings] = None
    ManifestCompression: Optional[HlsManifestCompression] = None
    ManifestDurationFormat: Optional[HlsManifestDurationFormat] = None
    MinFinalSegmentLength: Optional[FieldDoubleMin0Max2147483647] = None
    MinSegmentLength: Optional[FieldIntegerMin0Max2147483647] = None
    OutputSelection: Optional[HlsOutputSelection] = None
    ProgramDateTime: Optional[HlsProgramDateTime] = None
    ProgramDateTimePeriod: Optional[FieldIntegerMin0Max3600] = None
    SegmentControl: Optional[HlsSegmentControl] = None
    SegmentLength: Optional[FieldIntegerMin1Max2147483647] = None
    SegmentLengthControl: Optional[HlsSegmentLengthControl] = None
    SegmentsPerSubdirectory: Optional[FieldIntegerMin1Max2147483647] = None
    StreamInfResolution: Optional[HlsStreamInfResolution] = None
    TargetDurationCompatibilityMode: Optional[HlsTargetDurationCompatibilityMode] = None
    TimedMetadataId3Frame: Optional[HlsTimedMetadataId3Frame] = None
    TimedMetadataId3Period: Optional[FieldIntegerMinNegative2147483648Max2147483647] = (
        None
    )
    TimestampDeltaMilliseconds: Optional[
        FieldIntegerMinNegative2147483648Max2147483647
    ] = None


class ListQueuesResponse(BaseModel):
    NextToken: Optional[FieldString] = None
    Queues: Optional[FieldListOfQueue] = None


class ListTagsForResourceResponse(BaseModel):
    ResourceTags_1: Optional[ResourceTags] = Field(None, alias='ResourceTags')


class MsSmoothEncryptionSettings(BaseModel):
    SpekeKeyProvider_1: Optional[SpekeKeyProvider] = Field(
        None, alias='SpekeKeyProvider'
    )


class MsSmoothGroupSettings(BaseModel):
    AdditionalManifests: Optional[FieldListOfMsSmoothAdditionalManifest] = None
    AudioDeduplication: Optional[MsSmoothAudioDeduplication] = None
    Destination: Optional[FieldStringPatternS3] = None
    DestinationSettings_1: Optional[DestinationSettings] = Field(
        None, alias='DestinationSettings'
    )
    Encryption: Optional[MsSmoothEncryptionSettings] = None
    FragmentLength: Optional[FieldIntegerMin1Max2147483647] = None
    FragmentLengthControl: Optional[MsSmoothFragmentLengthControl] = None
    ManifestEncoding: Optional[MsSmoothManifestEncoding] = None


class OutputGroupDetail(BaseModel):
    OutputDetails: Optional[FieldListOfOutputDetail] = None


class VideoDescription(BaseModel):
    AfdSignaling_1: Optional[AfdSignaling] = Field(None, alias='AfdSignaling')
    AntiAlias_1: Optional[AntiAlias] = Field(None, alias='AntiAlias')
    CodecSettings: Optional[VideoCodecSettings] = None
    ColorMetadata_1: Optional[ColorMetadata] = Field(None, alias='ColorMetadata')
    Crop: Optional[Rectangle] = None
    DropFrameTimecode_1: Optional[DropFrameTimecode] = Field(
        None, alias='DropFrameTimecode'
    )
    FixedAfd: Optional[FieldIntegerMin0Max15] = None
    Height: Optional[FieldIntegerMin32Max8192] = None
    Position: Optional[Rectangle] = None
    RespondToAfd_1: Optional[RespondToAfd] = Field(None, alias='RespondToAfd')
    ScalingBehavior_1: Optional[ScalingBehavior] = Field(None, alias='ScalingBehavior')
    Sharpness: Optional[FieldIntegerMin0Max100] = None
    TimecodeInsertion: Optional[VideoTimecodeInsertion] = None
    VideoPreprocessors: Optional[VideoPreprocessor] = None
    Width: Optional[FieldIntegerMin32Max8192] = None


class FieldListOfAudioDescription(RootModel[List[AudioDescription]]):
    root: List[AudioDescription]


class FieldListOfCaptionDescription(RootModel[List[CaptionDescription]]):
    root: List[CaptionDescription]


class FieldListOfCaptionDescriptionPreset(RootModel[List[CaptionDescriptionPreset]]):
    root: List[CaptionDescriptionPreset]


class FieldListOfOutputGroupDetail(RootModel[List[OutputGroupDetail]]):
    root: List[OutputGroupDetail]


class FieldMapOfAudioSelector(RootModel[Optional[Dict[str, AudioSelector]]]):
    root: Optional[Dict[str, AudioSelector]] = None


class FieldMapOfCaptionSelector(RootModel[Optional[Dict[str, CaptionSelector]]]):
    root: Optional[Dict[str, CaptionSelector]] = None


class Settings3(BaseModel):
    AudioDescriptions: Optional[FieldListOfAudioDescription] = None
    CaptionDescriptions: Optional[FieldListOfCaptionDescriptionPreset] = None
    ContainerSettings_1: Optional[ContainerSettings] = Field(
        None, alias='ContainerSettings'
    )
    VideoDescription_1: Optional[VideoDescription] = Field(
        None, alias='VideoDescription'
    )


class Field20170829PresetsPostRequest(BaseModel):
    category: Optional[str] = Field(
        None, description='Optional. A category for the preset you are creating.'
    )
    description: Optional[str] = Field(
        None, description='Optional. A description of the preset you are creating.'
    )
    name: str = Field(..., description='The name of the preset you are creating.')
    settings: Settings3 = Field(..., description='Settings for preset')
    tags: Optional[Dict[str, FieldString]] = Field(
        None,
        description='The tags that you want to add to the resource. You can tag resources with a key-value pair or with only a key.',
    )


class Field20170829PresetsNamePutRequest(BaseModel):
    category: Optional[str] = Field(
        None, description='The new category for the preset, if you are changing it.'
    )
    description: Optional[str] = Field(
        None, description='The new description for the preset, if you are changing it.'
    )
    settings: Optional[Settings3] = Field(None, description='Settings for preset')


class CmafGroupSettings(BaseModel):
    AdditionalManifests: Optional[FieldListOfCmafAdditionalManifest] = None
    BaseUrl: Optional[FieldString] = None
    ClientCache: Optional[CmafClientCache] = None
    CodecSpecification: Optional[CmafCodecSpecification] = None
    DashManifestStyle_1: Optional[DashManifestStyle] = Field(
        None, alias='DashManifestStyle'
    )
    Destination: Optional[FieldStringPatternS3] = None
    DestinationSettings_1: Optional[DestinationSettings] = Field(
        None, alias='DestinationSettings'
    )
    Encryption: Optional[CmafEncryptionSettings] = None
    FragmentLength: Optional[FieldIntegerMin1Max2147483647] = None
    ImageBasedTrickPlay: Optional[CmafImageBasedTrickPlay] = None
    ImageBasedTrickPlaySettings: Optional[CmafImageBasedTrickPlaySettings] = None
    ManifestCompression: Optional[CmafManifestCompression] = None
    ManifestDurationFormat: Optional[CmafManifestDurationFormat] = None
    MinBufferTime: Optional[FieldIntegerMin0Max2147483647] = None
    MinFinalSegmentLength: Optional[FieldDoubleMin0Max2147483647] = None
    MpdManifestBandwidthType: Optional[CmafMpdManifestBandwidthType] = None
    MpdProfile: Optional[CmafMpdProfile] = None
    PtsOffsetHandlingForBFrames: Optional[CmafPtsOffsetHandlingForBFrames] = None
    SegmentControl: Optional[CmafSegmentControl] = None
    SegmentLength: Optional[FieldIntegerMin1Max2147483647] = None
    SegmentLengthControl: Optional[CmafSegmentLengthControl] = None
    StreamInfResolution: Optional[CmafStreamInfResolution] = None
    TargetDurationCompatibilityMode: Optional[CmafTargetDurationCompatibilityMode] = (
        None
    )
    VideoCompositionOffsets: Optional[CmafVideoCompositionOffsets] = None
    WriteDashManifest: Optional[CmafWriteDASHManifest] = None
    WriteHlsManifest: Optional[CmafWriteHLSManifest] = None
    WriteSegmentTimelineInRepresentation: Optional[
        CmafWriteSegmentTimelineInRepresentation
    ] = None


class DashIsoGroupSettings(BaseModel):
    AdditionalManifests: Optional[FieldListOfDashAdditionalManifest] = None
    AudioChannelConfigSchemeIdUri: Optional[
        DashIsoGroupAudioChannelConfigSchemeIdUri
    ] = None
    BaseUrl: Optional[FieldString] = None
    DashManifestStyle_1: Optional[DashManifestStyle] = Field(
        None, alias='DashManifestStyle'
    )
    Destination: Optional[FieldStringPatternS3] = None
    DestinationSettings_1: Optional[DestinationSettings] = Field(
        None, alias='DestinationSettings'
    )
    Encryption: Optional[DashIsoEncryptionSettings] = None
    FragmentLength: Optional[FieldIntegerMin1Max2147483647] = None
    HbbtvCompliance: Optional[DashIsoHbbtvCompliance] = None
    ImageBasedTrickPlay: Optional[DashIsoImageBasedTrickPlay] = None
    ImageBasedTrickPlaySettings: Optional[DashIsoImageBasedTrickPlaySettings] = None
    MinBufferTime: Optional[FieldIntegerMin0Max2147483647] = None
    MinFinalSegmentLength: Optional[FieldDoubleMin0Max2147483647] = None
    MpdManifestBandwidthType: Optional[DashIsoMpdManifestBandwidthType] = None
    MpdProfile: Optional[DashIsoMpdProfile] = None
    PtsOffsetHandlingForBFrames: Optional[DashIsoPtsOffsetHandlingForBFrames] = None
    SegmentControl: Optional[DashIsoSegmentControl] = None
    SegmentLength: Optional[FieldIntegerMin1Max2147483647] = None
    SegmentLengthControl: Optional[DashIsoSegmentLengthControl] = None
    VideoCompositionOffsets: Optional[DashIsoVideoCompositionOffsets] = None
    WriteSegmentTimelineInRepresentation: Optional[
        DashIsoWriteSegmentTimelineInRepresentation
    ] = None


class Input(BaseModel):
    AudioSelectorGroups: Optional[FieldMapOfAudioSelectorGroup] = None
    AudioSelectors: Optional[FieldMapOfAudioSelector] = None
    CaptionSelectors: Optional[FieldMapOfCaptionSelector] = None
    Crop: Optional[Rectangle] = None
    DeblockFilter: Optional[InputDeblockFilter] = None
    DecryptionSettings: Optional[InputDecryptionSettings] = None
    DenoiseFilter: Optional[InputDenoiseFilter] = None
    DolbyVisionMetadataXml: Optional[FieldStringMin14PatternS3XmlXMLHttpsXmlXML] = None
    FileInput: Optional[FieldStringPatternS3Https] = None
    FilterEnable: Optional[InputFilterEnable] = None
    FilterStrength: Optional[FieldIntegerMin0Max5] = None
    ImageInserter_1: Optional[ImageInserter] = Field(None, alias='ImageInserter')
    InputClippings: Optional[FieldListOfInputClipping] = None
    InputScanType_1: Optional[InputScanType] = Field(None, alias='InputScanType')
    Position: Optional[Rectangle] = None
    ProgramNumber: Optional[FieldIntegerMin1Max2147483647] = None
    PsiControl: Optional[InputPsiControl] = None
    SupplementalImps: Optional[FieldListOfStringPatternS3ASSETMAPXml] = None
    TimecodeSource: Optional[InputTimecodeSource] = None
    TimecodeStart: Optional[FieldStringMin11Max11Pattern01D20305D205D] = None
    VideoGenerator: Optional[InputVideoGenerator] = None
    VideoSelector_1: Optional[VideoSelector] = Field(None, alias='VideoSelector')


class InputTemplate(BaseModel):
    AudioSelectorGroups: Optional[FieldMapOfAudioSelectorGroup] = None
    AudioSelectors: Optional[FieldMapOfAudioSelector] = None
    CaptionSelectors: Optional[FieldMapOfCaptionSelector] = None
    Crop: Optional[Rectangle] = None
    DeblockFilter: Optional[InputDeblockFilter] = None
    DenoiseFilter: Optional[InputDenoiseFilter] = None
    DolbyVisionMetadataXml: Optional[FieldStringMin14PatternS3XmlXMLHttpsXmlXML] = None
    FilterEnable: Optional[InputFilterEnable] = None
    FilterStrength: Optional[FieldIntegerMin0Max5] = None
    ImageInserter_1: Optional[ImageInserter] = Field(None, alias='ImageInserter')
    InputClippings: Optional[FieldListOfInputClipping] = None
    InputScanType_1: Optional[InputScanType] = Field(None, alias='InputScanType')
    Position: Optional[Rectangle] = None
    ProgramNumber: Optional[FieldIntegerMin1Max2147483647] = None
    PsiControl: Optional[InputPsiControl] = None
    TimecodeSource: Optional[InputTimecodeSource] = None
    TimecodeStart: Optional[FieldStringMin11Max11Pattern01D20305D205D] = None
    VideoSelector_1: Optional[VideoSelector] = Field(None, alias='VideoSelector')


class Output(BaseModel):
    AudioDescriptions: Optional[FieldListOfAudioDescription] = None
    CaptionDescriptions: Optional[FieldListOfCaptionDescription] = None
    ContainerSettings_1: Optional[ContainerSettings] = Field(
        None, alias='ContainerSettings'
    )
    Extension: Optional[FieldString] = None
    NameModifier: Optional[FieldStringMin1] = None
    OutputSettings_1: Optional[OutputSettings] = Field(None, alias='OutputSettings')
    Preset: Optional[FieldStringMin0] = None
    VideoDescription_1: Optional[VideoDescription] = Field(
        None, alias='VideoDescription'
    )


class OutputGroupSettings(BaseModel):
    CmafGroupSettings_1: Optional[CmafGroupSettings] = Field(
        None, alias='CmafGroupSettings'
    )
    DashIsoGroupSettings_1: Optional[DashIsoGroupSettings] = Field(
        None, alias='DashIsoGroupSettings'
    )
    FileGroupSettings_1: Optional[FileGroupSettings] = Field(
        None, alias='FileGroupSettings'
    )
    HlsGroupSettings_1: Optional[HlsGroupSettings] = Field(
        None, alias='HlsGroupSettings'
    )
    MsSmoothGroupSettings_1: Optional[MsSmoothGroupSettings] = Field(
        None, alias='MsSmoothGroupSettings'
    )
    Type: Optional[OutputGroupType] = None


class PresetSettings(BaseModel):
    AudioDescriptions: Optional[FieldListOfAudioDescription] = None
    CaptionDescriptions: Optional[FieldListOfCaptionDescriptionPreset] = None
    ContainerSettings_1: Optional[ContainerSettings] = Field(
        None, alias='ContainerSettings'
    )
    VideoDescription_1: Optional[VideoDescription] = Field(
        None, alias='VideoDescription'
    )


class UpdatePresetRequest(BaseModel):
    Category: Optional[FieldString] = None
    Description: Optional[FieldString] = None
    Settings: Optional[PresetSettings] = None


class FieldListOfInput(RootModel[List[Input]]):
    root: List[Input]


class FieldListOfInputTemplate(RootModel[List[InputTemplate]]):
    root: List[InputTemplate]


class FieldListOfOutput(RootModel[List[Output]]):
    root: List[Output]


class CreatePresetRequest(BaseModel):
    Category: Optional[FieldString] = None
    Description: Optional[FieldString] = None
    Name: FieldString
    Settings: PresetSettings
    Tags: Optional[FieldMapOfString] = None


class OutputGroup(BaseModel):
    AutomatedEncodingSettings_1: Optional[AutomatedEncodingSettings] = Field(
        None, alias='AutomatedEncodingSettings'
    )
    CustomName: Optional[FieldString] = None
    Name: Optional[FieldString] = None
    OutputGroupSettings_1: Optional[OutputGroupSettings] = Field(
        None, alias='OutputGroupSettings'
    )
    Outputs: Optional[FieldListOfOutput] = None


class Preset(BaseModel):
    Arn: Optional[FieldString] = None
    Category: Optional[FieldString] = None
    CreatedAt: Optional[FieldTimestampUnix] = None
    Description: Optional[FieldString] = None
    LastUpdated: Optional[FieldTimestampUnix] = None
    Name: FieldString
    Settings: PresetSettings
    Type_1: Optional[Type] = Field(None, alias='Type')


class UpdatePresetResponse(BaseModel):
    Preset_1: Optional[Preset] = Field(None, alias='Preset')


class FieldListOfOutputGroup(RootModel[List[OutputGroup]]):
    root: List[OutputGroup]


class FieldListOfPreset(RootModel[List[Preset]]):
    root: List[Preset]


class Settings(BaseModel):
    AdAvailOffset: Optional[FieldIntegerMinNegative1000Max1000] = None
    AvailBlanking_1: Optional[AvailBlanking] = Field(None, alias='AvailBlanking')
    Esam: Optional[EsamSettings] = None
    ExtendedDataServices_1: Optional[ExtendedDataServices] = Field(
        None, alias='ExtendedDataServices'
    )
    Inputs: Optional[FieldListOfInputTemplate] = None
    KantarWatermark: Optional[KantarWatermarkSettings] = None
    MotionImageInserter_1: Optional[MotionImageInserter] = Field(
        None, alias='MotionImageInserter'
    )
    NielsenConfiguration_1: Optional[NielsenConfiguration] = Field(
        None, alias='NielsenConfiguration'
    )
    NielsenNonLinearWatermark: Optional[NielsenNonLinearWatermarkSettings] = None
    OutputGroups: Optional[FieldListOfOutputGroup] = None
    TimecodeConfig_1: Optional[TimecodeConfig] = Field(None, alias='TimecodeConfig')
    TimedMetadataInsertion_1: Optional[TimedMetadataInsertion] = Field(
        None, alias='TimedMetadataInsertion'
    )


class Field20170829JobTemplatesPostRequest(BaseModel):
    accelerationSettings: Optional[AccelerationSettings1] = Field(
        None,
        description='Accelerated transcoding can significantly speed up jobs with long, visually complex content.',
    )
    category: Optional[str] = Field(
        None, description='Optional. A category for the job template you are creating'
    )
    description: Optional[str] = Field(
        None,
        description='Optional. A description of the job template you are creating.',
    )
    hopDestinations: Optional[List[HopDestination]] = Field(
        None,
        description='Optional. Use queue hopping to avoid overly long waits in the backlog of the queue that you submit your job to. Specify an alternate queue and the maximum time that your job will wait in the initial queue before hopping. For more information about this feature, see the AWS Elemental MediaConvert User Guide.',
    )
    name: str = Field(..., description='The name of the job template you are creating.')
    priority: Optional[conint(ge=-50, le=50)] = Field(
        None,
        description="Specify the relative priority for this job. In any given queue, the service begins processing the job with the highest value first. When more than one job has the same priority, the service begins processing the job that you submitted first. If you don't specify a priority, the service uses the default value 0.",
    )
    queue: Optional[str] = Field(
        None,
        description="Optional. The queue that jobs created from this template are assigned to. If you don't specify this, jobs will go to the default queue.",
    )
    settings: Settings = Field(
        ...,
        description='JobTemplateSettings contains all the transcode settings saved in the template that will be applied to jobs created from it.',
    )
    statusUpdateInterval: Optional[StatusUpdateInterval] = Field(
        None,
        description='Specify how often MediaConvert sends STATUS_UPDATE events to Amazon CloudWatch Events. Set the interval, in seconds, between status updates. MediaConvert sends an update at this interval from the time the service begins processing your job to the time it completes the transcode or encounters an error.',
    )
    tags: Optional[Dict[str, FieldString]] = Field(
        None,
        description='The tags that you want to add to the resource. You can tag resources with a key-value pair or with only a key.',
    )


class Field20170829JobTemplatesNamePutRequest(BaseModel):
    accelerationSettings: Optional[AccelerationSettings1] = Field(
        None,
        description='Accelerated transcoding can significantly speed up jobs with long, visually complex content.',
    )
    category: Optional[str] = Field(
        None,
        description='The new category for the job template, if you are changing it.',
    )
    description: Optional[str] = Field(
        None,
        description='The new description for the job template, if you are changing it.',
    )
    hopDestinations: Optional[List[HopDestination]] = Field(
        None, description='Optional list of hop destinations.'
    )
    priority: Optional[conint(ge=-50, le=50)] = Field(
        None,
        description="Specify the relative priority for this job. In any given queue, the service begins processing the job with the highest value first. When more than one job has the same priority, the service begins processing the job that you submitted first. If you don't specify a priority, the service uses the default value 0.",
    )
    queue: Optional[str] = Field(
        None, description='The new queue for the job template, if you are changing it.'
    )
    settings: Optional[Settings] = Field(
        None,
        description='JobTemplateSettings contains all the transcode settings saved in the template that will be applied to jobs created from it.',
    )
    statusUpdateInterval: Optional[StatusUpdateInterval] = Field(
        None,
        description='Specify how often MediaConvert sends STATUS_UPDATE events to Amazon CloudWatch Events. Set the interval, in seconds, between status updates. MediaConvert sends an update at this interval from the time the service begins processing your job to the time it completes the transcode or encounters an error.',
    )


class Settings2(BaseModel):
    AdAvailOffset: Optional[FieldIntegerMinNegative1000Max1000] = None
    AvailBlanking_1: Optional[AvailBlanking] = Field(None, alias='AvailBlanking')
    Esam: Optional[EsamSettings] = None
    ExtendedDataServices_1: Optional[ExtendedDataServices] = Field(
        None, alias='ExtendedDataServices'
    )
    Inputs: Optional[FieldListOfInput] = None
    KantarWatermark: Optional[KantarWatermarkSettings] = None
    MotionImageInserter_1: Optional[MotionImageInserter] = Field(
        None, alias='MotionImageInserter'
    )
    NielsenConfiguration_1: Optional[NielsenConfiguration] = Field(
        None, alias='NielsenConfiguration'
    )
    NielsenNonLinearWatermark: Optional[NielsenNonLinearWatermarkSettings] = None
    OutputGroups: Optional[FieldListOfOutputGroup] = None
    TimecodeConfig_1: Optional[TimecodeConfig] = Field(None, alias='TimecodeConfig')
    TimedMetadataInsertion_1: Optional[TimedMetadataInsertion] = Field(
        None, alias='TimedMetadataInsertion'
    )


class Field20170829JobsPostRequest(BaseModel):
    accelerationSettings: Optional[AccelerationSettings1] = Field(
        None,
        description='Accelerated transcoding can significantly speed up jobs with long, visually complex content.',
    )
    billingTagsSource: Optional[BillingTagsSource] = Field(
        None,
        description='The tag type that AWS Billing and Cost Management will use to sort your AWS Elemental MediaConvert costs on any billing report that you set up.',
    )
    clientRequestToken: Optional[str] = Field(
        None,
        description='Prevent duplicate jobs from being created and ensure idempotency for your requests. A client request token can be any string that includes up to 64 ASCII characters. If you reuse a client request token within one minute of a successful request, the API returns the job details of the original request instead. For more information see https://docs.aws.amazon.com/mediaconvert/latest/apireference/idempotency.html.',
    )
    hopDestinations: Optional[List[HopDestination]] = Field(
        None,
        description='Optional. Use queue hopping to avoid overly long waits in the backlog of the queue that you submit your job to. Specify an alternate queue and the maximum time that your job will wait in the initial queue before hopping. For more information about this feature, see the AWS Elemental MediaConvert User Guide.',
    )
    jobTemplate: Optional[str] = Field(
        None,
        description='Optional. When you create a job, you can either specify a job template or specify the transcoding settings individually.',
    )
    priority: Optional[conint(ge=-50, le=50)] = Field(
        None,
        description="Optional. Specify the relative priority for this job. In any given queue, the service begins processing the job with the highest value first. When more than one job has the same priority, the service begins processing the job that you submitted first. If you don't specify a priority, the service uses the default value 0.",
    )
    queue: Optional[str] = Field(
        None,
        description="Optional. When you create a job, you can specify a queue to send it to. If you don't specify, the job will go to the default queue. For more about queues, see the User Guide topic at https://docs.aws.amazon.com/mediaconvert/latest/ug/what-is.html.",
    )
    role: str = Field(
        ...,
        description='Required. The IAM role you use for creating this job. For details about permissions, see the User Guide topic at the User Guide at https://docs.aws.amazon.com/mediaconvert/latest/ug/iam-role.html.',
    )
    settings: Settings2 = Field(
        ..., description='JobSettings contains all the transcode settings for a job.'
    )
    simulateReservedQueue: Optional[SimulateReservedQueue] = Field(
        None,
        description='Enable this setting when you run a test job to estimate how many reserved transcoding slots (RTS) you need. When this is enabled, MediaConvert runs your job from an on-demand queue with similar performance to what you will see with one RTS in a reserved queue. This setting is disabled by default.',
    )
    statusUpdateInterval: Optional[StatusUpdateInterval] = Field(
        None,
        description='Specify how often MediaConvert sends STATUS_UPDATE events to Amazon CloudWatch Events. Set the interval, in seconds, between status updates. MediaConvert sends an update at this interval from the time the service begins processing your job to the time it completes the transcode or encounters an error.',
    )
    tags: Optional[Dict[str, FieldString]] = Field(
        None,
        description='Optional. The tags that you want to add to the resource. You can tag resources with a key-value pair or with only a key.  Use standard AWS tags on your job for automatic integration with AWS services and for custom integrations and workflows.',
    )
    userMetadata: Optional[Dict[str, FieldString]] = Field(
        None,
        description='Optional. User-defined metadata that you want to associate with an MediaConvert job. You specify metadata in key/value pairs.  Use only for existing integrations or workflows that rely on job metadata tags. Otherwise, we recommend that you use standard AWS tags.',
    )


class CreatePresetResponse(BaseModel):
    Preset_1: Optional[Preset] = Field(None, alias='Preset')


class GetPresetResponse(BaseModel):
    Preset_1: Optional[Preset] = Field(None, alias='Preset')


class JobSettings(BaseModel):
    AdAvailOffset: Optional[FieldIntegerMinNegative1000Max1000] = None
    AvailBlanking_1: Optional[AvailBlanking] = Field(None, alias='AvailBlanking')
    Esam: Optional[EsamSettings] = None
    ExtendedDataServices_1: Optional[ExtendedDataServices] = Field(
        None, alias='ExtendedDataServices'
    )
    Inputs: Optional[FieldListOfInput] = None
    KantarWatermark: Optional[KantarWatermarkSettings] = None
    MotionImageInserter_1: Optional[MotionImageInserter] = Field(
        None, alias='MotionImageInserter'
    )
    NielsenConfiguration_1: Optional[NielsenConfiguration] = Field(
        None, alias='NielsenConfiguration'
    )
    NielsenNonLinearWatermark: Optional[NielsenNonLinearWatermarkSettings] = None
    OutputGroups: Optional[FieldListOfOutputGroup] = None
    TimecodeConfig_1: Optional[TimecodeConfig] = Field(None, alias='TimecodeConfig')
    TimedMetadataInsertion_1: Optional[TimedMetadataInsertion] = Field(
        None, alias='TimedMetadataInsertion'
    )


class JobTemplateSettings(BaseModel):
    AdAvailOffset: Optional[FieldIntegerMinNegative1000Max1000] = None
    AvailBlanking_1: Optional[AvailBlanking] = Field(None, alias='AvailBlanking')
    Esam: Optional[EsamSettings] = None
    ExtendedDataServices_1: Optional[ExtendedDataServices] = Field(
        None, alias='ExtendedDataServices'
    )
    Inputs: Optional[FieldListOfInputTemplate] = None
    KantarWatermark: Optional[KantarWatermarkSettings] = None
    MotionImageInserter_1: Optional[MotionImageInserter] = Field(
        None, alias='MotionImageInserter'
    )
    NielsenConfiguration_1: Optional[NielsenConfiguration] = Field(
        None, alias='NielsenConfiguration'
    )
    NielsenNonLinearWatermark: Optional[NielsenNonLinearWatermarkSettings] = None
    OutputGroups: Optional[FieldListOfOutputGroup] = None
    TimecodeConfig_1: Optional[TimecodeConfig] = Field(None, alias='TimecodeConfig')
    TimedMetadataInsertion_1: Optional[TimedMetadataInsertion] = Field(
        None, alias='TimedMetadataInsertion'
    )


class ListPresetsResponse(BaseModel):
    NextToken: Optional[FieldString] = None
    Presets: Optional[FieldListOfPreset] = None


class UpdateJobTemplateRequest(BaseModel):
    AccelerationSettings_1: Optional[AccelerationSettings] = Field(
        None, alias='AccelerationSettings'
    )
    Category: Optional[FieldString] = None
    Description: Optional[FieldString] = None
    HopDestinations: Optional[FieldListOfHopDestination] = None
    Priority: Optional[FieldIntegerMinNegative50Max50] = None
    Queue: Optional[FieldString] = None
    Settings: Optional[JobTemplateSettings] = None
    StatusUpdateInterval_1: Optional[StatusUpdateInterval] = Field(
        None, alias='StatusUpdateInterval'
    )


class CreateJobRequest(BaseModel):
    AccelerationSettings_1: Optional[AccelerationSettings] = Field(
        None, alias='AccelerationSettings'
    )
    BillingTagsSource_1: Optional[BillingTagsSource] = Field(
        None, alias='BillingTagsSource'
    )
    ClientRequestToken: Optional[FieldString] = None
    HopDestinations: Optional[FieldListOfHopDestination] = None
    JobTemplate: Optional[FieldString] = None
    Priority: Optional[FieldIntegerMinNegative50Max50] = None
    Queue: Optional[FieldString] = None
    Role: FieldString
    Settings: JobSettings
    SimulateReservedQueue_1: Optional[SimulateReservedQueue] = Field(
        None, alias='SimulateReservedQueue'
    )
    StatusUpdateInterval_1: Optional[StatusUpdateInterval] = Field(
        None, alias='StatusUpdateInterval'
    )
    Tags: Optional[FieldMapOfString] = None
    UserMetadata: Optional[FieldMapOfString] = None


class CreateJobTemplateRequest(BaseModel):
    AccelerationSettings_1: Optional[AccelerationSettings] = Field(
        None, alias='AccelerationSettings'
    )
    Category: Optional[FieldString] = None
    Description: Optional[FieldString] = None
    HopDestinations: Optional[FieldListOfHopDestination] = None
    Name: FieldString
    Priority: Optional[FieldIntegerMinNegative50Max50] = None
    Queue: Optional[FieldString] = None
    Settings: JobTemplateSettings
    StatusUpdateInterval_1: Optional[StatusUpdateInterval] = Field(
        None, alias='StatusUpdateInterval'
    )
    Tags: Optional[FieldMapOfString] = None


class Job(BaseModel):
    AccelerationSettings_1: Optional[AccelerationSettings] = Field(
        None, alias='AccelerationSettings'
    )
    AccelerationStatus_1: Optional[AccelerationStatus] = Field(
        None, alias='AccelerationStatus'
    )
    Arn: Optional[FieldString] = None
    BillingTagsSource_1: Optional[BillingTagsSource] = Field(
        None, alias='BillingTagsSource'
    )
    ClientRequestToken: Optional[FieldString] = None
    CreatedAt: Optional[FieldTimestampUnix] = None
    CurrentPhase: Optional[JobPhase] = None
    ErrorCode: Optional[FieldInteger] = None
    ErrorMessage: Optional[FieldString] = None
    HopDestinations: Optional[FieldListOfHopDestination] = None
    Id: Optional[FieldString] = None
    JobPercentComplete: Optional[FieldInteger] = None
    JobTemplate: Optional[FieldString] = None
    Messages: Optional[JobMessages] = None
    OutputGroupDetails: Optional[FieldListOfOutputGroupDetail] = None
    Priority: Optional[FieldIntegerMinNegative50Max50] = None
    Queue: Optional[FieldString] = None
    QueueTransitions: Optional[FieldListOfQueueTransition] = None
    RetryCount: Optional[FieldInteger] = None
    Role: FieldString
    Settings: JobSettings
    SimulateReservedQueue_1: Optional[SimulateReservedQueue] = Field(
        None, alias='SimulateReservedQueue'
    )
    Status: Optional[JobStatus] = None
    StatusUpdateInterval_1: Optional[StatusUpdateInterval] = Field(
        None, alias='StatusUpdateInterval'
    )
    Timing_1: Optional[Timing] = Field(None, alias='Timing')
    UserMetadata: Optional[FieldMapOfString] = None
    Warnings: Optional[FieldListOfWarningGroup] = None


class JobTemplate(BaseModel):
    AccelerationSettings_1: Optional[AccelerationSettings] = Field(
        None, alias='AccelerationSettings'
    )
    Arn: Optional[FieldString] = None
    Category: Optional[FieldString] = None
    CreatedAt: Optional[FieldTimestampUnix] = None
    Description: Optional[FieldString] = None
    HopDestinations: Optional[FieldListOfHopDestination] = None
    LastUpdated: Optional[FieldTimestampUnix] = None
    Name: FieldString
    Priority: Optional[FieldIntegerMinNegative50Max50] = None
    Queue: Optional[FieldString] = None
    Settings: JobTemplateSettings
    StatusUpdateInterval_1: Optional[StatusUpdateInterval] = Field(
        None, alias='StatusUpdateInterval'
    )
    Type_1: Optional[Type] = Field(None, alias='Type')


class UpdateJobTemplateResponse(BaseModel):
    JobTemplate_1: Optional[JobTemplate] = Field(None, alias='JobTemplate')


class FieldListOfJob(RootModel[List[Job]]):
    root: List[Job]


class FieldListOfJobTemplate(RootModel[List[JobTemplate]]):
    root: List[JobTemplate]


class CreateJobResponse(BaseModel):
    Job_1: Optional[Job] = Field(None, alias='Job')


class CreateJobTemplateResponse(BaseModel):
    JobTemplate_1: Optional[JobTemplate] = Field(None, alias='JobTemplate')


class GetJobResponse(BaseModel):
    Job_1: Optional[Job] = Field(None, alias='Job')


class GetJobTemplateResponse(BaseModel):
    JobTemplate_1: Optional[JobTemplate] = Field(None, alias='JobTemplate')


class ListJobTemplatesResponse(BaseModel):
    JobTemplates: Optional[FieldListOfJobTemplate] = None
    NextToken: Optional[FieldString] = None


class ListJobsResponse(BaseModel):
    Jobs: Optional[FieldListOfJob] = None
    NextToken: Optional[FieldString] = None
